    SUBROUTINE AA.MAKEDUE.ACTIVITY.CORRECTION(ARRANGEMENT.ID)

* Purpose : System failed to update the Valid MakeDue and PR.SETTLEMENT activiy in their respective files during COB.


    $INSERT I_COMMON
    $INSERT I_EQUATE
    $INSERT I_F.AA.ACTIVITY.HISTORY
    $INSERT I_F.AA.ARRANGEMENT.ACTIVITY
    $INSERT I_F.AA.ACCOUNT.DETAILS
    $INSERT I_F.AA.BILL.DETAILS
    $INSERT I_F.AA.ACCOUNT.DETAILS
    $INSERT I_F.AA.ARRANGEMENT
    $INSERT I_F.AA.ACTIVITY.BALANCES
    $INSERT I_AA.MAKEDUE.ACTIVITY.CORRECTION.COMMON
    $INSERT I_F.AA.ACCOUNT.MOVEMENT


    CALL F.READ(FN.AA.ARRANGEMENT, ARRANGEMENT.ID, R.AA.ARRANGEMENT, F.AA.ARRANGEMENT, ERR.AA.ARRANGEMENT)
    ACCOUNT.ID = R.AA.ARRANGEMENT<AA.ARR.LINKED.APPL.ID>

    R.AA.ACTIVITY.HISTORY = ""
    ERR.AA.ACTIVITY.HISTORY = ""
    CALL F.READ(FN.AA.ACTIVITY.HISTORY, ARRANGEMENT.ID, R.AA.ACTIVITY.HISTORY, F.AA.ACTIVITY.HISTORY, ERR.AA.ACTIVITY.HISTORY)

    FINDSTR "UNAUTH" IN R.AA.ACTIVITY.HISTORY<AA.AH.ACT.STATUS> SETTING FM.POS, VM.POS, SM.POS THEN
        IF R.AA.ACTIVITY.HISTORY<AA.AH.ACTIVITY,VM.POS,SM.POS> EQ "LENDING-MAKEDUE-REPAYMENT.SCHEDULE" THEN
            EFFECTIVE.DATE = R.AA.ACTIVITY.HISTORY<AA.AH.EFFECTIVE.DATE, VM.POS>

            IF R.AA.ACTIVITY.HISTORY<AA.AH.ACT.STATUS,VM.POS,SM.POS> EQ "UNAUTH" THEN
                ACTIVITY.REF = R.AA.ACTIVITY.HISTORY<AA.AH.ACTIVITY.REF, VM.POS,SM.POS>
                EXISTING.ACTIVITY.REF = ACTIVITY.REF
                UNAUTH.MAKEDUE<-1> = ARRANGEMENT.ID :'-':ACTIVITY.REF
                CALL F.WRITE(FN.AA.UNAUTH.MAKEDUE, ARRANGEMENT.ID, UNAUTH.MAKEDUE)
                GOSUB PROCESS.MAKEDUE.ACT
            END

        END
    END ELSE

        R.AA.ACCOUNT.MOVEMENT = ""
        ERR.AA.ACCOUNT.MOVEMENT = ""

        CALL F.READ(FN.AA.ACCOUNT.MOVEMENT, ACCOUNT.ID, R.AA.ACCOUNT.MOVEMENT, F.AA.ACCOUNT.MOVEMENT, ERR.AA.ACCOUNT.MOVEMENT)

        IF R.AA.ACCOUNT.MOVEMENT THEN
            MAKEDUE.ID = R.AA.ACCOUNT.MOVEMENT<AA.MVMT.ARR.ACTIVITY.ID,1>

            FINDSTR MAKEDUE.ID IN R.AA.ACTIVITY.HISTORY<AA.AH.ACTIVITY.REF> SETTING FM.POS, VM.POS, SM.POS THEN
                EFFECTIVE.DATE = R.AA.ACCOUNT.MOVEMENT<AA.MVMT.NAU.VALUE.DATE,1,1>
                GOSUB PROCESS.MAKEDUE.ACT

                IF UNAUTH.MAKEDUE THEN
                    CALL F.WRITE(FN.AA.UNAUTH.MAKEDUE, ARRANGEMENT.ID, UNAUTH.MAKEDUE)
                END
            END

        END

    END

    RETURN

PROCESS.MAKEDUE.ACT:

    ACTIVITY = "LENDING-MAKEDUE-REPAYMENT.SCHEDULE"

    SEL.CMD = "SELECT FBNK.AA.ARRANGEMENT.ACTIVITY WITH ACTIVITY EQ LENDING-MAKEDUE-REPAYMENT.SCHEDULE AND EFFECTIVE.DATE EQ ":EFFECTIVE.DATE :" AND ARRANGEMENT EQ ":ARRANGEMENT.ID
    CALL EB.READLIST(SEL.CMD,SEL.LIST,'',SEL.CNT,SEL.ERR)

    LOOP
        REMOVE ACTIVITY.REF FROM SEL.LIST SETTING ACT.REF.POS
    WHILE ACTIVITY.REF : ACT.REF.POS

        R.AA.ARRANGEMENT.ACTIVITY = ""
        ERR.AA.ARRANGEMENT.ACTIVITY = ""

        CALL F.READ(FN.AA.ARRANGEMENT.ACTIVITY, ACTIVITY.REF, R.AA.ARRANGEMENT.ACTIVITY, F.AA.ARRANGEMENT.ACTIVITY, ERR.AA.ARRANGEMENT.ACTIVITY)

        IF R.AA.ARRANGEMENT.ACTIVITY<AA.ARR.ACT.STMT.NOS> EQ "VAL" OR R.AA.ARRANGEMENT.ACTIVITY<AA.ARR.ACT.STMT.NOS> EQ "" THEN
            GOSUB CHECK.ENTRY.HOLD
        END ELSE

            FINDSTR ACTIVITY.REF IN R.AA.ACTIVITY.HISTORY<AA.AH.ACTIVITY.REF> SETTING FM.POS1,VM.POS1,SM.POS1 ELSE
                UNAUTH.MAKEDUE = ARRANGEMENT.ID :'-': EFFECTIVE.DATE
                R.AA.ACTIVITY.HISTORY<AA.AH.ACTIVITY.REF, VM.POS,SM.POS> = ACTIVITY.REF   ;*Replace the correct activity.
                R.AA.ACTIVITY.HISTORY<AA.AH.ACT.STATUS,VM.POS,SM.POS> = "AUTH"

                GOSUB CHECK.CHILD.ACTIVITY
                GOSUB CHECK.AA.ACTIVITY.BALANCES

            END
        END
    REPEAT

    RETURN

CHECK.CHILD.ACTIVITY:

    CHILD.ACTIVITY = R.AA.ARRANGEMENT.ACTIVITY<AA.ARR.ACT.CHILD.ACTIVITY>

    FINDSTR CHILD.ACTIVITY IN R.AA.ACTIVITY.HISTORY<AA.AH.ACTIVITY.REF> SETTING FM.POS1,VM.POS1,SM.POS1 ELSE

        R.AA.ARRANGEMENT.ACTIVITY = ""
        ERR.AA.ARRANGEMENT.ACTIVITY = ""

        CALL F.READ(FN.AA.ARRANGEMENT.ACTIVITY, CHILD.ACTIVITY, R.AA.ARRANGEMENT.ACTIVITY, F.AA.ARRANGEMENT.ACTIVITY, ERR.AA.ARRANGEMENT.ACTIVITY)

        IF R.AA.ARRANGEMENT.ACTIVITY<AA.ARR.ACT.ACTIVITY> EQ "LENDING-SETTLE-PR.REPAYMENT" THEN
            TXN.AMOUNT = R.AA.ARRANGEMENT.ACTIVITY<AA.ARR.ACT.TXN.AMOUNT>
            INS CHILD.ACTIVITY BEFORE R.AA.ACTIVITY.HISTORY<AA.AH.ACTIVITY.REF, VM.POS,SM.POS>
            INS R.AA.ARRANGEMENT.ACTIVITY<AA.ARR.ACT.ACTIVITY> BEFORE R.AA.ACTIVITY.HISTORY<AA.AH.ACTIVITY,VM.POS,SM.POS>
            INS R.AA.ACTIVITY.HISTORY<AA.AH.SYSTEM.DATE,VM.POS,SM.POS> BEFORE R.AA.ACTIVITY.HISTORY<AA.AH.SYSTEM.DATE,VM.POS,SM.POS>
            INS TXN.AMOUNT BEFORE R.AA.ACTIVITY.HISTORY<AA.AH.ACTIVITY.AMT,VM.POS,SM.POS>
            INS "AUTH" BEFORE R.AA.ACTIVITY.HISTORY<AA.AH.ACT.STATUS,VM.POS,SM.POS>
            INS "SECONDARY" BEFORE R.AA.ACTIVITY.HISTORY<AA.AH.INITIATION,VM.POS,SM.POS>

            GOSUB PROCESS.ACCOUNT.DETAILS

            ARRANGEMENT.ID = ARRANGEMENT.ID
            CALL F.WRITE(FN.AA.ACTIVITY.HISTORY, ARRANGEMENT.ID, R.AA.ACTIVITY.HISTORY)
        END

    END

    RETURN

PROCESS.ACCOUNT.DETAILS:

    R.AA.ACCOUNT.DETAILS = ""
    ERR.AA.ACCOUNT.DETAILS = ""

    CALL F.READ(FN.AA.ACCOUNT.DETAILS, ARRANGEMENT.ID, R.AA.ACCOUNT.DETAILS, F.AA.ACCOUNT.DETAILS, ERR.AA.ACCOUNT.DETAILS)

    LOCATE EFFECTIVE.DATE IN R.AA.ACCOUNT.DETAILS<AA.AD.BILL.PAY.DATE,1> SETTING PAY.DATE.POS THEN
        BILL.ID = R.AA.ACCOUNT.DETAILS<AA.AD.BILL.ID, PAY.DATE.POS>

        R.AA.BILL.DETAILS = ""
        ERR.AA.BILL.DETAILS = ""

        CALL F.READ(FN.AA.BILL.DETAILS, BILL.ID, R.AA.BILL.DETAILS, F.AA.BILL.DETAILS, ERR.AA.BILL.DETAILS)

        IF R.AA.BILL.DETAILS<AA.BD.OS.TOTAL.AMOUNT> LE 0 THEN

            REPAY.REF = R.AA.BILL.DETAILS<AA.BD.REPAY.REF>
            CHANGE SM TO VM IN REPAY.REF
            TOTAL.REP.REF = DCOUNT(REPAY.REF, VM)
            REP.CNT = 1

            LOOP
            WHILE REP.CNT LE TOTAL.REP.REF

                REPAY.REF.ACT = FIELD(REPAY.REF<1,REP.CNT>, "-", 1)

                R.AA.ARRANGEMENT.ACTIVITY = ""
                ERR.AA.ARRANGEMENT.ACTIVITY = ""

                CALL F.READ(FN.AA.ARRANGEMENT.ACTIVITY, REPAY.REF.ACT, R.AA.ARRANGEMENT.ACTIVITY, F.AA.ARRANGEMENT.ACTIVITY, ERR.AA.ARRANGEMENT.ACTIVITY)

                IF R.AA.ARRANGEMENT.ACTIVITY<AA.ARR.ACT.STMT.NOS> ELSE
                    R.AA.BILL.DETAILS<AA.BD.REPAY.REF, REP.CNT,1> = CHILD.ACTIVITY:'-':FIELD(REPAY.REF<1,REP.CNT>, "-", 2)
                    R.AA.BILL.DETAILS<AA.BD.AGING.REF,1> = CHILD.ACTIVITY
                    R.AA.BILL.DETAILS<AA.BD.DUE.REFERENCE> = ACTIVITY.REF
                END
                REP.CNT + = 1
            REPEAT

            CALL F.WRITE(FN.AA.BILL.DETAILS, BILL.ID, R.AA.BILL.DETAILS)

            IF R.AA.ACCOUNT.DETAILS<AA.AD.BILL.STATUS, PAY.DATE.POS,1> EQ "DUE" THEN
                R.AA.ACCOUNT.DETAILS<AA.AD.BILL.STATUS, PAY.DATE.POS,1> = "SETTLED"
            END
            IF R.AA.ACCOUNT.DETAILS<AA.AD.SET.STATUS, PAY.DATE.POS,1> EQ "UNPAID" THEN
                R.AA.ACCOUNT.DETAILS<AA.AD.SET.STATUS, PAY.DATE.POS,1> = "REPAID"
            END

            IF R.AA.ACCOUNT.DETAILS<AA.AD.AGING.STATUS, PAY.DATE.POS,1> EQ "DUE" THEN
                R.AA.ACCOUNT.DETAILS<AA.AD.AGING.STATUS, PAY.DATE.POS,1> = "SETTLED"
            END


            FINDSTR BILL.ID IN R.AA.ACCOUNT.DETAILS<AA.AD.RPY.BILL.ID> SETTING FM.POS, VM.POS, SM.POS ELSE
                REPAY.REFERENCE = R.AA.ACCOUNT.DETAILS<AA.AD.REPAY.REFERENCE>
                FOUND.FLAG = 0
                REC.CNT =1
                TOT.REPAY.REF = DCOUNT(REPAY.REFERENCE, VM)

                LOOP
                WHILE REC.CNT LE TOT.REPAY.REF

                    IF EFFECTIVE.DATE GT FIELD(REPAY.REFERENCE<REC.CNT>, "-",2) AND EFFECTIVE.DATE LT FIELD(REPAY.REFERENCE<REC.CNT+1>, "-",2) THEN
                        INS CHILD.ACTIVITY:'-':EFFECTIVE.DATE BEFORE R.AA.ACCOUNT.DETAILS<AA.AD.REPAY.REFERENCE, REC.CNT+1>
                        INS BILL.ID BEFORE R.AA.ACCOUNT.DETAILS<AA.AD.RPY.BILL.ID, REC.CNT+1>
                        REC.CNT = TOT.REPAY.REF
                        FOUND.FLAG = 1
                    END

                    REC.CNT + =1
                REPEAT

                IF NOT(FOUND.FLAG) THEN
                    R.AA.ACCOUNT.DETAILS<AA.AD.REPAY.REFERENCE, TOT.REPAY.REF+1> = CHILD.ACTIVITY:'-':EFFECTIVE.DATE
                    R.AA.ACCOUNT.DETAILS<AA.AD.RPY.BILL.ID, TOT.REPAY.REF+1> = BILL.ID
                END

            END

            CALL F.WRITE(FN.AA.ACCOUNT.DETAILS, ARRANGEMENT.ID, R.AA.ACCOUNT.DETAILS)

            R.AA.ACCOUNT.MOVEMENT = ""
            ERR.AA.ACCOUNT.MOVEMENT = ""

            CALL F.READ(FN.AA.ACCOUNT.MOVEMENT, ACCOUNT.ID, R.AA.ACCOUNT.MOVEMENT, F.AA.ACCOUNT.MOVEMENT, ERR.AA.ACCOUNT.MOVEMENT)
            IF R.AA.ACCOUNT.MOVEMENT THEN
                CALL F.DELETE(FN.AA.ACCOUNT.MOVEMENT, ACCOUNT.ID)
            END
        END
    END

    RETURN

CHECK.AA.ACTIVITY.BALANCES:

    R.AA.ACTIVITY.BALANCES = ""
    ERR.AA.ACTIVITY.BALANCES = ""
    CALL F.READ(FN.AA.ACTIVITY.BALANCES, ARRANGEMENT.ID, R.AA.ACTIVITY.BALANCES, F.AA.ACTIVITY.BALANCES, ERR.AA.ACTIVITY.BALANCES)

    LOCATE CHILD.ACTIVITY IN R.AA.ACTIVITY.BALANCES<AA.ACT.BAL.ACTIVITY.REF, 1> SETTING ACT.BAL.POS ELSE

        LOCATE EFFECTIVE.DATE IN R.AA.ACTIVITY.BALANCES<AA.ACT.BAL.ACTIVITY.DATE, 1> SETTING ACT.BAL.POS THEN
            R.AA.ACTIVITY.BALANCES<AA.ACT.BAL.ACTIVITY.REF, ACT.BAL.POS> = CHILD.ACTIVITY
            CALL F.WRITE(FN.AA.ACTIVITY.BALANCES, ARRANGEMENT.ID, R.AA.ACTIVITY.BALANCES)
        END

    END

    RETURN

CHECK.ENTRY.HOLD:

    R.ENTRY.HOLD = ""
    ERR.ENTRY.HOLD = ""

    HOLD.ID = "AAA":ACTIVITY.REF
    CALL F.READ(FN.ENTRY.HOLD, HOLD.ID, R.ENTRY.HOLD, F.ENTRY.HOLD, ERR.ENTRY.HOLD)

    IF R.ENTRY.HOLD THEN
        CALL F.DELETE(FN.ENTRY.HOLD, HOLD.ID)
    END

    RETURN

END
