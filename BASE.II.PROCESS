    SUBROUTINE BASE.II.PROCESS(BASE.II.ID)
*-----------------------------------------------------------------------------------------------------------------
*Modification Details:
*=====================

* Nuha Tuhul    12-06-2019               add IMD  536346                       *
* Nuha Tuhul    19-07-2020               add account card holder               *
*-----------------------------------------------------------------------------------------------------------------
    $INSERT T24.BP I_COMMON
    $INSERT T24.BP I_EQUATE
    $INSERT T24.BP I_GTS.COMMON
    $INSERT T24.BP I_F.CURRENCY
    $INSERT T24.BP I_F.NUMERIC.CURRENCY
    $INSERT T24.BP I_F.ACCOUNT
    $INCLUDE T24.BP I_F.ALTERNATE.ACCOUNT
    $INCLUDE ATM.BP I_F.INTRF.MESSAGE
    $INCLUDE ATM.BP I_F.ATM.BASE.TRANSACTIONS
    $INCLUDE ATM.BP I_F.ATM.BASE.PARAM
    $INCLUDE ATM.BP I_F.ATM.CHARGE.TABLE
    $INCLUDE ATM.BP I_AT.ISO.COMMON
    $INCLUDE ATM.BP I_ATM.BASE.II.FIELDS.COMMON
    $INCLUDE CAB.BP I_BASE.II.PROCESS.COMMON
    $INCLUDE CAB.BP I_F.BASE.II.CONCAT

    OFS$SOURCE.ID = OFS.ID
    OFS$SOURCE.REC = OFS.SOURCE.REC

    CALL F.READ(FN.BASE.II.CONCAT,BASE.II.ID,R.BASE.II.REC,F.BASE.II.CONCAT,B.ERR)
    STAN.NO = R.BASE.II.REC<BASE.II.SYSTEM.TRACE.AUDIT.NUMBER>
    TXN.DATE = R.BASE.II.REC<BASE.II.TRANSACTION.DATE>
    TXN.DATE = TXN.DATE[1,6]
    TXN.TIME = R.BASE.II.REC<BASE.II.TRANSACTION.TIME>
    BIN.NO = R.BASE.II.REC<BASE.II.ACQUIRING.INSTITUTION.IDENT.CODE>
    RRN.NO = R.BASE.II.REC<BASE.II.RETREIVAL.REFERENCE.NUMER>
**    RRN.NO = RRN.NO[2,LEN(RRN.NO)-1]
    AUTH.CODE = R.BASE.II.REC<BASE.II.AUTHORISATION.CODE>
    EXT.NW.ID = R.BASE.II.REC<BASE.II.EXTERNAL.NETWORK.IDENTIFIER>
    TRANS.TYPE = R.BASE.II.REC<BASE.II.TRANSACTION.TYPE>
    YR.DEST.IMD = R.BASE.II.REC<BASE.II.DEST.IMD>
    YR.SRC.COUNTRY = R.BASE.II.REC<BASE.II.SRC.COUNTRY.CODE>
    YR.CATEGORY.CODE = R.BASE.II.REC<BASE.II.MERCHANT.CATEGORY.CODE>
    BEGIN CASE

    CASE YR.DEST.IMD MATCHES "527277":VM:"538871":VM:"544378":VM:"536346"
        CREDIT.ACCT.NO = MAST.ACCT.NO
        TRAN.TYPE.LIST = R.ATM.CHARGE.TABLE.MAST<AT.CHG.PROC.CODE>
        COMM.CODE.LIST = R.ATM.CHARGE.TABLE.MAST<AT.CHG.COMM.TYPE>
        FT.TXN.TYPE = FT.TXN.TYPE.MAS
        IF YR.SRC.COUNTRY NE R.BASE.II.REC<BASE.II.LOCAL.CURRENCY.CODE> THEN
            CREDIT.ACCT.NO = MAST.ACCT.NO.EXT
            FT.TXN.TYPE = FT.TXN.TYPE.EXT
        END
        IF YR.CATEGORY.CODE EQ '6011' THEN
            CREDIT.ACCT.NO = MAST.ACCT.NO.ATM
            FT.TXN.TYPE = FT.TXN.TYPE.ATM
        END
    CASE EXT.NW.ID EQ "BDB"
        CREDIT.ACCT.NO = JONET.ACCT.NO
        TRAN.TYPE.LIST = R.ATM.CHARGE.TABLE.JONET<AT.CHG.PROC.CODE>
        COMM.CODE.LIST = R.ATM.CHARGE.TABLE.JONET<AT.CHG.COMM.TYPE>
        FT.TXN.TYPE = FT.TXN.TYPE.JONET
    CASE EXT.NW.ID EQ "ENA"
        CREDIT.ACCT.NO = VISA.ACCT.NO
        TRAN.TYPE.LIST = R.ATM.CHARGE.TABLE.VISA<AT.CHG.PROC.CODE>
        COMM.CODE.LIST = R.ATM.CHARGE.TABLE.VISA<AT.CHG.COMM.TYPE>
        FT.TXN.TYPE = FT.TXN.TYPE.VISA
    END CASE


    ATM.BASE.ID = STAN.NO:".":TXN.DATE:".":TXN.TIME:".":BIN.NO:".":RRN.NO:".":AUTH.CODE

    CALL F.READ(FN.ATM.BASE.TRANSACTIONS,ATM.BASE.ID,R.ATM.BASE.TRANSACTIONS,F.ATM.BASE.TRANSACTIONS,R.ATM.BASE.TRANSACTIONS.ERR)
    IF R.ATM.BASE.TRANSACTIONS EQ '' THEN
        ATM.BASE.ID = STAN.NO:".":TXN.DATE:".":TXN.TIME:".":BIN.NO:".":RRN.NO
        CALL F.READ(FN.ATM.BASE.TRANSACTIONS,ATM.BASE.ID,R.ATM.BASE.TRANSACTIONS,F.ATM.BASE.TRANSACTIONS,R.ATM.BASE.TRANSACTIONS.ERR.1)
    END

    CB.AMOUNT = R.BASE.II.REC<BASE.II.BILLING.CASHBACK.AMOUNT>
    CB.AMOUNT = CB.AMOUNT[2,LEN(CB.AMOUNT)-1]

    IF CB.AMOUNT GT 0 THEN
        ATM.BASE.ID = STAN.NO:".":TXN.DATE:".":TXN.TIME:".":BIN.NO:".":RRN.NO:".":AUTH.CODE:".":STAN.NO
        CALL F.READ(FN.ATM.BASE.TRANSACTIONS,ATM.BASE.ID,R.ATM.BASE.TRANSACTIONS,F.ATM.BASE.TRANSACTIONS,R.ATM.BASE.TRANSACTIONS.ERR)
    END
    MERCHANT.NAME = R.ATM.BASE.TRANSACTIONS<AT.BASE.CARD.ACCP.DETS>
    IF MERCHANT.NAME EQ '' THEN
        MERCHANT.NAME = R.BASE.II.REC<BASE.II.CARD.ACCEPTOR.NAME.LOCATION>
    END
    MERCHANT.NAME = TRIM(MERCHANT.NAME)[1,65]
    IF R.ATM.BASE.TRANSACTIONS<AT.BASE.MSG.STATUS> EQ 'PROCESSED' THEN
        LOG.DETS = "Duplicate message for ":ATM.BASE.ID
        LOG.REC = LOG.DETS
        GOSUB UPDATE.LOG.FILES
        CALL F.DELETE(FN.BASE.II.CONCAT,BASE.II.ID)
        RETURN
    END
    CUST.ACCT = R.BASE.II.REC<BASE.II.SRC.ACCOUNT>
    CUST.ACCT = TRIM(CUST.ACCT," ","B")
    R.ALT.ACCT = ''
    CALL F.READ(FN.ALTERNATE.ACCOUNT,CUST.ACCT,R.ALT.ACCT,F.ALTERNATE.ACCOUNT,ALT.ERR)
    IF R.ALT.ACCT EQ '' THEN
        CUST.ACCT = CUST.ACCT[2,LEN(CUST.ACCT)-1]
    END ELSE
        CUST.ACCT = R.ALT.ACCT<AAC.GLOBUS.ACCT.NUMBER>
    END
    GOSUB GET.CUST.CURRENCY
    OTHER.ACCT = CREDIT.ACCT.NO

    CCY.ID = R.BASE.II.REC<BASE.II.LOCAL.CURRENCY.CODE>
    CALL CACHE.READ(FN.NUMERIC.CURRENCY,CCY.ID,R.NUMERIC.CURRENCY,R.NUMERIC.CURRENCY.ERR)
    IF R.NUMERIC.CURRENCY THEN
        CCY.CODE = R.NUMERIC.CURRENCY<EB.NCN.CURRENCY.CODE>
    END

    CALL CACHE.READ(FN.CURRENCY,CCY.CODE,R.CURRENCY,R.CURRENCY.ERR)

    IF R.CURRENCY NE '' THEN
        CURR.DEC = R.CURRENCY<EB.CUR.NO.OF.DECIMALS>
        DIV.VAL = PWR(10,CURR.DEC)
    END
    IF CCY.CODE NE ACC.CCY.CODE THEN
        R.ACC.CURRENCY = '' ; CURRENCY.ERR = ''
        CALL CACHE.READ(FN.CURRENCY,ACC.CCY.CODE,R.ACC.CURRENCY,CURRENCY.ERR)
        ACC.CURR.DEC = R.ACC.CURRENCY<EB.CUR.NO.OF.DECIMALS>
        ACC.DIV.VAL = PWR(10,ACC.CURR.DEC)
    END
    AMOUNT = R.BASE.II.REC<BASE.II.AMOUNT3>
**    AMOUNT = R.BASE.II.REC<BASE.II.AMOUNT1>
    AMOUNT = AMOUNT[2,LEN(AMOUNT)-1]
    AMOUNT = AMOUNT/DIV.VAL
**Charges/S
    CHG.AMOUNT.1 = R.BASE.II.REC<BASE.II.AMOUNT4>
    IF ACC.CURR.DEC NE '' THEN
        CHG.AMOUNT.1 = CHG.AMOUNT.1[2,LEN(AMOUNT.2)-1]
        CHG.AMOUNT.1= CHG.AMOUNT.1/DIV.VAL        ;*Lokesh 02 Aug 2017
    END ELSE
        CHG.AMOUNT.1 = CHG.AMOUNT.1[2,LEN(CHG.AMOUNT.1)-1]
        CHG.AMOUNT.1 = CHG.AMOUNT.1/DIV.VAL
    END
    AMOUNT.2 = R.BASE.II.REC<BASE.II.AMOUNT1>
    IF ACC.CURR.DEC NE '' THEN
        AMOUNT.2 = AMOUNT.2[2,LEN(AMOUNT.2)-1]
        AMOUNT.2= AMOUNT.2/DIV.VAL      ;* Lokesh 02 Aug 2017
    END ELSE
        AMOUNT.2 = AMOUNT.2[2,LEN(AMOUNT.2)-1]
        AMOUNT.2=AMOUNT.2/DIV.VAL
    END
    CHG.AMOUNT.2 = AMOUNT.2-AMOUNT-CHG.AMOUNT.1
**Charges/E

    SETT.RATE = R.BASE.II.REC<BASE.II.SETTLEMENT.CONVERSION.RATE>
    NO.OF.DEC.RATE = SETT.RATE[1,1]
    SETT.RATE = SETT.RATE[2,LEN(SETT.RATE)-1]
    RATE.DIV.VAL = PWR(10,NO.OF.DEC.RATE)
    SETT.RATE = SETT.RATE/RATE.DIV.VAL

*Changes for Treasury Rate/S
    IF SETT.RATE EQ "1" THEN
        SETT.RATE = ''
    END
*Changes for Treasury Rate/E

*    CB.AMOUNT = R.BASE.II.REC<BASE.II.BILLING.CASHBACK.AMOUNT>
*    CB.AMOUNT = CB.AMOUNT[2,LEN(CB.AMOUNT)-1]
    CB.AMOUNT = CB.AMOUNT/DIV.VAL

    IF CB.AMOUNT GT 0 THEN
**Changes for Cash back/S
*        GOSUB GET.CUST.CURRENCY
**Changes for Cash back/E
        GOSUB POST.CASHBACK.TXN
        GOSUB UPDATE.REV.REC
        IF R.ATM.BASE.TRANSACTIONS<AT.BASE.MSG.STATUS> EQ 'PROCESSED' THEN
            CALL F.DELETE(FN.BASE.II.CONCAT,BASE.II.ID)
        END
        RETURN
    END

    IF TRANS.TYPE EQ '09' THEN
*        GOSUB GET.CUST.CURRENCY
        GOSUB VALIDATE.VMT.TXN.REC
        IF STATUS.MSG EQ '1' THEN
            GOSUB POST.VMT.TXN
        END
        GOSUB UPDATE.REV.REC
        GOSUB UPDATE.LOG.REC
        IF R.ATM.BASE.TRANSACTIONS<AT.BASE.MSG.STATUS> EQ 'PROCESSED' THEN
            CALL F.DELETE(FN.BASE.II.CONCAT,BASE.II.ID)
        END
        RETURN
    END


    IF R.ATM.BASE.TRANSACTIONS THEN
        ACLK.TXN.ID = R.ATM.BASE.TRANSACTIONS<AT.BASE.ACLK.TXN.ID>
        Y.COMP.CODE = R.ATM.BASE.TRANSACTIONS<AT.BASE.ACLK.COMP.CODE>

        IF ACLK.TXN.ID[1,1] EQ 'R' THEN
            LOG.DETS='Duplicate ':AUTH.CODE:' - ':BASE.II.ID
            FAILURE.REC<-1>=LOG.DETS
            LOG.REC = LOG.DETS
            GOSUB UPDATE.LOG.FILES
            CALL F.DELETE(FN.BASE.II.CONCAT,BASE.II.ID)
            RETURN
        END

*        GOSUB GET.CUST.CURRENCY
        GOSUB GET.BASEII.CHARGES
        GOSUB VALIDATE.FT.REC

        IF STATUS.MSG EQ '1' THEN
            OFS.FUNCTION = 'R'
            PROCESS.TYPE = "PROCESS"
            ACLK.REV.OFS.MSG = ACLK.OFS.VERSION:'/':OFS.FUNCTION:'/':PROCESS.TYPE:',':USERNAME:'/':PASSWORD:'/':Y.COMP.CODE:",":ACLK.TXN.ID
            LOG.DETS = "AC.LOCKED.EVENTS Reversal request - ":ACLK.REV.OFS.MSG
            LOG.REC = LOG.DETS
            GOSUB UPDATE.LOG.FILES

            CALL !HUSHIT(1)
            OFS$SOURCE.ID = OFS.ID
            OFS$SOURCE.REC = OFS.SOURCE.REC
            CALL OFS.BULK.MANAGER(ACLK.REV.OFS.MSG,ACLK.REV.OFS.RES,Y.COMMIT.ACL)
            CALL !HUSHIT(0)

            ACLK.STATUS = FIELD(ACLK.REV.OFS.RES,',',1)
            TXN.ID=FIELD(ACLK.REV.OFS.RES,'/',1)
            ACLK.STATUS = FIELD(ACLK.STATUS,'/',3)

            IF ACLK.STATUS NE '1' THEN
                LOG.DETS='Unable to reverse Base1 - ':BASE.II.ID
                LOG.REC = LOG.DETS
                GOSUB UPDATE.LOG.FILES
            END

            LOG.DETS = "AC.LOCKED.EVENTS Reveral response - ":ACLK.REV.OFS.MSG
            LOG.REC = LOG.DETS
            GOSUB UPDATE.LOG.FILES
            GOSUB POST.FT.TXN
            GOSUB UPDATE.REV.REC        ;* Update ATM.BASE.TRANSACTONS record
        END ELSE
            LOG.DETS='Base2 validation error for ':AUTH.CODE:' - ':BASE.II.ID
            FAILURE.REC<-1>=LOG.DETS
            LOG.REC = LOG.DETS
            GOSUB UPDATE.LOG.FILES
            TRANSACTION.STATUS = "BASE.II.VAL.FAILED"
            GOSUB UPDATE.REV.REC
        END
    END ELSE
        LOG.DETS='Base1 missing for ':AUTH.CODE:' - ':BASE.II.ID
        FAILURE.REC<-1>=LOG.DETS
        LOG.REC = LOG.DETS
        GOSUB UPDATE.LOG.FILES
*        GOSUB GET.CUST.CURRENCY
        GOSUB GET.BASEII.CHARGES
        GOSUB VALIDATE.FT.REC
        IF STATUS.MSG EQ 1 THEN
            GOSUB POST.FT.TXN
        END
        IF TRANSACTION.STATUS EQ "PROCESSED" THEN
            TRANSACTION.STATUS = "NO.MATCH"
        END
        GOSUB UPDATE.REV.REC
    END
    GOSUB UPDATE.LOG.REC
**    IF R.ATM.BASE.TRANSACTIONS<AT.BASE.MSG.STATUS> EQ 'PROCESSED' THEN
    CALL F.DELETE(FN.BASE.II.CONCAT,BASE.II.ID)
**    END

    RETURN
*---------------------------------------------------------------------------------------------------------------*
VALIDATE.FT.REC:
*--------------*
**Charges/S
    Y.COMP.CODE = YR.COMPANY.CODE
**Charges/E
    PROCESS.TYPE = "VALIDATE"
    OFS.FUNCTION = 'I'
    FT.VAL.OFS.MSG = FT.OFS.VERSION:'/':OFS.FUNCTION:'/':PROCESS.TYPE:',':USERNAME:'/':PASSWORD:'/':Y.COMP.CODE:',,'
    FT.VAL.OFS.MSG := 'TRANSACTION.TYPE::=':FT.TXN.TYPE:','
    FT.VAL.OFS.MSG := 'DEBIT.ACCT.NO::=':CUST.ACCT:','
    FT.VAL.OFS.MSG := 'CREDIT.CURRENCY::=':CCY.ID:','
    FT.VAL.OFS.MSG := 'CREDIT.AMOUNT::=':AMOUNT:','
    FT.VAL.OFS.MSG := 'CREDIT.ACCT.NO::=':OTHER.ACCT:','
    FT.VAL.OFS.MSG := 'MERCHANT.NAME::=':MERCHANT.NAME:','
    FT.VAL.OFS.MSG := 'AT.UNIQUE.ID::=':AUTH.CODE:','
    FT.VAL.OFS.MSG := 'AT.AUTH.CODE::=':AUTH.CODE:','
    IF CCY.CODE NE ACC.CCY.CODE THEN
        FT.VAL.OFS.MSG := 'TREASURY.RATE::=':SETT.RATE:','
    END
    FT.VAL.OFS.MSG := FT.COMM.OFS.STR

    LOG.DETS = "Base2 validation request - ":FT.VAL.OFS.MSG
    LOG.REC = LOG.DETS
    GOSUB UPDATE.LOG.FILES
    CALL OFS.PROCESS.MANAGER(FT.VAL.OFS.MSG,FT.VAL.OFS.RESP)
    LOG.DETS = "Base2 validation response - ":FT.VAL.OFS.RESP
    LOG.REC = LOG.DETS
    GOSUB UPDATE.LOG.FILES

    STATUS.MSG = FIELD(FT.VAL.OFS.RESP,',',1)
    STATUS.MSG = FIELD(STATUS.MSG,'/',3)

    RETURN
*---------------------------------------------------------------------------------------------------------------*
UPDATE.REV.REC:
*-------------*
    IF ACLK.STATUS EQ 1 THEN
        R.ATM.BASE.TRANSACTIONS<AT.BASE.ACLK.TXN.ID>="R":ACLK.TXN.ID
    END
    IF FT.STATUS EQ 1 THEN
        R.ATM.BASE.TRANSACTIONS<AT.BASE.FT.TXN.ID> = FT.ID
        R.ATM.BASE.TRANSACTIONS<AT.BASE.MSG.STATUS> = 'PROCESSED'
    END
    R.ATM.BASE.TRANSACTIONS<AT.BASE.SOURCE.IMD> = R.BASE.II.REC<BASE.II.SRC.IMD>
    R.ATM.BASE.TRANSACTIONS<AT.BASE.SRC.CNTRY.CODE> = R.BASE.II.REC<BASE.II.SRC.COUNTRY.CODE>
    R.ATM.BASE.TRANSACTIONS<AT.BASE.SRC.BR.CODE> = R.BASE.II.REC<BASE.II.SRC.BRANCH.CODE>
    R.ATM.BASE.TRANSACTIONS<AT.BASE.TXN.DATE> = R.BASE.II.REC<BASE.II.TRANSACTION.DATE>
    R.ATM.BASE.TRANSACTIONS<AT.BASE.TXN.TIME> = R.BASE.II.REC<BASE.II.TRANSACTION.TIME>
    R.ATM.BASE.TRANSACTIONS<AT.BASE.DEST.CNTRY.CODE> = R.BASE.II.REC<BASE.II.DEST.COUNTRY.CODE>
    R.ATM.BASE.TRANSACTIONS<AT.BASE.DEST.IMD> = R.BASE.II.REC<BASE.II.DEST.IMD>
    R.ATM.BASE.TRANSACTIONS<AT.BASE.DEST.BR.CODE> = R.BASE.II.REC<BASE.II.DEST.BRANCH.CODE>
    R.ATM.BASE.TRANSACTIONS<AT.BASE.SRC.ACC.NO> = R.BASE.II.REC<BASE.II.SRC.ACCOUNT>
    R.ATM.BASE.TRANSACTIONS<AT.BASE.SRC.ACC.TYPE> = R.BASE.II.REC<BASE.II.SRC.ACCOUNT.DESCRIPTION>
    R.ATM.BASE.TRANSACTIONS<AT.BASE.SRC.ACC.CCY> = R.BASE.II.REC<BASE.II.SRC.ACCOUNT.CURRENCY>
    R.ATM.BASE.TRANSACTIONS<AT.BASE.AMOUNT1> = R.BASE.II.REC<BASE.II.AMOUNT1>
    R.ATM.BASE.TRANSACTIONS<AT.BASE.AMOUNT2> = R.BASE.II.REC<BASE.II.AMOUNT2>
    R.ATM.BASE.TRANSACTIONS<AT.BASE.DEST.ACC.CCY> = R.BASE.II.REC<BASE.II.DEST.CURRENCY>
    R.ATM.BASE.TRANSACTIONS<AT.BASE.DEST.ACC.NO> = R.BASE.II.REC<BASE.II.DEST.ACCOUNT.NUMBER>
    R.ATM.BASE.TRANSACTIONS<AT.BASE.DEST.ACC.TYPE> = R.BASE.II.REC<BASE.II.DEST.ACCOUNT.DESCRIPTION>
    R.ATM.BASE.TRANSACTIONS<AT.BASE.LCCY.CODE> = R.BASE.II.REC<BASE.II.LOCAL.CURRENCY.CODE>
    R.ATM.BASE.TRANSACTIONS<AT.BASE.AMOUNT3> = R.BASE.II.REC<BASE.II.AMOUNT3>
    R.ATM.BASE.TRANSACTIONS<AT.BASE.AMOUNT4> = R.BASE.II.REC<BASE.II.AMOUNT4>
    R.ATM.BASE.TRANSACTIONS<AT.BASE.AUTH.CODE> = R.BASE.II.REC<BASE.II.AUTHORISATION.CODE>
    R.ATM.BASE.TRANSACTIONS<AT.BASE.BIN.NUMBER> = R.BASE.II.REC<BASE.II.ACQUIRING.INSTITUTION.IDENT.CODE>
    R.ATM.BASE.TRANSACTIONS<AT.BASE.FORW.INST.ID> = R.BASE.II.REC<BASE.II.FORWARDING.INSTITUTION.IDENT.CODE>
    R.ATM.BASE.TRANSACTIONS<AT.BASE.MERCH.TYPE> = R.BASE.II.REC<BASE.II.MERCHANT.CATEGORY.CODE>
    R.ATM.BASE.TRANSACTIONS<AT.BASE.ATM.BR.NO> = R.BASE.II.REC<BASE.II.CARD.ACCEPTOR.TERMINAL.ID>
    R.ATM.BASE.TRANSACTIONS<AT.BASE.CARD.ACCP.ID> = R.BASE.II.REC<BASE.II.CARD.ACCEPTOR.ID>
    R.ATM.BASE.TRANSACTIONS<AT.BASE.CARD.ACCP.DETS> = R.BASE.II.REC<BASE.II.CARD.ACCEPTOR.NAME.LOCATION>
    R.ATM.BASE.TRANSACTIONS<AT.BASE.BILL.CCY.CODE> = R.BASE.II.REC<BASE.II.BILLING.CURRENCY.CODE>
    R.ATM.BASE.TRANSACTIONS<AT.BASE.BILL.RATE> = R.BASE.II.REC<BASE.II.BILLING.CONVERSION.RATE>
    R.ATM.BASE.TRANSACTIONS<AT.BASE.BILL.AMOUNT> = R.BASE.II.REC<BASE.II.BILLING.TRANSACTION.AMOUNT>
    R.ATM.BASE.TRANSACTIONS<AT.BASE.SETT.CCY.CODE> = R.BASE.II.REC<BASE.II.SETTLEMENT.CURRENCY>
    R.ATM.BASE.TRANSACTIONS<AT.BASE.SETT.RATE> = R.BASE.II.REC<BASE.II.SETTLEMENT.CONVERSION.RATE>
    R.ATM.BASE.TRANSACTIONS<AT.BASE.SETT.AMOUNT> = R.BASE.II.REC<BASE.II.SETTLEMENT.AMOUNT>
    R.ATM.BASE.TRANSACTIONS<AT.BASE.RRN.NO> = R.BASE.II.REC<BASE.II.RETREIVAL.REFERENCE.NUMER>
    R.ATM.BASE.TRANSACTIONS<AT.BASE.STAN.NO> = R.BASE.II.REC<BASE.II.SYSTEM.TRACE.AUDIT.NUMBER>
    R.ATM.BASE.TRANSACTIONS<AT.BASE.TRANS.STATUS> = TRANSACTION.STATUS
    R.ATM.BASE.TRANSACTIONS<AT.BASE.FORCE.POST> = R.BASE.II.REC<BASE.II.FORCE.POST>
    R.ATM.BASE.TRANSACTIONS<AT.BASE.CARD.NUMBER> = R.BASE.II.REC<BASE.II.CARD.NUMBER>
    R.ATM.BASE.TRANSACTIONS<AT.BASE.EXT.NW.ID> = R.BASE.II.REC<BASE.II.EXTERNAL.NETWORK.IDENTIFIER>
    R.ATM.BASE.TRANSACTIONS<AT.BASE.BILL.CB.AMT> = R.BASE.II.REC<BASE.II.BILLING.CASHBACK.AMOUNT>
    R.ATM.BASE.TRANSACTIONS<AT.BASE.DEV.CB.AMT> = R.BASE.II.REC<BASE.II.DEVICE.CASHBACK.AMOUNT>
    R.ATM.BASE.TRANSACTIONS<AT.BASE.ACC.CB.AMT> = R.BASE.II.REC<BASE.II.ACCOUNT.CASHBACK.AMOUNT>
    IF CB.TXN.STATUS EQ 1 THEN
        R.ATM.BASE.TRANSACTIONS<AT.BASE.CB.TXN.ID> = CB.TXN.ID
        R.ATM.BASE.TRANSACTIONS<AT.BASE.MSG.STATUS> = 'PROCESSED'
    END

    CALL F.WRITE(FN.ATM.BASE.TRANSACTIONS,ATM.BASE.ID,R.ATM.BASE.TRANSACTIONS)

    RETURN
*---------------------------------------------------------------------------------------------------------------*
POST.FT.TXN:
*----------*
    OFS.FUNCTION = 'I'
    PROCESS.TYPE = 'PROCESS'
    FT.PRC.OFS.MSG = ''
    FT.PRC.OFS.MSG = FT.OFS.VERSION:'/':OFS.FUNCTION:'/':PROCESS.TYPE:',':USERNAME:'/':PASSWORD:'/':Y.COMP.CODE:',,'
    FT.PRC.OFS.MSG := 'TRANSACTION.TYPE::=':FT.TXN.TYPE:','
    FT.PRC.OFS.MSG := 'DEBIT.ACCT.NO::=':CUST.ACCT:','
    FT.PRC.OFS.MSG := 'CREDIT.CURRENCY::=':CCY.ID:','
    FT.PRC.OFS.MSG := 'CREDIT.AMOUNT::=':AMOUNT:','
    FT.PRC.OFS.MSG := 'CREDIT.ACCT.NO::=':OTHER.ACCT:','
    FT.PRC.OFS.MSG := 'MERCHANT.NAME::=':MERCHANT.NAME:','
    FT.PRC.OFS.MSG := 'AT.UNIQUE.ID::=':AUTH.CODE:','
    FT.PRC.OFS.MSG := 'AT.AUTH.CODE::=':AUTH.CODE:','
    FT.PRC.OFS.MSG := 'DEBIT.THEIR.REF::=':R.BASE.II.REC<BASE.II.CARD.HOLDER>:','
    FT.PRC.OFS.MSG := 'CREDIT.THEIR.REF::=':R.BASE.II.REC<BASE.II.CARD.HOLDER>:','
    IF CCY.CODE NE ACC.CCY.CODE THEN
        FT.PRC.OFS.MSG := 'TREASURY.RATE::=':SETT.RATE:','
    END
    FT.PRC.OFS.MSG := FT.COMM.OFS.STR

    LOG.DETS="Base2 process request - ":FT.PRC.OFS.MSG
    LOG.REC = LOG.DETS
    GOSUB UPDATE.LOG.FILES

    CALL !HUSHIT(1)
    OFS$SOURCE.ID = OFS.ID
    OFS$SOURCE.REC = OFS.SOURCE.REC
    CALL OFS.BULK.MANAGER(FT.PRC.OFS.MSG,FT.PRC.RESPONSE,Y.PRC.COMMIT)
    CALL !HUSHIT(0)

    LOG.DETS="Base2 process response - ":FT.PRC.RESPONSE
    LOG.REC = LOG.DETS
    GOSUB UPDATE.LOG.FILES
    FT.STATUS = FIELD(FT.PRC.RESPONSE,',',1)
    FT.ID=FIELD(FT.PRC.RESPONSE,'/',1)
    FT.STATUS = FIELD(FT.STATUS,'/',3)

    IF FT.STATUS EQ '1' THEN
        SUCESS.REC<-1>=BASE.II.ID
        TRANSACTION.STATUS = "PROCESSED"
    END ELSE
        LOG.DETS='Base2 process failed ':AUTH.CODE:' - ':BASE.II.ID
        FAILURE.REC<-1>=LOG.DETS
        LOG.REC = LOG.DETS
        GOSUB UPDATE.LOG.FILES
    END

    RETURN
*---------------------------------------------------------------------------------------------------------------*
POST.CASHBACK.TXN:
*----------*
    OFS.FUNCTION = 'I'
    PROCESS.TYPE = 'PROCESS'
    FT.CB.OFS.MSG = ''
    FT.CB.OFS.MSG = FT.OFS.VERSION:'/':OFS.FUNCTION:'/':PROCESS.TYPE:',':USERNAME:'/':PASSWORD:'/':Y.COMP.CODE:',,'
    FT.CB.OFS.MSG := 'TRANSACTION.TYPE::=':FT.TXN.TYPE:','
    FT.CB.OFS.MSG := 'DEBIT.ACCT.NO::=':OTHER.ACCT:','
    FT.CB.OFS.MSG := 'DEBIT.CURRENCY::=':CCY.ID:','
    FT.CB.OFS.MSG := 'DEBIT.AMOUNT::=':CB.AMOUNT:','
    FT.CB.OFS.MSG := 'CREDIT.ACCT.NO::=':CUST.ACCT:','
    FT.CB.OFS.MSG := 'MERCHANT.NAME::=':MERCHANT.NAME:','
    FT.CB.OFS.MSG := 'AT.UNIQUE.ID::=':AUTH.CODE:','
    FT.CB.OFS.MSG := 'AT.AUTH.CODE::=':AUTH.CODE:','
    IF CCY.CODE NE ACC.CCY.CODE THEN
        FT.CB.OFS.MSG := 'TREASURY.RATE::=':SETT.RATE:','
    END

    LOG.DETS="Base2 cashback process request - ":FT.CB.OFS.MSG
    LOG.REC = LOG.DETS
    GOSUB UPDATE.LOG.FILES

    CALL !HUSHIT(1)
    OFS$SOURCE.ID = OFS.ID
    OFS$SOURCE.REC = OFS.SOURCE.REC
    CALL OFS.BULK.MANAGER(FT.CB.OFS.MSG,FT.CB.OFS.RES,Y.OFS.CB)
    CALL !HUSHIT(0)

    LOG.DETS="Base2 cashback process response - ":FT.CB.OFS.RES
    LOG.REC = LOG.DETS
    GOSUB UPDATE.LOG.FILES
    CB.TXN.STATUS = FIELD(FT.CB.OFS.RES,',',1)
    CB.TXN.ID=FIELD(FT.CB.OFS.RES,'/',1)
    CB.TXN.STATUS = FIELD(CB.TXN.STATUS,'/',3)

    IF CB.TXN.STATUS EQ '1' THEN
        SUCESS.REC<-1>=BASE.II.ID
        TRANSACTION.STATUS = "PROCESSED"
    END ELSE
        LOG.DETS='Base2 cashback process failed ':AUTH.CODE:' - ':BASE.II.ID
        FAILURE.REC<-1>=LOG.DETS
        LOG.REC = LOG.DETS
        GOSUB UPDATE.LOG.FILES
    END
    RETURN

*---------------------------------------------------------------------------------------------------------------*
VALIDATE.VMT.TXN.REC:
*-------------------*
    Y.COMP.CODE = YR.COMPANY.CODE
    PROCESS.TYPE = "VALIDATE"
    OFS.FUNCTION = 'I'
    FT.VAL.OFS.MSG = FT.OFS.VERSION:'/':OFS.FUNCTION:'/':PROCESS.TYPE:',':USERNAME:'/':PASSWORD:'/':Y.COMP.CODE:',,'
    FT.VAL.OFS.MSG := 'TRANSACTION.TYPE::=':FT.TXN.TYPE:','
    FT.VAL.OFS.MSG := 'DEBIT.ACCT.NO::=':OTHER.ACCT:','
    FT.VAL.OFS.MSG := 'CREDIT.CURRENCY::=':CCY.ID:','
    FT.VAL.OFS.MSG := 'CREDIT.AMOUNT::=':AMOUNT:','
    FT.VAL.OFS.MSG := 'CREDIT.ACCT.NO::=':CUST.ACCT:','
    FT.VAL.OFS.MSG := 'MERCHANT.NAME::=':MERCHANT.NAME:','
    FT.VAL.OFS.MSG := 'DEBIT.THEIR.REF::=Visa Transfer,'
    FT.VAL.OFS.MSG := 'CREDIT.THEIR.REF::=Visa Transfer,'
    FT.VAL.OFS.MSG := 'AT.UNIQUE.ID::=':AUTH.CODE:','
    FT.VAL.OFS.MSG := 'AT.AUTH.CODE::=':AUTH.CODE:','
    IF CCY.CODE NE ACC.CCY.CODE THEN
        FT.VAL.OFS.MSG := 'TREASURY.RATE::=':SETT.RATE:','
    END
    LOG.DETS = "Base2 validation request - ":FT.VAL.OFS.MSG
    LOG.REC = LOG.DETS
    GOSUB UPDATE.LOG.FILES
    CALL OFS.PROCESS.MANAGER(FT.VAL.OFS.MSG,FT.VAL.OFS.RESP)
    LOG.DETS = "Base2 validation response - ":FT.VAL.OFS.RESP
    LOG.REC = LOG.DETS
    GOSUB UPDATE.LOG.FILES

    STATUS.MSG = FIELD(FT.VAL.OFS.RESP,',',1)
    STATUS.MSG = FIELD(STATUS.MSG,'/',3)


    RETURN

*---------------------------------------------------------------------------------------------------------------*
POST.VMT.TXN:
*-----------*

    OFS.FUNCTION = 'I'
    PROCESS.TYPE = 'PROCESS'
    FT.PRC.OFS.MSG = ''
    FT.PRC.OFS.MSG = FT.OFS.VERSION:'/':OFS.FUNCTION:'/':PROCESS.TYPE:',':USERNAME:'/':PASSWORD:'/':Y.COMP.CODE:',,'
    FT.PRC.OFS.MSG := 'TRANSACTION.TYPE::=':FT.TXN.TYPE:','
    FT.PRC.OFS.MSG := 'DEBIT.ACCT.NO::=':OTHER.ACCT:','
    FT.PRC.OFS.MSG := 'CREDIT.CURRENCY::=':CCY.ID:','
    FT.PRC.OFS.MSG := 'CREDIT.AMOUNT::=':AMOUNT:','
    FT.PRC.OFS.MSG := 'CREDIT.ACCT.NO::=':CUST.ACCT:','
    FT.PRC.OFS.MSG := 'MERCHANT.NAME::=':MERCHANT.NAME:','
    FT.PRC.OFS.MSG := 'DEBIT.THEIR.REF::=Visa Transfer,'
    FT.PRC.OFS.MSG := 'CREDIT.THEIR.REF::=Visa Transfer,'
    FT.PRC.OFS.MSG := 'AT.UNIQUE.ID::=':AUTH.CODE:','
    FT.PRC.OFS.MSG := 'AT.AUTH.CODE::=':AUTH.CODE:','
    IF CCY.CODE NE ACC.CCY.CODE THEN
        FT.PRC.OFS.MSG := 'TREASURY.RATE::=':SETT.RATE:','
    END

    LOG.DETS="Base2 process request - ":FT.PRC.OFS.MSG
    LOG.REC = LOG.DETS
    GOSUB UPDATE.LOG.FILES

    CALL !HUSHIT(1)
    OFS$SOURCE.ID = OFS.ID
    OFS$SOURCE.REC = OFS.SOURCE.REC
    CALL OFS.BULK.MANAGER(FT.PRC.OFS.MSG,FT.PRC.RESPONSE,Y.PRC.COMMIT)
    CALL !HUSHIT(0)

    LOG.DETS="Base2 process response - ":FT.PRC.RESPONSE
    LOG.REC = LOG.DETS
    GOSUB UPDATE.LOG.FILES
    FT.STATUS = FIELD(FT.PRC.RESPONSE,',',1)
    FT.ID=FIELD(FT.PRC.RESPONSE,'/',1)
    FT.STATUS = FIELD(FT.STATUS,'/',3)

    IF FT.STATUS EQ '1' THEN
        SUCESS.REC<-1>=BASE.II.ID
        TRANSACTION.STATUS = "PROCESSED"
    END ELSE
        LOG.DETS='Base2 process failed ':AUTH.CODE:' - ':BASE.II.ID
        FAILURE.REC<-1>=LOG.DETS
        LOG.REC = LOG.DETS
        GOSUB UPDATE.LOG.FILES
    END

    RETURN


*---------------------------------------------------------------------------------------------------------------*
GET.BASEII.CHARGES:
*-----------------*

    COMM.TYPE.ITEM.CNT = 1
    CHG.AMOUNT.LIST = CHG.AMOUNT.1:@FM:CHG.AMOUNT.2
    CHG.AMOUNT.ITEM.CNT = 1
    FINDSTR TRANS.TYPE IN TRAN.TYPE.LIST SETTING TRANS.TYPE.FM.POS,TRANS.TYPE.VM.POS,TRANS.TYPE.SM.POS THEN
        COMM.TYPES = COMM.CODE.LIST<1,TRANS.TYPE.VM.POS>
        IF COMM.TYPES NE '' THEN
            LOOP
                REMOVE COMM.TYPE.ITEM FROM COMM.TYPES SETTING COMM.TYPE.ITEM.POS
            WHILE COMM.TYPE.ITEM:COMM.TYPE.ITEM.POS
                CHG.AMOUNT.ITEM = CHG.AMOUNT.LIST<CHG.AMOUNT.ITEM.CNT>
                TEMP.CCY.CODE = CCY.CODE
                IF CHG.AMOUNT.ITEM EQ '0' THEN
                    CHG.AMOUNT.ITEM = ''
                    CCY.CODE = ''
                END
                IF TRANS.TYPE EQ '10' AND CHG.AMOUNT.ITEM NE '' THEN
                    CHG.AMOUNT.ITEM = CHG.AMOUNT.2
                    CCY.CODE = TEMP.CCY.CODE
                END

                FT.COMM.OFS.STR := 'COMMISSION.TYPE:':COMM.TYPE.ITEM.CNT:':1=':COMM.TYPE.ITEM:',COMMISSION.AMT:':CHG.AMOUNT.ITEM.CNT:':1=':CCY.CODE:CHG.AMOUNT.ITEM:','
                COMM.TYPE.ITEM.CNT += 1
                CHG.AMOUNT.ITEM.CNT +=1
                CCY.CODE = TEMP.CCY.CODE
            REPEAT
        END
    END

    Y.BILL.CCY.CODE = R.BASE.II.REC<BASE.II.BILLING.CCY.CODE>
    Y.SETT.CCY.CODE = R.BASE.II.REC<BASE.II.SETTL.CCY>
    Y.DEST.ACCT.CCY.CODE = R.BASE.II.REC<BASE.II.DEST.CURRENCY>

    CALL CACHE.READ(FN.NUMERIC.CURRENCY,Y.DEST.ACCT.CCY.CODE,R.NUMERIC.CURRENCY.BILL,R.NUMERIC.CURRENCY.ERR)
    IF R.NUMERIC.CURRENCY.BILL THEN
        BILL.CCY.CODE = R.NUMERIC.CURRENCY.BILL<EB.NCN.CURRENCY.CODE>
        IF BILL.CCY.CODE EQ LCCY AND R.BASE.II.REC<BASE.II.SRC.COUNTRY.CODE> EQ CCY.ID AND NOT(CHG.AMOUNT.2) THEN
            FT.COMM.OFS.STR = ''
        END
    END

    IF R.BASE.II.REC<BASE.II.SRC.COUNTRY.CODE> EQ R.BASE.II.REC<BASE.II.LOCAL.CURRENCY.CODE> AND R.BASE.II.REC<BASE.II.DEST.COUNTRY.CODE> EQ R.BASE.II.REC<BASE.II.LOCAL.CURRENCY.CODE> THEN
        IF CHG.AMOUNT.1 THEN
            FT.COMM.OFS.STR = 'COMMISSION.TYPE::=MSTRB2CHG2,COMMISSION.AMT::=':LCCY:CHG.AMOUNT.1:','
        END
    END

    RETURN

UPDATE.LOG.REC:
*-------------*
    IF SUCESS.REC THEN
        SUCESS.FILE="SUCCESS.":SYS.DTM
        CALL F.WRITE(FN.LOG.DIR,SUCESS.FILE,SUCESS.REC)
    END
    IF FAILURE.REC THEN
        FAILURE.FILE="FAILURE.":SYS.DTM
        CALL F.WRITE(FN.LOG.DIR,FAILURE.FILE,FAILURE.REC)
    END

    RETURN
*---------------------------------------------------------------------------------------------------------------*
UPDATE.LOG.FILES:
*---------------*

    CURR.DATE = OCONV(DATE(),"D")
    CURR.TIME = OCONV(TIME(),"MTS")

    LOG.REC = CURR.DATE : "/": CURR.TIME : " - " : LOG.REC
    WRITESEQ LOG.REC TO F.LOG.DIR ELSE
        NULL
    END

    RETURN
*---------------------------------------------------------------------------------------------------------------*
GET.CUST.CURRENCY:
*----------------*

    R.ACCOUNT = ''
    R.ACCOUNT.ERR = ''
    CALL F.READ(FN.ACCOUNT,CUST.ACCT,R.ACCOUNT,F.ACCOUNT,R.ACCOUNT.ERR)

    IF R.ACCOUNT NE '' THEN
        ACC.CCY.CODE = R.ACCOUNT<AC.CURRENCY>
    END

    RETURN
*---------------------------------------------------------------------------------------------------------------*
END
