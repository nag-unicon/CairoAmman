    SUBROUTINE CAB.AGING.CUST.STATUS.POST
    $INCLUDE I_COMMON
    $INCLUDE I_EQUATE
    $INCLUDE I_F.ACCOUNT
    $INCLUDE I_F.CUSTOMER
    $INCLUDE BP I_F.CABK.CUSTOMER.AGINGSTATUS.DATE
    $INCLUDE BP I_F.CABK.CUSTOMER.AGING.CODE
    $INCLUDE CAB.BP I_CAB.AGING.CUST.STATUS.COMMON
    $INCLUDE I_F.AA.ACCOUNT.DETAILS
    $INCLUDE I_GTS.COMMON
    $INCLUDE CAB.BP I_F.CAB.FILE.PARAMETER

    GOSUB INIT
    GOSUB PROCESS
    RETURN
******
INIT:
******
    F.CAB.FILE.PARAMETER = ''
    FN.CAB.FILE.PARAMETER = 'F.CAB.FILE.PARAMETER'
    CALL OPF(FN.CAB.FILE.PARAMETER,F.CAB.FILE.PARAMETER)

    CALL CACHE.READ(FN.CAB.FILE.PARAMETER,'STAT.AGE',R.CAB.PARAM,CAB.PARAM.ERR)

    F.CUSTOMER = ''
    FN.CUSTOMER = 'F.CUSTOMER'
    CALL OPF(FN.CUSTOMER,F.CUSTOMER)

    F.CABK.CUSTOMER.AGINGSTATUS.DATE = ''
    FN.CABK.CUSTOMER.AGINGSTATUS.DATE = 'F.CABK.CUSTOMER.AGINGSTATUS.DATE'
    CALL OPF(FN.CABK.CUSTOMER.AGINGSTATUS.DATE,F.CABK.CUSTOMER.AGINGSTATUS.DATE)
    CALL GET.LOC.REF("CUSTOMER","ORIG.STATUS",O.POS)

    AGE.PATH = 'AGING.LOG'
    AGE.NAME = 'Changed_Stat_Age_':TODAY:'.csv'
    OPENSEQ AGE.PATH,AGE.NAME TO AGE.FILE ELSE
        CREATE AGE.FILE ELSE
            STOP
        END
    END

    REJ.AGE.NAME = 'Not_Changed_Stat_Age_':TODAY:'.csv'
    OPENSEQ AGE.PATH,REJ.AGE.NAME TO REJ.AGE.FILE ELSE
        CREATE REJ.AGE.FILE ELSE
            STOP
        END
    END


    RETURN
********
PROCESS:
********

    B.UPDATE = BATCH.DETAILS<3,1>
    SEL.CMD = 'SSELECT ' : FN.CABK.CUSTOMER.AGINGSTATUS.DATE : ' WITH DATE EQ ' : TODAY


    CALL EB.READLIST(SEL.CMD,SEL.LIST,'',NOR,SEL.ERR)
    LOOP
        REMOVE SEL.ID FROM SEL.LIST SETTING POS
    WHILE SEL.ID:POS
        CALL F.READ(FN.CABK.CUSTOMER.AGINGSTATUS.DATE,SEL.ID,CABK.CUS.AGE.REC,F.CABK.CUSTOMER.AGINGSTATUS.DATE,CABK.CUS.AGE.ERR)
        Y.AGE.STATUS = CABK.CUS.AGE.REC<CABK.AGSTAT.AGING.STATUS>
        Y.ORG.STATUS = CABK.CUS.AGE.REC<CABK.AGSTAT.ORIG.STATUS>
        CALL F.READ(FN.CUSTOER,SEL.ID,CUST.REC,F.CUSTOMER,CUST.ERR)
        Y.CUS.STATUS = CUST.REC<EB.CUS.LOCAL.REF,O.POS>
        GOSUB OFS.MSG
    REPEAT
    RETURN
********
OFS.MSG:
********

    IF B.UPDATE EQ 'Y' THEN
        OFS.CUR.REC = ''
        APP.NAME = 'CUSTOMER'
        OFS.FUNCTION = 'I'
        VERSION.NAME = R.CAB.PARAM<CAB.FIL.MAPPING.DATA>
        NO.OF.AUTH = '0'
        OFS.CUR.REC<EB.CUS.CUSTOMER.STATUS> = Y.AGE.STATUS
        IF NOT(Y.CUS.STATUS) THEN
            OFS.CUR.REC<EB.CUS.LOCAL.REF,O.POS> = Y.CUS.STATUS
        END
        CALL OFS.BUILD.RECORD(APP.NAME,OFS.FUNCTION,'PROCESS',VERSION.NAME,'',NO.OF.AUTH,SEL.ID,OFS.CUR.REC,OFS.RECORD)

        Y.OFS.SOURCE = R.CAB.PARAM<CAB.FIL.OFS.SOURCE>
        CALL OFS.CALL.BULK.MANAGER(Y.OFS.SOURCE,OFS.RECORD,OFS.RESPONSE,OFS.COMMITTED)
        Y.ERR.CODE = FIELD(OFS.RESPONSE,",",1)
        Y.ERR.CODE = FIELD(Y.ERR.CODE,'/',3)

        ERR.POS = ''
        OUT.MSG = OFS.RESPONSE
        CONVERT ',' TO VM IN OUT.MSG
        LOCATE 'RECORD.STATUS:1:1=IHLD' IN OUT.MSG<1,1> SETTING ERR.POS THEN
            Y.ERR.CODE = '-1'
        END

        IF Y.ERR.CODE EQ 1 THEN
            OUT.ACCPT = SEL.ID : '*' : Y.ORG.STATUS : '*' : Y.AGE.STATUS: '*' : 'Sucess'
            WRITESEQ OUT.ACCPT APPEND TO AGE.FILE ELSE
            END
        END ELSE
            OUT.REJ = SEL.ID : '*' :Y.ORG.STATUS : '*' : 'OFS'
            WRITESEQ OUT.REJ APPEND TO REJ.AGE.FILE ELSE
            END
        END

    END ELSE
        OUT.ACCPT = SEL.ID : '*' : Y.ORG.STATUS : '*' : Y.AGE.STATUS : '*' : 'Report'
        WRITESEQ OUT.ACCPT APPEND TO AGE.FILE ELSE
        END
    END

    CABK.CUS.AGE.REC<CABK.AGSTAT.DATE> = ''
    CALL F.WRITE(FN.CABK.CUSTOMER.AGINGSTATUS.DATE,SEL.ID,CABK.CUS.AGE.REC)

    RETURN
END
