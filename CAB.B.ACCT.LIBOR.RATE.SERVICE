    SUBROUTINE CAB.B.ACCT.LIBOR.RATE.SERVICE(ACCT.ID)
    $INCLUDE T24.BP I_COMMON
    $INCLUDE T24.BP I_EQUATE
    $INCLUDE T24.BP I_F.ACCOUNT
    $INCLUDE T24.BP I_F.ACCOUNT.DEBIT.INT
    $INCLUDE BP I_F.CAB.LIBOR.ACCT.DETS
    $INCLUDE CAB.BP I_CAB.B.ACCT.LIBOR.RATE.SERVICE.COMMON
    $INCLUDE I_F.DATES
    $INCLUDE I_F.PERIODIC.INTEREST
!! Ammar Hatem Faidi - 20230227
!! Change the mechanisim of geting the interest rate

    GOSUB INIT
    CALL F.READ(FN.CAB.LIBOR.ACCT.DETS,ACCT.ID,R.LIB.ACCT.REC,F.CAB.LIBOR.ACCT.DETS,LIB.ERROR)
    CALL F.READ(FN.ACCOUNT,ACCT.ID,R.ACCOUNT,F.ACCOUNT,ACCT.ERR)
    IF ACCT.ERR THEN
        RETURN
    END
    IF R.ACCOUNT<AC.LIMIT.REF> EQ '' THEN
        ADI.REC = ''
        ADI.REC<IC.ADI.INTEREST.DAY.BASIS> = 'GENERAL'
        R.LIB.ACCT.REC<CAB.LBRDETS.STOP.CALC> = 'S'
        GOSUB OFS.MSG
        RETURN
    END
    Y.PI.CODE = R.LIB.ACCT.REC<CAB.LBRDETS.PI.CODE>
    Y.AC.CURR = R.ACCOUNT<AC.CURRENCY>
    Y.TERM = R.LIB.ACCT.REC<CAB.LBRDETS.LIBOR.TERM>
    Y.ORG.TERM = Y.TERM
    Y.RATE = R.LIB.ACCT.REC<CAB.LBRDETS.MARGIN.RATE>
    IF R.LIB.ACCT.REC<CAB.LBRDETS.EXCESS.RATE> THEN
        Y.EXCESS = R.LIB.ACCT.REC<CAB.LBRDETS.EXCESS.RATE>
    END ELSE
        Y.EXCESS = R.LIB.ACCT.REC<CAB.LBRDETS.FLAT.EXCESS>
    END
    MIN.RATE = R.LIB.ACCT.REC<CAB.LBRDETS.MIN.INT.RATE>
    MAX.RATE = R.LIB.ACCT.REC<CAB.LBRDETS.MAX.INT.RATE>
    MAT.DATE = R.LIB.ACCT.REC<CAB.LBRDETS.LIBOR.MAT.DATE>
    CHG.DATE = R.LIB.ACCT.REC<CAB.LBRDETS.LIBOR.CHG.DATE>
    Y.ACCT.LIMIT = R.LIB.ACCT.REC<CAB.LBRDETS.ACCT.LIMIT>
    Y.VAL.DATE = R.LIB.ACCT.REC<CAB.LBRDETS.LIBOR.VAL.DATE>

    NEW.DATE = TODAY
    PI.KEY = Y.PI.CODE:Y.AC.CURR:TODAY
    IF MAT.DATE LT TODAY THEN
        PI.KEY = Y.PI.CODE:Y.AC.CURR:R.DATES(EB.DAT.LAST.WORKING.DAY)
    END
!!    GOSUB READ.PI.TABLE
    IF MAT.DATE LE TODAY THEN
        CALL CALENDAR.DAY(MAT.DATE,"+",Y.TERM)
        END.DATE = Y.TERM
        Y.TERM = R.LIB.ACCT.REC<CAB.LBRDETS.LIBOR.TERM>
        CALL CALENDAR.DAY(NEW.DATE,"+",Y.TERM)
        NEW.DATE = Y.TERM
    END ELSE
        END.DATE = MAT.DATE
        NEW.DATE = MAT.DATE
    END
    GOSUB READ.PI.TABLE
    RET.INT.RATE = DROUND(RET.INT.RATE,8)
    NO.OF.REC = DCOUNT(R.ACCOUNT<AC.ACCT.DEBIT.INT>,VM)
    Y.ADI.KEY = ACCT.ID : '-' : R.ACCOUNT<AC.ACCT.DEBIT.INT,NO.OF.REC>
    CALL F.READ(FN.ACCOUNT.DEBIT.INT,Y.ADI.KEY,ADI.REC,F.ACCOUNT.DEBIT.INT,ADI.ERROR)
    AMT = FIELD(Y.ACCT.LIMIT,".",1)
    TOT.INT = RET.INT.RATE + Y.RATE
    IF TOT.INT GT MAX.RATE THEN
        RET.INT.RATE = MAX.RATE - Y.RATE
    END
    IF ADI.REC<IC.ADI.INTEREST.DAY.BASIS> NE 'GENERAL' THEN
        IF R.LIB.ACCT.REC<CAB.LBRDETS.STOP.CALC> EQ 'Y' THEN
            R.LIB.ACCT.REC<CAB.LBRDETS.STOP.CALC> = 'S'
            ADI.REC = ''
            ADI.REC<IC.ADI.INTEREST.DAY.BASIS> = 'GENERAL'
        END ELSE
            NO.OF.REC = DCOUNT(ADI.REC<IC.ADI.DR.INT.RATE>,VM)
            IF NO.OF.REC EQ 2 THEN
                GOSUB FIRST.VALUE
                GOSUB SECOND.VALUE
            END
            IF NO.OF.REC EQ 1 THEN
                GOSUB FIRST.VALUE
            END
        END
    END ELSE
        GOSUB CREATE.ADI.REC
    END
    GOSUB OFS.MSG
!!    END
    RETURN
***************
CREATE.ADI.REC:
***************
    ADI.REC<IC.ADI.CHARGE.KEY> = '99'
    ADI.REC<IC.ADI.DR.BALANCE.TYPE> = 'DAILY'
    ADI.REC<IC.ADI.INTEREST.DAY.BASIS> = 'B'
    ADI.REC<IC.ADI.DR.CALCUL.TYPE> = 'BAND'
    GOSUB FIRST.VALUE
    GOSUB SECOND.VALUE
    RETURN
*******
INIT:
******
    TOT.INT = ''
    Y.PI.CODE = ''
    Y.AC.CURR = ''
    Y.TERM = ''
    Y.RATE = ''
    Y.EXCESS = ''
    MIN.RATE = ''
    MAX.RATE = ''
    MAT.DATE = ''
    CHG.DATE = ''
    Y.ACCT.LIMIT = ''
    RET.INT.RATE = ''
    RETURN
**************
READ.PI.TABLE:
**************
    CALL F.READ(FN.PERIODIC.INTEREST,PI.KEY,PERIOD.REC,F.PERIODIC.INTEREST,PERIOD.ERR)
    LOCATE Y.ORG.TERM IN PERIOD.REC<PI.REST.PERIOD,1> SETTING R.POS THEN
        RET.INT.RATE = PERIOD.REC<PI.BID.RATE,R.POS>
    END


    RETURN
************
FIRST.VALUE:
************
    ADI.REC<IC.ADI.DR.MIN.RATE,1> = MIN.RATE
    ADI.REC<IC.ADI.DR.INT.RATE,1> = RET.INT.RATE
    IF Y.RATE LT 0 THEN
        ADI.REC<IC.ADI.DR.MARGIN.OPER,1> = 'SUBTRACT'
    END ELSE
        ADI.REC<IC.ADI.DR.MARGIN.OPER,1> = 'ADD'
    END
    ADI.REC<IC.ADI.DR.MARGIN.RATE,1> = ABS(Y.RATE)
    RETURN
*************
SECOND.VALUE:
*************

    ADI.REC<IC.ADI.DR.LIMIT.AMT,1> = AMT
    IF R.LIB.ACCT.REC<CAB.LBRDETS.EXCESS.RATE> THEN
        ADI.REC<IC.ADI.DR.MIN.RATE,2> = MIN.RATE + Y.EXCESS
        ADI.REC<IC.ADI.DR.INT.RATE,2> = RET.INT.RATE
    END ELSE
        ADI.REC<IC.ADI.DR.MIN.RATE,2> = '0'
        ADI.REC<IC.ADI.DR.INT.RATE,2> = R.LIB.ACCT.REC<CAB.LBRDETS.FLAT.EXCESS>
    END
    IF Y.RATE LT 0 THEN
        ADI.REC<IC.ADI.DR.MARGIN.OPER,2> = 'SUBTRACT'
        ADI.REC<IC.ADI.DR.MARGIN.RATE,2> = ABS(Y.RATE - Y.EXCESS)
    END ELSE
        IF  R.LIB.ACCT.REC<CAB.LBRDETS.FLAT.EXCESS> THEN
            ADI.REC<IC.ADI.DR.MARGIN.OPER,2> = 'ADD'
            ADI.REC<IC.ADI.DR.MARGIN.RATE,2> = '0'
        END ELSE
            ADI.REC<IC.ADI.DR.MARGIN.OPER,2> = 'ADD'
            ADI.REC<IC.ADI.DR.MARGIN.RATE,2> = ABS(Y.RATE) + Y.EXCESS
        END
    END
    RETURN

**********
OFS.MSG:
**********
    ADI.REC<IC.ADI.CURR.NO> = ''
    ADI.REC<IC.ADI.DATE.TIME> = ''
    ADI.REC<IC.ADI.CO.CODE> = ''
    ADI.REC<IC.ADI.AUDITOR.CODE> = ''
    ADI.REC<IC.ADI.AUDIT.DATE.TIME> = ''
    ADI.REC<IC.ADI.DEPT.CODE> = ''
    ADI.REC<IC.ADI.AUTHORISER> = ''
    ADI.REC<IC.ADI.INPUTTER> = ''
    Y.ERR = ''
    CALL LOAD.COMPANY(R.ACCOUNT<AC.CO.CODE>)
    OFSSTRING = ''
    APP.NAME = 'ACCOUNT.DEBIT.INT'
    VERSION.NAME = 'ACCOUNT.DEBIT.INT,INP'
    OFS.FUNCTION = 'I'
    NO.OF.AUTH = '0'
    OFS.RECORD = ''
    IF Y.VAL.DATE EQ '' THEN
        Y.TRANS.ID = ACCT.ID: '-' :MAT.DATE
    END ELSE
        Y.TRANS.ID = ACCT.ID: '-' :Y.VAL.DATE
    END
    CALL OFS.BUILD.RECORD(APP.NAME,OFS.FUNCTION,'PROCESS',VERSION.NAME,'',NO.OF.AUTH,Y.TRANS.ID,ADI.REC,OFSSTRING)
    OFS.RESPONSE = ''
    OFS.COMMITTED = ''
    options = ''
    options<1> = 'CABPOS'
    options<4> = "HLD"

    CALL OFS.CALL.BULK.MANAGER(options,OFSSTRING,OFS.RESPONSE,OFS.COMMITTED)
    Y.RES = OFS.RESPONSE
    Y.ERR = FIELD(FIELD(Y.RES,"/",3),",",1)
    CONVERT ',' TO VM IN Y.RES
    LOCATE 'RECORD.STATUS:1:1=IHLD' IN OFS.RESPONSE SETTING POS THEN
        Y.ERR = '-1'
    END
    IF Y.ERR NE '-1' THEN
        R.LIB.ACCT.REC<CAB.LBRDETS.LIBOR.CHG.DATE> = TODAY
        R.LIB.ACCT.REC<CAB.LBRDETS.LIBOR.MAT.DATE> = END.DATE
        R.LIB.ACCT.REC<CAB.LBRDETS.LIBOR.VAL.DATE> = ''
        WRITE R.LIB.ACCT.REC TO F.CAB.LIBOR.ACCT.DETS,ACCT.ID
    END
    RETURN
END
