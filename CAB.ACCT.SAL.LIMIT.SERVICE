    SUBROUTINE CAB.ACCT.SAL.LIMIT.SERVICE
    $INCLUDE I_COMMON
    $INCLUDE I_EQUATE
    $INCLUDE I_F.CUSTOMER
    $INCLUDE I_F.ACCOUNT
    $INCLUDE I_F.LIMIT
    $INCLUDE BP I_F.CAB.ATTACH.LIMIT.PARAM
    $INCLUDE I_GTS.COMMON
    $INCLUDE BP I_F.CAB.LIMIT.MAINT
*****************************************
*Ammar  19/6/2022      fix descrease/increase  limit 
*****************************************

    GOSUB INIT
    GOSUB PROCESS
    GOSUB PENDING.LIMITS
    RETURN

*******
INIT:
*******

    F.CAB.LIMIT.MAINT = ''
    FN.CAB.LIMIT.MAINT = 'F.CAB.LIMIT.MAINT'
    CALL OPF(FN.CAB.LIMIT.MAINT,F.CAB.LIMIT.MAINT)

    F.LIMIT.LIAB = ''
    FN.LIMIT.LIAB = 'F.LIMIT.LIABILITY'
    CALL OPF(FN.LIMIT.LIAB,F.LIMIT.LIAB)

    F.LIMIT.HIS = ''
    FN.LIMIT.HIS = 'F.LIMIT$HIS'
    CALL OPF(FN.LIMIT.HIS,F.LIMIT.HIS)

    F.ACCOUNT = ''
    FN.ACCOUNT = 'F.ACCOUNT'
    CALL OPF(FN.ACCOUNT,F.ACCOUNT)

    F.CUSTOMER = ''
    FN.CUSTOMER = 'F.CUSTOMER'
    CALL OPF(FN.CUSTOMER,F.CUSTOMER)

    F.CAB.ATTACH.LIMIT.PARAM = ''
    FN.CAB.ATTACH.LIMIT.PARAM = 'F.CAB.ATTACH.LIMIT.PARAM'
    CALL OPF(FN.CAB.ATTACH.LIMIT.PARAM,F.CAB.ATTACH.LIMIT.PARAM)

    CALL CACHE.READ(FN.CAB.ATTACH.LIMIT.PARAM,'SYSTEM',CAB.ATTACH.LIMIT.REC,CAB.ATTACH.LIMIT.ERR)
    Y.CATEGS = CAB.ATTACH.LIMIT.REC<AC.LMA.CATEGORY>
    SAL.IND  = CAB.ATTACH.LIMIT.REC<AC.LMA.PUPOSE>
    Y.EXPIRY.YEARS = CAB.ATTACH.LIMIT.REC<AC.LMA.LMT.EXPIRY>
    Y.COL.CODE = CAB.ATTACH.LIMIT.REC<AC.LMA.COL.CODE>
    PROD.LIMIT = FMT(CAB.ATTACH.LIMIT.REC<AC.LMA.PROD.LMT>,'R%7')
    PART.LIMIT = FMT(CAB.ATTACH.LIMIT.REC<AC.LMA.PART.LMT>,'R%7')
    CHLD.LIMIT = FMT(CAB.ATTACH.LIMIT.REC<AC.LMA.CHLD.LMT>,'R%7')
    Y.EXP.DATE = TODAY[1,4] + Y.EXPIRY.YEARS : '1231'
    CONVERT VM TO ' OR ' IN Y.CATEGS
    Y.CCY = CAB.ATTACH.LIMIT.REC<AC.LMA.CURRENCY>
    CONVERT VM TO ' OR ' IN Y.CCY
    SEL.CMD = 'SSELECT ' : FN.ACCOUNT :' WITH (CATEGORY EQ ' : Y.CATEGS : ') AND ' : '( CURRENCY EQ ' : Y.CCY:') AND (LIMIT.REF EQ "") AND '
    SEL.CMD := '(OPENING.DATE EQ ':TODAY:')'

    CALL GET.LOC.REF("CUSTOMER","OPEN.PROFILE",O.POS)

    RETURN
*********
PROCESS:
********

    CALL EB.READLIST(SEL.CMD,SEL.LIST,'',NOR,ERR.LIST)
    IF NOT(NOR) THEN
        RETURN
    END
    LOOP
        REMOVE ACCT.ID FROM SEL.LIST SETTING POS
    WHILE ACCT.ID:POS
        LMT.AMNT = '0'
        GOSUB READ.ACCT
    REPEAT

    RETURN
***************
PENDING.LIMITS:
***************

    P.ID ='';P.POS=''
    SEL.PEND = 'SSELECT ' : FN.CAB.LIMIT.MAINT : ' WITH LIMIT.REF EQ NEW'
    CALL EB.READLIST(SEL.PEND,PEND.LIST,'',NOP,PEND.ERR)
    IF NOT(NOP) THEN
        RETURN
    END
    LOOP
        REMOVE P.ID FROM PEND.LIST SETTING P.POS
    WHILE P.ID:P.POS
        CALL F.READ(FN.CAB.LIMIT.MAINT,P.ID,CAB.LIMIT.MAINT.REC,F.CAB.LIMIT.MAINT,CAB.LIMIT.MAINT.ERR)
        ACCT.ID = CAB.LIMIT.MAINT.REC<CAB.LIM.ACCOUNT.NO>
        LMT.AMNT = CAB.LIMIT.MAINT.REC<CAB.LIM.DESCREASE.AMOUNT>
        GOSUB READ.ACCT
    REPEAT
    RETURN
***********
READ.ACCT:
**********

    CALL F.READ(FN.ACCOUNT,ACCT.ID,ACCT.REC,F.ACCOUNT,ACCT.ERR)
    CUST.ID = ACCT.REC<AC.CUSTOMER>
    ACCT.CCY = ACCT.REC<AC.CURRENCY>
    Y.COMP.BOOK = ACCT.REC<AC.CO.CODE>

    CALL F.READ(FN.CUSTOMER,CUST.ID,CUST.REC,F.CUSTOMER,CUST.ERR)
    Y.OPEN.PURPOSE = CUST.REC<EB.CUS.LOCAL.REF,O.POS>
    CONVERT SM TO VM IN Y.OPEN.PURPOSE
    LOCATE SAL.IND IN Y.OPEN.PURPOSE<1,1>  SETTING M.POS THEN
        GOSUB CHECK.LIMIT
    END

    RETURN
**************
CHECK.LIMIT:
**************

    Y.SEQ = '0';AT.PROD.LMT=''
    CALL F.READ(FN.LIMIT.LIAB,CUST.ID,LIMIT.LIAB.REC,F.LIMIT.LIAB,LIMIT.LIAB.ERR)
    IF LIMIT.LIAB.ERR THEN
        Y.SEQ = '01'
    END ELSE
        NO.OF.LMTS = DCOUNT(LIMIT.LIAB.REC,FM)
        FOR I = 1 TO NO.OF.LMTS
            AT.PROD.LMT = FIELD(LIMIT.LIAB.REC<I>,'.',2)
            IF AT.PROD.LMT EQ PROD.LIMIT THEN
                Y.SEQ = FMT(FIELD(LIMIT.LIAB.REC<I>,'.',3),'R%2')
                Y.SEQ + =1
                BREAK
            END
        NEXT
    END
    IF Y.SEQ EQ '0' THEN
        Y.SEQ = '01'
    END
    FOR J = Y.SEQ TO 10
        ACCT.LIMIT = CUST.ID : '.' :  PROD.LIMIT : '.': FMT(J,'R%2')
        CALL EB.READ.HISTORY.REC(F.LIMIT.HIS,ACCT.LIMIT,LIMIT.HIST.REC,LIMIT.ERROR)
        IF LIMIT.ERROR THEN
            BREAK
        END
    NEXT
    ACCT.LIMIT = FIELD(ACCT.LIMIT,';',1)
    GOSUB CREATE.LIMIT
    IF Y.ERROR  EQ '1' THEN
        ACCT.LIMIT = CUST.ID : '.' :  PART.LIMIT : '.': J
        GOSUB CREATE.LIMIT
    END

    IF Y.ERROR EQ '1' THEN
        ACCT.LIMIT = CUST.ID : '.' :  CHLD.LIMIT : '.': J
        GOSUB CREATE.LIMIT
    END
    IF Y.ERROR EQ '1' THEN
        GOSUB UPDATE.ACCT
    END

    RETURN
*************
CREATE.LIMIT:
*************
    LIMIT.REC = ''

    LIMIT.REC<LI.LIMIT.CURRENCY> = ACCT.CCY
    LIMIT.REC<LI.APPROVAL.DATE> = TODAY
    LIMIT.REC<LI.REVIEW.FREQUENCY> = Y.EXP.DATE : ' M1231'
    LIMIT.REC<LI.EXPIRY.DATE> = Y.EXP.DATE
    LIMIT.REC<LI.AVAILABLE.MARKER> = 'Y'
    LIMIT.REC<LI.INTERNAL.AMOUNT> = LMT.AMNT
    LIMIT.REC<LI.ADVISED.AMOUNT> = LMT.AMNT
    LIMIT.REC<LI.MAXIMUM.TOTAL> = LMT.AMNT
    LIMIT.REC<LI.COLLATERAL.CODE> = Y.COL.CODE
    LIMIT.REC<LI.FIXED.VARIABLE> = 'FIXED'
    LIMIT.REC<LI.MAXIMUM.SECURED> = LMT.AMNT

    GOSUB OFS.LIMIT
    RETURN
***********
UPDATE.ACCT:
************
    CALL LOAD.COMPANY(Y.COMP.BOOK)
    OFS.RECORD = ''
    APP.NAME = FIELD(CAB.ATTACH.LIMIT.REC<AC.LMA.OFS.ACCT.VERSION>,',',1)
    OFS.FUNCTION = 'I'
    VERSION.NAME = CAB.ATTACH.LIMIT.REC<AC.LMA.OFS.ACCT.VERSION>
    NO.OF.AUTH = '0'
    R.ACCT = ''
    R.ACCT<AC.LIMIT.REF> = CHLD.LIMIT: '.' : FMT(J,'R%2')
    CALL OFS.BUILD.RECORD(APP.NAME,OFS.FUNCTION,'PROCESS',VERSION.NAME,'',NO.OF.AUTH,ACCT.ID,R.ACCT,OFS.RECORD)
    options<1> = CAB.ATTACH.LIMIT.REC<AC.LMA.OFS.ID>
    options<4> = 'HLD'
    ERR.POS = ''
    CALL OFS.CALL.BULK.MANAGER(options,OFS.RECORD,OFS.RESPONSE,OFS.COMMITTED)
    CAB.LIMIT.MAINT.REC<CAB.LIM.LIMIT.REF> = ACCT.LIMIT
    CALL F.WRITE(FN.CAB.LIMIT.MAINT,P.ID,CAB.LIMIT.MAINT.REC)

    RETURN
************
OFS.LIMIT:
************
    OFS.RECORD = ''
    Y.ERROR = ''
    APP.NAME = FIELD(CAB.ATTACH.LIMIT.REC<AC.LMA.OFS.LIMIT.VERSION>,',',1)
    OFS.FUNCTION = 'I'
    VERSION.NAME = CAB.ATTACH.LIMIT.REC<AC.LMA.OFS.LIMIT.VERSION>
    NO.OF.AUTH = '0'
    CALL OFS.BUILD.RECORD(APP.NAME,OFS.FUNCTION,'PROCESS',VERSION.NAME,'',NO.OF.AUTH,ACCT.LIMIT,LIMIT.REC,OFS.RECORD)
    options<1> =  CAB.ATTACH.LIMIT.REC<AC.LMA.OFS.ID>
    options<4> = 'HLD'
    ERR.POS = ''

    CALL OFS.CALL.BULK.MANAGER(options,OFS.RECORD,OFS.RESPONSE,OFS.COMMITTED)
    Y.ERROR = FIELD(FIELD(OFS.RESPONSE,"/",3),",",1)
    OUT.MSG = OFS.RESPONSE
    CONVERT ',' TO VM IN OUT.MSG
    LOCATE 'RECORD.STATUS:1:1=IHLD' IN OUT.MSG<1,1> SETTING ERR.POS THEN
        Y.ERROR = '-1'
    END

    RETURN
END
