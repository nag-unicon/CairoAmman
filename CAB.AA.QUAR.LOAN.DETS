    SUBROUTINE CAB.AA.QUAR.LOAN.DETS(ARR.ID)
************************************************************
* Quartely report of Opic developement
*
*
* 25-06-2015 Unpaid amount of pervious and current quartely report should contains only
*
************************************************************
    $INCLUDE T24.BP I_COMMON
    $INCLUDE T24.BP I_EQUATE
    $INCLUDE TT.BP  I_F.CAB.AA.QUAR.LOAN.COMMON
    $INCLUDE T24.BP I_F.AA.ARRANGEMENT.ACTIVITY
    $INCLUDE T24.BP I_F.AA.ACTIVITY.BALANCES
    $INCLUDE T24.BP I_F.AC.BALANCE.TYPE
    $INCLUDE T24.BP I_F.AA.ACTIVITY.HISTORY
    $INCLUDE T24.BP I_F.AA.ARRANGEMENT
    $INCLUDE T24.BP I_F.AA.ACCOUNT
    $INCLUDE T24.BP I_F.AA.ACCOUNT.DETAILS
    $INCLUDE T24.BP I_F.ACCT.ACTIVITY
    $INCLUDE T24.BP I_F.AA.PROPERTY
    $INCLUDE T24.BP I_F.CUSTOMER
    $INCLUDE T24.BP I_F.COMPANY

    GOSUB INTI
    IF PRODUCT.ID MATCHES R.REP.DETS THEN
        GOSUB GET.BASIC.DETAILS
        GOSUB GET.OS.PRI.AMT
        GOSUB GET.TOT.COMM
        GOSUB CHK.DISBURSEMENT
        GOSUB CHK.REPAYMENT
        GOSUB GET.PD.BALANCES
        GOSUB GET.LEG.STATUS
        GOSUB WRITE.DATA
    END
    RETURN

***************
GET.LEG.STATUS:
***************

***Only Legal loan new concepts introduced

    IF LEG THEN
        LEG.STATUS ="YES"
        BALANCE.TYPE.AMT = '0'
        BASE.BALANCE = 'EOPICBAL'
        GOSUB CHECK.AC.BALANCE.TYPE
        TOTDUE = BALANCE.TYPE.AMT
        C.Q.ACCOUNT = TOTDUE - REPAY.AMT
        C.ACCOUNT = TOTDUE
    END


    RETURN

*******************
GET.BALANCE.AMOUNT:
*******************
    BAL.DATE = TODAY
    BAL.DETS = ''
    CALL AC.GET.PERIOD.BALANCES(AC.ID, BASE.BALANCE, '', BAL.DATE,'', '', BAL.DETS, ERR.PROCESS)
    BALANCE.TYPE.AMT += BAL.DETS<IC.ACT.BALANCE>

    RETURN

**********************
CHECK.AC.BALANCE.TYPE:
**********************
    R.BALANCE.TYPE = ''
    BALANCE.TYPE.AMT = ''
    CALL CACHE.READ("F.AC.BALANCE.TYPE", BASE.BALANCE, R.BALANCE.TYPE, VAL.ERR)

    BASE.BALANCES = R.BALANCE.TYPE<AC.BT.VIRTUAL.BAL>
    BASE.BAL.COUNT = DCOUNT(BASE.BALANCES, VM)
    FOR BAL.COUNTER = 1 TO BASE.BAL.COUNT
        BASE.BALANCE = BASE.BALANCES<1, BAL.COUNTER>
        GOSUB GET.BALANCE.AMOUNT
    NEXT BAL.COUNTER

    RETURN

*****
INTI:
*****

    ARR.REC = '';
    CALL AA.GET.ARRANGEMENT(ARR.ID, ARR.REC, ARR.ERROR)
    PRODUCT.ID = ARR.REC<AA.ARR.PRODUCT,1>
    ARR.CCY = ARR.REC<AA.ARR.CURRENCY>


*** Check the product need to consider for report

    RETURN


***********
WRITE.DATA:
***********

    RET.ARRAY = '';
    RET.ARRAY = ACC.NO :"*":CUS.NAME :"*":CO.DESC :"*": ARR.CCY :"*":C.Q.ACCOUNT :"*":DIS.AMT:"*":'0'
    RET.ARRAY := "*":REPAY.AMT:"*":C.ACCOUNT:"*":Q.BD.BAL :"*":BD.BAL : "*":'0':"*":C.COMMIT :"*": LEG.STATUS
    CALL F.WRITE (FN.FLAT.FILE,ARR.ID,RET.ARRAY)

    RETURN

******************
GET.BASIC.DETAILS:
******************

    FN.ACT.BAL = 'F.AA.ACTIVITY.BALANCES'
    F.ACT.BAL = ''
    CALL OPF(FN.ACT.BAL,F.ACT.BAL)

    FN.AA.PROP = 'F.AA.PROPERTY'
    F.AA.PROP = ''
    CALL OPF(FN.AA.PROP,F.AA.PROP)

    MNTH.MATCHES = '01':VM:'02':VM:'03'
    ACC.NO = ARR.REC<8>
    CUS.NO = ARR.REC<1>
    CALL F.READ(FN.CUS,CUS.NO,CUS.REC,F.CUS,CUS.ERR)
    CUS.NAME = CUS.REC<EB.CUS.SHORT.NAME,1>

    CO.CODE = ARR.REC<3>
    CALL F.READ(FN.COM,CO.CODE,COM.REC,F.COM,COM.ERR)
    CO.DESC=COM.REC<EB.COM.COMPANY.NAME,1>

    LEG.BAL.REC = ''
    CALL F.READ(FN.LEG.BAL,ARR.ID,LEG.BAL.REC,F.LEG.BAL,ERR.LEG)

    UPDATE.INFO = '';
    PROCESS.TYPE = 'INITIALISE'
    CALL AA.PROCESS.ACCOUNT.DETAILS(ARR.ID, PROCESS.TYPE, UPDATE.TYPE,UPDATE.INFO, RET.ERROR)
    EFF.TODAY = TODAY ; FROM.DATE = UPDATE.INFO<AA.AD.START.DATE>

*** Last day of pervious month

    CALL CDT('',EFF.TODAY,'-1W')
    CALL GET.LAST.DOM(LEFT(EFF.TODAY,6),L.DATE,L.DAY,M.NAME)
    EFF.TODAY = LEFT(EFF.TODAY,6):L.DAY

    QUAR.DATE.MONTH = EFF.TODAY[5,2]
    QUAR.DATE.YEAR  = EFF.TODAY[1,4]


    IF QUAR.DATE.MONTH MATCHES MNTH.MATCHES THEN  QUAR.DATE.YEAR = QUAR.DATE.YEAR - 1

    CALL AA.GET.PROPERTY.RECORD('', ARR.ID, 'ACCOUNT', EFF.TODAY, 'ACCOUNT', '', R.ACCOUNT.RECORD, R.ERR)

    CALL MULTI.GET.LOC.REF('AA.ARR.ACCOUNT','LEGAL.STATUS',AC.AGEPOS)
    LEG = R.ACCOUNT.RECORD<AA.AC.LOCAL.REF,AC.AGEPOS>


    BEGIN CASE
    CASE QUAR.DATE.MONTH EQ '01' OR QUAR.DATE.MONTH EQ '02' OR QUAR.DATE.MONTH EQ '03'
        QUAR.DATE.MONTH = '12'
        QUAR.DATE = QUAR.DATE.YEAR : QUAR.DATE.MONTH : '31'
        DIS.FRM.DATE = EFF.TODAY [1,4] : '0101'
        DIS.TO.DATE = EFF.TODAY [1,4] : '0331'
        PER.FRM.DATE = ((EFF.TODAY [1,4]) - 1) : '1001'
        PER.TO.DATE = ((EFF.TODAY [1,4]) - 1) : '1231'

    CASE QUAR.DATE.MONTH EQ '04' OR QUAR.DATE.MONTH EQ '05' OR QUAR.DATE.MONTH EQ '06'
        QUAR.DATE.MONTH = '03'
        QUAR.DATE = QUAR.DATE.YEAR : QUAR.DATE.MONTH : '31'
        DIS.FRM.DATE = EFF.TODAY [1,4] : '0401'
        DIS.TO.DATE = EFF.TODAY [1,4] : '0630'
        PER.FRM.DATE = EFF.TODAY [1,4] : '0101'
        PER.TO.DATE = EFF.TODAY [1,4] : '0331'

    CASE QUAR.DATE.MONTH EQ '07' OR QUAR.DATE.MONTH EQ '08' OR QUAR.DATE.MONTH EQ '09'
        QUAR.DATE.MONTH = '06'
        QUAR.DATE = QUAR.DATE.YEAR : QUAR.DATE.MONTH : '30'
        DIS.FRM.DATE = EFF.TODAY [1,4] : '0701'
        DIS.TO.DATE = EFF.TODAY [1,4] : '0930'
        PER.FRM.DATE  = EFF.TODAY [1,4] : '0401'
        PER.TO.DATE  = EFF.TODAY [1,4] : '0630'


    CASE QUAR.DATE.MONTH EQ '10' OR QUAR.DATE.MONTH EQ '11' OR QUAR.DATE.MONTH EQ '12'
        QUAR.DATE.MONTH = '09'
        QUAR.DATE = QUAR.DATE.YEAR : QUAR.DATE.MONTH : '30'
        DIS.FRM.DATE = EFF.TODAY [1,4] : '1001'
        DIS.TO.DATE = EFF.TODAY [1,4] : '1231'
        PER.FRM.DATE = EFF.TODAY [1,4] : '0701'
        PER.TO.DATE = EFF.TODAY [1,4] : '0930'


    END CASE

    RETURN
***************
GET.OS.PRI.AMT:
***************

    R.AMT.ID = '';R.AMT.COND = '';
    CALL AA.GET.ARRANGEMENT.CONDITIONS(ARR.ID,'ACCOUNT','',EFF.DATE,R.AMT.ID,R.AMT.COND,R.AMT.ERR)
    R.AMT.COND = RAISE(R.AMT.COND)

    C.Q.ACCOUNT = ''; C.Q.BAL.DETAILS = '';
    BALANCE.TYPE="CUR":R.AMT.ID
    CALL AA.GET.PERIOD.BALANCES(ACC.NO,BALANCE.TYPE,REQUEST.TYPE,FROM.DATE,QUAR.DATE,'',C.Q.BAL.DETAILS,RET.ERR)

    C.Q.ACCOUNT = C.Q.BAL.DETAILS<4>
    NO.OF.BAL = DCOUNT(C.Q.ACCOUNT,VM)
    C.Q.ACCOUNT = C.Q.ACCOUNT<1,NO.OF.BAL>
    C.Q.ACCOUNT = ABS(C.Q.ACCOUNT)

    IF QUAR.DATE LE LEG.BAL.REC<3> THEN
        C.Q.ACCOUNT = LEG.BAL.REC<1>
    END

    C.ACCOUNT = ''; C.BAL.DETAILS = '';
    CALL AA.GET.PERIOD.BALANCES(ACC.NO,BALANCE.TYPE,REQUEST.TYPE,FROM.DATE,EFF.DATE,'',C.BAL.DETAILS,RET.ERR)
    C.ACCOUNT = C.BAL.DETAILS<4>
    NO.OF.BAL = DCOUNT(C.ACCOUNT,VM)
    C.ACCOUNT = C.ACCOUNT<1,NO.OF.BAL>
    C.ACCOUNT = ABS(C.ACCOUNT)

    RETURN
*************
GET.TOT.COMM:
*************

    CALL AA.GET.ARRANGEMENT.CONDITIONS(ARR.ID,'TERM.AMOUNT','',EFF.DATE,R.T.AMT.ID,R.T.AMT.COND,T.AMT.ERR)
    R.T.AMT.COND = RAISE(R.T.AMT.COND)

    T.COMMIT = '';
    BALANCE.TYPE="TOT":R.T.AMT.ID
    CALL AA.GET.PERIOD.BALANCES(ACC.NO,BALANCE.TYPE,REQUEST.TYPE,FROM.DATE,EFF.DATE,'',T.BAL.DETAILS,RET.ERR)
    T.COMMIT = T.BAL.DETAILS<4>
    NO.OF.TOT.COMM = DCOUNT(T.COMMIT,VM)
    T.COMMIT = T.COMMIT<1,NO.OF.TOT.COMM>
    T.COMMIT = ABS(T.COMMIT)


    C.COMMIT = ''; TM.BALANCE.TYPE = '';NO.OF.CURR.COMM = '';
    BALANCE.TYPE = "CUR":R.T.AMT.ID
    CALL AA.GET.PERIOD.BALANCES(ACC.NO,BALANCE.TYPE,REQUEST.TYPE,FROM.DATE,EFF.DATE,'',C.BAL.DETAILS,RET.ERR)
    C.COMMIT = ABS(C.BAL.DETAILS<4>)
    NO.OF.CURR.COMM = DCOUNT(C.COMMIT,VM)
    C.COMMIT = C.COMMIT<1,NO.OF.CURR.COMM>
    C.COMMIT = ABS(C.COMMIT)
    BAL.AMT = T.COMMIT - C.COMMIT

    RETURN

*****************
CHK.DISBURSEMENT:
*****************

    Y.DATA = ''
    CALL F.READ(FN.AA.ACT.HIS,ARR.ID,R.AA.ACT.HIS,F.AA.ACT.HIS,ACT.ERR)
    ACT.BAL.REC = '';
    CALL F.READ(FN.ACT.BAL,ARR.ID,ACT.BAL.REC,F.ACT.BAL,ACT.ERR)

    NOTFOUND.FLAG = '1'
    VAL.ACT.ACTIVITY = R.AA.ACT.HIS<AA.AH.ACTIVITY>
    VAL.ACT.ACTIVITY.ID = R.AA.ACT.HIS<AA.AH.ACTIVITY.REF>
    VAL.ACT.STATUS = R.AA.ACT.HIS<AA.AH.ACT.STATUS>
    VAL.ACT.DATE = R.AA.ACT.HIS<AA.AH.SYSTEM.DATE>

    CONVERT SM TO VM IN VAL.ACT.ACTIVITY
    CONVERT SM TO VM IN VAL.ACT.ACTIVITY.ID
    CONVERT SM TO VM IN VAL.ACT.STATUS
    CONVERT SM TO VM IN VAL.ACT.DATE

    CONVERT VM TO FM IN VAL.ACT.ACTIVITY
    CONVERT VM TO FM IN VAL.ACT.ACTIVITY.ID
    CONVERT VM TO FM IN VAL.ACT.STATUS
    CONVERT VM TO FM IN VAL.ACT.DATE

    LOOP
    WHILE (NOTFOUND.FLAG)

        LOCATE 'LENDING-DISBURSE-COMMITMENT' IN VAL.ACT.ACTIVITY SETTING ARR.POS THEN
            IF VAL.ACT.STATUS<ARR.POS> = 'AUTH' AND VAL.ACT.DATE<ARR.POS> GE DIS.FRM.DATE AND VAL.ACT.DATE<ARR.POS> LE DIS.TO.DATE THEN
                SEL.ID = VAL.ACT.ACTIVITY.ID<ARR.POS>
                VAL.ACT.ACTIVITY<ARR.POS> = ''
                GOSUB PROCESS
            END ELSE
                VAL.ACT.ACTIVITY<ARR.POS> = ''
            END
        END ELSE
            NOTFOUND.FLAG = '0'
        END

    REPEAT
    RETURN

*********
PROCESS:
*********
    AC.ID=''
    CO.CODE = ''
    PRD.NAME = ''
    CUS.ID = ''
    VALUE.DATE = ''

    CALL F.READ(FN.AA.ARR.ACTIVITY,SEL.ID,R.AA.ARR.ACTIVITY,F.AA.ARR.ACTIVITY,ARR.ERR)
    ARR.ID = R.AA.ARR.ACTIVITY<AA.ARR.ACT.ARRANGEMENT>
    DIS.DATE = R.AA.ARR.ACTIVITY<AA.ARR.ACT.EFFECTIVE.DATE>
    CUS.ID = R.AA.ARR.ACTIVITY<AA.ARR.ACT.CUSTOMER>
    PRD.NAME = R.AA.ARR.ACTIVITY<AA.ARR.ACT.PRODUCT>
    COM.CODE = R.AA.ARR.ACTIVITY<AA.ARR.ACT.ARR.COMPANY.CODE>
    DIS.AMT += R.AA.ARR.ACTIVITY<AA.ARR.ACT.TXN.AMOUNT>
    CON.ID = R.AA.ARR.ACTIVITY<AA.ARR.ACT.TXN.CONTRACT.ID>
    CALL AA.GET.ARRANGEMENT(ARR.ID,R.ARRANGEMENT,ARG.ERR)
    AC.ID = R.ARRANGEMENT<AA.ARR.LINKED.APPL.ID,1>
    GRT.DATE = R.ARRANGEMENT<AA.ARR.START.DATE>
    RETURN

**************
CHK.REPAYMENT:
**************
    REPAY.AMT = '';

    STATIC.ACTIVITY = "LENDING-APPLYPAYMENT-PR.ACCRUED.INTEREST":@VM:"LENDING-APPLYPAYMENT-PR.CURRENT.BALANCES":@VM:"LENDING-APPLYPAYMENT-PR.ERROR"
    STATIC.ACTIVITY := @VM:"LENDING-APPLYPAYMENT-PR.ERROR2":@VM:"LENDING-APPLYPAYMENT-PR.PAYOFF":@VM:"LENDING-APPLYPAYMENT-PR.PRINCIPAL.DECREASE"
    STATIC.ACTIVITY := @VM:"LENDING-APPLYPAYMENT-PR.REPAYMENT":@VM:"LENDING-APPLYPAYMENT-PR.SUBSIDY":@VM:"LENDING-SETTLE-PAYOFF"
    STATIC.ACTIVITY := @VM:"LENDING-SETTLE-PR.ACCRUED.INTEREST":@VM:"LENDING-SETTLE-PR.CURRENT.BALANCES":@VM:"LENDING-SETTLE-PR.PAYOFF"
    STATIC.ACTIVITY := @VM:"LENDING-SETTLE-PR.PRINCIPAL.DECREASE":@VM:"LENDING-SETTLE-PR.REPAYMENT":@VM:"LENDING-SETTLE-PR.SUBSIDY"

    REP.ACT.ACTIVITY = R.AA.ACT.HIS<AA.AH.ACTIVITY>
    REP.ACT.ACTIVITY.ID = R.AA.ACT.HIS<AA.AH.ACTIVITY.REF>
    REP.ACT.STATUS = R.AA.ACT.HIS<AA.AH.ACT.STATUS>
    REP.ACT.DATE = R.AA.ACT.HIS<AA.AH.EFFECTIVE.DATE>

    CONVERT SM TO VM IN REP.ACT.DATE
    CONVERT VM TO FM IN REP.ACT.DATE

    LOCATE DIS.FRM.DATE IN REP.ACT.DATE BY 'DR' SETTING REP.START THEN
        REP.START = REP.START
    END ELSE
        IF REP.START NE '1' THEN REP.START = REP.START - 1
    END

    LOCATE DIS.TO.DATE IN REP.ACT.DATE BY 'DR' SETTING REP.TO THEN
        REP.TO = REP.TO
    END ELSE
        IF REP.TO NE '1' THEN REP.TO = REP.TO - 1
    END

    LOOP
    WHILE REP.TO LE REP.START
        NOTFOUND.REPAY.FLAG = '1'
        ACT.REF = R.AA.ACT.HIS<AA.AH.ACTIVITY.REF,REP.TO>
        ACT.ACTIVITY = R.AA.ACT.HIS<AA.AH.ACTIVITY,REP.TO>
        ACT.INIT = R.AA.ACT.HIS<AA.AH.INITIATION,REP.TO>
        ACT.INT = R.AA.ACT.HIS<AA.AH.ACT.STATUS,REP.TO>
        ACT.STATUS = R.AA.ACT.HIS<AA.AH.ACT.STATUS,REP.TO>

        LOOP
        WHILE (NOTFOUND.REPAY.FLAG)
            LOCATE 'TRANSACTION' IN ACT.INIT<1,1,1> SETTING INT.POS THEN
                ACT.INIT<1,1,INT.POS> = ''
                IF ACT.ACTIVITY<1,1,INT.POS> MATCHES STATIC.ACTIVITY AND ACT.STATUS<1,1,INT.POS> EQ 'AUTH' THEN

                    GOSUB GET.ACT.BALANCES
*REPAY.AMT += R.AA.ACT.HIS<AA.AH.ACTIVITY.AMT,REP.TO,INT.POS>
                    REPAY.AMT += ACC.AMT
                END
            END ELSE
                LOCATE 'PAY*EOD' IN ACT.INIT<1,1,1> SETTING INT.POS THEN
                    ACT.INIT<1,1,INT.POS> = ''

                    IF ACT.ACTIVITY<1,1,INT.POS> MATCHES STATIC.ACTIVITY AND ACT.STATUS<1,1,INT.POS> EQ 'AUTH' THEN
*REPAY.AMT += R.AA.ACT.HIS<AA.AH.ACTIVITY.AMT,REP.TO,INT.POS>
                        GOSUB GET.ACT.BALANCES
                        REPAY.AMT + = ACC.AMT
                    END
                END ELSE
                    NOTFOUND.REPAY.FLAG = 0
                END
            END
        REPEAT
        REP.TO + = 1
    REPEAT

    RETURN

*****************
GET.ACT.BALANCES:
*****************
    ACC.AMT = '';
    LOCATE ACT.REF<1,1,INT.POS> IN ACT.BAL.REC<2,1> SETTING AAA.REF THEN
        I = 1
        PROP = ACT.BAL.REC<5,AAA.REF>

        PROP.AMOUNT = ACT.BAL.REC<6,AAA.REF>

        NO.OF.PROP = DCOUNT(PROP,SM)

        LOOP
        WHILE I LE NO.OF.PROP

            CURR.PROP = FIELD(PROP<1,1,I>,'.',1)
            PROP.AMT = PROP.AMOUNT<1,1,I>
            GOSUB GET.PROPERTY

            I+=1
        REPEAT

    END

    RETURN

*************
GET.PROPERTY:
*************
    REC.DATA = ''; WRI.FLAG='1'
    CALL F.READ(FN.AA.PROP,CURR.PROP,REC.DATA,'',REC.ERR)

    PROP.CLASS = REC.DATA<AA.PROP.PROPERTY.CLASS>
    BEGIN CASE
    CASE CURR.PROP EQ 'PENALTYINT'
        PEN.AMT +=PROP.AMT<1,1,1>
    CASE PROP.CLASS EQ 'ACCOUNT'
        ACC.AMT += PROP.AMT<1,1,1>
    CASE PROP.CLASS EQ 'INTEREST'
        INT.AMT +=PROP.AMT<1,1,1>
    CASE PROP.CLASS EQ 'CHARGE'
        CRG.AMT +=PROP.AMT<1,1,1>
    END CASE

    RETURN

****************
GET.PD.BALANCES:
****************

    PROPERTY ='ACCOUNT'

    CALL CAB.AA.BILLS.OSOR(ARR.ID,PROPERTY,OS.AMOUNT,OR.AMOUNT,PER.FRM.DATE,PER.TO.DATE)
    Q.BD.BAL =  OS.AMOUNT

    CALL CAB.AA.BILLS.OSOR(ARR.ID,PROPERTY,OS.AMOUNT,OR.AMOUNT,DIS.FRM.DATE,DIS.TO.DATE)
    BD.BAL = OS.AMOUNT

    RETURN

END
