    SUBROUTINE CAB.AA.CR.DB.VALIDATE
    $INCLUDE T24.BP I_COMMON
    $INCLUDE T24.BP I_EQUATE
    $INCLUDE T24.BP I_F.ACCOUNT
    $INCLUDE T24.BP I_F.ALTERNATE.ACCOUNT
    $INCLUDE T24.BP I_F.AA.ARRANGEMENT
    $INCLUDE T24.BP I_F.FUNDS.TRANSFER

**************************************************
*** Credit and Debit validate for funds transfer
***
***
***
***************************************************

    GOSUB INIT
    GOSUB CHECK.ARRANGEMENT

    RETURN

****
INIT:
****

    FN.AA.ARR ='F.AA.ARRANGEMENT'
    F.AA.ARR=''
    CALL OPF(FN.AA.ARR,F.AA.ARR)

    FN.ALT.ACCOUNT='F.ALTERNATE.ACCOUNT'
    F.ALT.ACCOUNT=''
    CALL OPF(FN.ALT.ACCOUNT,F.ALT.ACCOUNT)

    FN.CAB.ACCOUNT ='F.ACCOUNT'
    F.CAB.ACCOUNT=''
    CALL OPF(FN.CAB.ACCOUNT,F.CAB.ACCOUNT)

    RETURN

*******************
CHECK.ARRANGEMENT:
*******************

    TXN.TYPE = R.NEW(FT.TRANSACTION.TYPE)

    BEGIN CASE
    CASE TXN.TYPE EQ "ACCR"
        USER.TEXT ='Debit account should not be an Arrangement'
        ACCOUNT.ID = R.NEW(FT.DEBIT.ACCT.NO)
        GOSUB CHECK.ACCOUNT

    CASE TXN.TYPE EQ "ACDB"
        USER.TEXT ='Credit account should not be an Arrangement'
        ACCOUNT.ID =R.NEW(FT.CREDIT.ACCT.NO)
        GOSUB CHECK.ACCOUNT
    END CASE

    RETURN
***************
CHECK.ACCOUNT:
***************
    ARR.ID =''
    R.ALT.ACCOUNT=''
    CALL F.READ(FN.ALT.ACCOUNT,ACCOUNT.ID,R.ALT.ACCOUNT,F.ALT.ACCOUNT,ERR.ALT)

    IF NOT(ERR.ALT) THEN
        ACCOUNT.ID = R.ALT.ACCOUNT<AAC.GLOBUS.ACCT.NUMBER>
    END

    CALL F.READ(FN.CAB.ACCOUNT,ACCOUNT.ID,R.ACCOUNT,F.CAB.ACCOUNT,ERR.ACC)
    ARR.ID = R.ACCOUNT<AC.ARRANGEMENT.ID>

    IF ARR.ID THEN
        ETEXT = USER.TEXT
        CALL STORE.END.ERROR
    END

    RETURN

END
