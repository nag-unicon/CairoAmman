    SUBROUTINE AA.GET.BILL.OSOR.TOTAL(ARR.ID,ACC.ID,PROCESS.TYPE,AMOUNT)
***************************************************************************************
* 03/04/2015 - Final Changes done
*
*
***************************************************************************************
    $INCLUDE T24.BP I_COMMON
    $INCLUDE T24.BP I_EQUATE
    $INCLUDE T24.BP I_F.AA.BILL.DETAILS
    $INCLUDE T24.BP I_F.ACCT.ACTIVITY
    $INCLUDE T24.BP I_F.AC.BALANCE.TYPE

    GOSUB INIT
    GOSUB PROCESS

    RETURN

********
PROCESS:
********

    BEGIN CASE
    CASE PROCESS.TYPE EQ 'TOTAL'
        GOSUB TOT.PROCESS
        AMOUNT = TOT.OS.AMT
    CASE PROCESS.TYPE EQ 'CURRENT'
        GOSUB TOT.PROCESS
        GOSUB CUR.ACCOUNT
        AMOUNT = TOT.OS.AMT + CAB.CURACCOUNT.AMT
    END CASE

    RETURN

*****
INIT:
*****
    SUSP.CNT = ''
    AC.TYPE = "INITIALISE"
    CALL AA.PROCESS.ACCOUNT.DETAILS(ARR.ID, AC.TYPE, "", R.AA.ACCOUNT.DETAILS, RET.ERROR)

    LAST.PAYMENT.DATE = ''
    BILL.CREATE.DATE = ''
    BILL.STATUS = ''
    BILL.TYPE = "PAYMENT"
    CALL AA.GET.BILL(ARR.ID, "", LAST.PAYMENT.DATE, BILL.CREATE.DATE, BILL.TYPE, "", BILL.STATUS, "", "", "", "", OS.BILL.REFERENCES, RET.ERROR)

    TOT.OS.AMT = '0'
    PRINCIPALINT = '0'

    RETURN

************
TOT.PROCESS:
************

    LOOP
        REMOVE BILL.ID FROM OS.BILL.REFERENCES SETTING REF.POS
    WHILE BILL.ID
        IF BILL.ID THEN
            CALL AA.GET.BILL.DETAILS(ARR.ID, BILL.ID, R.BILL.DETAILS, R.ERR)
            IF R.BILL.DETAILS<AA.BD.OS.TOTAL.AMOUNT> GT '0' THEN
                TOT.OS.AMT += R.BILL.DETAILS<AA.BD.OS.TOTAL.AMOUNT>
            END
        END
    REPEAT

    RETURN
************
CUR.ACCOUNT:
************

    BALANCE.TYPE.AMT = '0'
    BASE.BALANCE = 'ECURACC'
    GOSUB CHECK.AC.BALANCE.TYPE
    CAB.CURACCOUNT.AMT = ABS(BALANCE.TYPE.AMT)

    RETURN

**********************
CHECK.AC.BALANCE.TYPE:
**********************

    R.BALANCE.TYPE = ''
    BALANCE.TYPE.AMT = ''
    CALL CACHE.READ("F.AC.BALANCE.TYPE", BASE.BALANCE, R.BALANCE.TYPE, VAL.ERR)

    BASE.BALANCES = R.BALANCE.TYPE<AC.BT.VIRTUAL.BAL>
    BASE.BAL.COUNT = DCOUNT(BASE.BALANCES, VM)
    FOR BAL.COUNTER = 1 TO BASE.BAL.COUNT
        BASE.BALANCE = BASE.BALANCES<1, BAL.COUNTER>
        GOSUB GET.BALANCE.AMOUNT
    NEXT BAL.COUNTER

    RETURN

*******************
GET.BALANCE.AMOUNT:
*******************

    BAL.DATE = TODAY
    BAL.DETS = ''
    AC.ID = ACC.ID

    CALL AC.GET.PERIOD.BALANCES(AC.ID, BASE.BALANCE, '', BAL.DATE,'', '', BAL.DETS, ERR.PROCESS)
    BALANCE.TYPE.AMT += BAL.DETS<IC.ACT.BALANCE>
    RETURN

END
