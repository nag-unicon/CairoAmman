*-----------------------------------------------------------------------------
* <Rating>-32</Rating>
*-----------------------------------------------------------------------------
    SUBROUTINE CAB.AVAIL.BALANCE.AA(ACCT.ID,R.ACCT,WRK.BAL,AVAIL.BAL)
*/rtn to calculate the available balance to return
*/AVAIL.BAL = WORK.BAL - LOCKED.AMT - TXN.AMT
    $INCLUDE T24.BP I_COMMON
    $INCLUDE T24.BP I_EQUATE
    $INCLUDE T24.BP I_F.ACCOUNT
    $INCLUDE T24.BP I_F.ACCOUNT.CLASS
    $INCLUDE T24.BP I_F.CURRENCY
    $INCLUDE T24.BP I_F.ACCT.GROUP.CONDITION
    $INCLUDE T24.BP I_F.LIMIT


    GOSUB INITIALISE
    GOSUB PROCESS
    RETURN


*
INITIALISE:
*--------*
    FN.ACCOUNT.CLASS = 'F.ACCOUNT.CLASS'
**    CALL OPF(FN.ACCOUNT.CLASS,F.ACCOUNT.CLASS)
    F.ACCOUNT.CLASS = ''
    OPEN FN.ACCOUNT.CLASS TO F.ACCOUNT.CLASS ELSE
        CRT "ERROR IN OPEN"
    END

    FN.ACCT.GRP.COND='FBNK.ACCT.GROUP.CONDITION'

    FV.ACCT.GRP.COND=""
**    CALL OPF(FN.ACCT.GRP.COND,FV.ACCT.GRP.COND)
    OPEN FN.ACCT.GRP.COND TO FV.ACCT.GRP.COND ELSE
        CRT "ERROR IN OPEN"
    END

    FN.LIMIT = 'F.LIMIT'
    F.LIMIT = ''

    CALL OPF(FN.LIMIT,F.LIMIT)
*   OPEN FN.LIMIT TO F.LIMIT ELSE
*       CRT "ERROR IN OPEN"
*   END

    RETURN

*
PROCESS:

    GOSUB GET.MIN.BAL
    GOSUB GET.LIMIT.AMT
    U.LOCK.AMT =0
*    YR = OCONV(DATE(),"D-")
*    YR.DATE=YR[7,4]:YR[1,2]:YR[4,2]
    YR.DATE = TODAY
    IF R.ACCT<AC.FROM.DATE> THEN

        U.CTR = DCOUNT(R.ACCT<AC.FROM.DATE>, @VM)
        FOR U.I = 1 TO U.CTR

            IF YR.DATE GE R.ACCT<AC.FROM.DATE, U.I> THEN

                U.LOCK.AMT = R.ACCT<AC.LOCKED.AMOUNT,U.I>
            END
        NEXT U.I
    END
**    IF WRK.BAL LT 0 THEN
*        AVAIL.BAL = ABS(WRK.BAL) + (U.LOCK.AMT + ACCT.MIN.BAL)
**        AVAIL.BAL = ABS(WRK.BAL) + U.LOCK.AMT
**        AVAIL.BAL = AVAIL.BAL * -1
**    END ELSE
*        AVAIL.BAL = WRK.BAL - (U.LOCK.AMT + ACCT.MIN.BAL)
**        AVAIL.BAL = WRK.BAL - U.LOCK.AMT
**    END


    AVAIL.BAL = YR.AVAIL.BAL + AVAIL.AMT - U.LOCK.AMT
    RETURN

GET.MIN.BAL:

    GRP.COND=R.ACCT<AC.CONDITION.GROUP>
    CCY.CODE = R.ACCT<AC.CURRENCY>
    ACCT.GRP.COND.ID=GRP.COND:CCY.CODE
    CALL F.READ(FN.ACCT.GRP.COND,ACCT.GRP.COND.ID,R.GRP.COND,FV.ACCT.GRP.COND,ERR.GRP)

    ACCT.MIN.BAL=R.GRP.COND<ACCT.GRP.MINIMUM.BAL>

    RETURN

GET.LIMIT.AMT:


*    LIMIT.REF = R.ACCT<AC.LIMIT.REF>
*    LIMIT.REF = R.ACCT<AC.CUSTOMER>:'.':FMT(FIELD(LIMIT.REF,'.',1),'R%7'):'.':FIELD(LIMIT.REF,'.',2)

*    DIM R.LIMIT(500)

*    MATREAD R.LIMIT FROM F.LIMIT,LIMIT.REF THEN
*        AVAIL.AMT = 0
*        CALL AT.CALC.AVAIL.LIMIT(MAT R.LIMIT,AVAIL.AMT)
*    END

    DIM R.ACCOUNT(500)

    MATPARSE R.ACCOUNT FROM R.ACCT
    AF.DATE = YR.DATE
    YR.AVAIL.BAL = ''
    CALL GET.WORKING.AVAIL.BAL(AF.DATE,ACCT.ID, MAT R.ACCOUNT,'',YR.AVAIL.BAL)
    LIMIT.AMT = ''
    AVAIL.AMT  = ''

    CUST.ID = R.ACCT<AC.CUSTOMER>
    LI.ID = R.ACCT<AC.LIMIT.REF>
    LIMIT.ID = CUST.ID :'.': FMT(LI.ID,"R2%10")

    CALL AC.GET.ONLINE.LIMIT(ACCT.ID, MAT R.ACCOUNT,AF.DATE, LIMIT.AMT, LIMIT.EXPIRY)
    CALL F.READ(FN.LIMIT,LIMIT.ID,R.LIMIT,F.LIMIT,ER.LIMIT)

    AVAIL.AMT = R.LIMIT<LI.ONLINE.LIMIT>
*AVAIL.AMT = LIMIT.AMT


    RETURN
