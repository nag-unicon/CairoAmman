    SUBROUTINE AA.EASY.INSTALL.REPORT(ARR.ID)
*******************************************************************************
*** Batch job is used for generating EASYINSTALMENT Loan Report
***
***
*******************************************************************************

    $INCLUDE T24.BP I_COMMON
    $INCLUDE T24.BP I_EQUATE
    $INCLUDE T24.BP I_F.CUSTOMER
    $INCLUDE T24.BP I_F.AA.ACCOUNT
    $INCLUDE T24.BP I_F.AA.CHARGE
    $INCLUDE T24.BP I_F.AA.INTEREST
    $INCLUDE T24.BP I_F.AA.TERM.AMOUNT
    $INCLUDE T24.BP I_F.AA.ACTIVITY.HISTORY
    $INCLUDE T24.BP I_F.AA.PAYMENT.SCHEDULE
    $INCLUDE T24.BP I_F.AA.ACCOUNT.DETAILS
    $INCLUDE T24.BP I_F.AA.ARRANGEMENT
    $INCLUDE T24.BP I_F.COMPANY
    $INCLUDE T24.BP I_F.AC.BALANCE.TYPE
    $INCLUDE T24.BP I_F.ACCT.ACTIVITY
    $INCLUDE AAA.BP I_F.CAB.MERCHANT
    $INCLUDE TT.BP I_EASY.INSTAL.COMMON


*** "AA Id,Customer Number,Customer Name,Supplier Number,Supplier Name,Current Account,Product Name,Grant Date,Branch Code,Loan Status,Total Commitment,Interest Rate,Term,Supplier Net Amount,Number Of Installment,Maturity Date"

    GOSUB GET.ACC.DETAILS
    GOSUB GET.ECB.BALANCE
    GOSUB GET.CUST.DETAILS
    GOSUB GET.SUPP.DETAILS
    GOSUB GET.MER.DETAILS
    GOSUB GET.INT.RATE
    GOSUB WRITE.FILE
    RETURN

**********
WRITE.FILE:
**********

    RECORD=""
    RECORD:= CUSTOMER.ID :',': CUSTOMER.NAME :',': SUPPLIER.BRANCH :',': SUPPLIER.CO.CODE :',': SUPPLIER.NUMBER :',': SUPPLIER.AC.NUMBER :',': SUPPLIER.NAME :',': CURRENT.ACCOUNT :',': PRODUCT.NAME :',': GRAND.DATE :',':
    RECORD:= BRANCH.NAME :',': BRANCH.CODE :',': LOAN.STATUS :',': TOTAL.COMM.AMOUNT :',': INTEREST.RATE :',': TERM :',': SUPP.NET.AMOUNT :',': MATURITY.DATE :',': LAST.PAYMENT.DATE :',': TOT.DUE.BALANCE :',': ARR.STATUS
    CALL F.WRITE(FN.EASY,ARR.ID,RECORD)

    RETURN

****************
GET.ECB.BALANCE:
****************

    ACCOUNT.ID =R.ARR<AA.ARR.LINKED.APPL.ID,1>
    BALANCE.TYPE = "CURACCOUNT"
    REQUEST.DATE = TODAY
    BALANCE.AMOUNT = ""
    CALL AA.GET.ECB.BALANCE.AMOUNT(ACCOUNT.ID, BALANCE.TYPE, REQUEST.DATE, BALANCE.AMOUNT,RET.ERROR)

    CURRENT.ACCOUNT = ABS(BALANCE.AMOUNT)

    ACCOUNT.ID =R.ARR<AA.ARR.LINKED.APPL.ID,1>
    BALANCE.TYPE = "TOTCOMMITMENT"
    REQUEST.DATE = TODAY
    BALANCE.AMOUNT = ""
    CALL AA.GET.ECB.BALANCE.AMOUNT(ACCOUNT.ID, BALANCE.TYPE, REQUEST.DATE, BALANCE.AMOUNT,RET.ERROR)

    TOTAL.COMM.AMOUNT = ABS(BALANCE.AMOUNT)

    TOT.DUE.BALANCE = ''
    BALANCE.TYPE.AMT = '0'
    BASE.BALANCE = 'ETOTALDUE'
    GOSUB CHECK.AC.BALANCE.TYPE
    TOT.DUE.BALANCE = BALANCE.TYPE.AMT

    RETURN

**********************
CHECK.AC.BALANCE.TYPE:
**********************
    R.BALANCE.TYPE = ''
    BALANCE.TYPE.AMT = ''
    CALL CACHE.READ("F.AC.BALANCE.TYPE", BASE.BALANCE, R.BALANCE.TYPE, VAL.ERR)

    BASE.BALANCES = R.BALANCE.TYPE<AC.BT.VIRTUAL.BAL>
    BASE.BAL.COUNT = DCOUNT(BASE.BALANCES, VM)
    FOR BAL.COUNTER = 1 TO BASE.BAL.COUNT
        BASE.BALANCE = BASE.BALANCES<1, BAL.COUNTER>
        GOSUB GET.BALANCE.AMOUNT
    NEXT BAL.COUNTER

    RETURN

*******************
GET.BALANCE.AMOUNT:
*******************
    BAL.DATE = TODAY
    BAL.DETS = ''
    CALL AC.GET.PERIOD.BALANCES(ACCOUNT.ID, BASE.BALANCE, '', BAL.DATE,'', '', BAL.DETS, ERR.PROCESS)
    BALANCE.TYPE.AMT += BAL.DETS<IC.ACT.BALANCE>
    RETURN

***************
GET.ACC.DETAILS:
***************
*** Flag to cater the skip of record

    SKIP.ARR ='1'

    CALL AA.GET.ARRANGEMENT(ARR.ID,R.ARR,ERR.ARR)
    CUSTOMER.ID = R.ARR<AA.ARR.CUSTOMER,1>
    PRODUCT.NAME = R.ARR<AA.ARR.PRODUCT>
    BRANCH.CODE = R.ARR<AA.ARR.CO.CODE>
    ARR.STATUS = R.ARR<AA.ARR.ARR.STATUS>
    CALL F.READ(FN.CUST.COMP,BRANCH.CODE,R.LOAN.COMPANY,F.CUST.COMP,ERR.COMP)
    BRANCH.NAME = R.LOAN.COMPANY<EB.COM.COMPANY.NAME,1>


    CALL F.READ(FN.AA.ACCOUNT.DETAILS,ARR.ID,R.AA.ACCOUNT.DETAILS,F.AA.ACCOUNT.DETAILS,ERR.AA.ACC)
    LOAN.STATUS = R.AA.ACCOUNT.DETAILS<AA.AD.ARR.AGE.STATUS>
    MATURITY.DATE = R.AA.ACCOUNT.DETAILS<AA.AD.MATURITY.DATE>
    GRAND.DATE = R.AA.ACCOUNT.DETAILS<AA.AD.START.DATE>

*** This report will fetch the data if maturity date is not more 2 year from the report running date

    VAL.DATE = (LEFT(MATURITY.DATE,4) + 2) : RIGHT(MATURITY.DATE,4)
    IF VAL.DATE LE TODAY THEN
        SKIP.ARR = '0'
    END


    RETURN
***************
GET.MER.DETAILS:
***************

    CALL AA.GET.PROPERTY.RECORD('', ARR.ID, 'REPAYMENT.SCHEDULE', EFFECTIVE.DATE, 'PAYMENT.SCHEDULE', '', R.PAYMENT, R.ERR)

    CALL AA.GET.PROPERTY.RECORD('', ARR.ID, 'COMMITMENT', EFFECTIVE.DATE, 'TERM.AMOUNT', '', R.TERM.AMOUNT, R.ERR)

    TERM = R.TERM.AMOUNT<AA.AMT.TERM>
***TERM.IN.DATE = LEFT(TERM.IN.DATE,LEN(TERM.IN.DATE)-1)
    CALL F.READ(FN.CAB.MER,SUPPLIER.NUMBER,R.CAB.MERCHANT,F.CAB.MER,ER.CAB.MER)

    TENORS= R.CAB.MERCHANT<CA.TENOR>

*LOCATE TERM IN TENORS<1,1> SETTING F.POS THEN
*     INTEREST.RATE =  R.CAB.MERCHANT<CA.COMMISSION.RATE,F.POS>
*END

    CALL AA.GET.PROPERTY.RECORD('', ARR.ID, 'EASYINSTLMENT', EFFECTIVE.DATE, 'CHARGE', '', R.AA.CHARGE, R.ERR)

    INTEREST.RATE = R.AA.CHARGE<AA.CHG.CHARGE.RATE,1>

    LAST.PAYMENT.DATE = R.PAYMENT<AA.PS.PAYMENT.END.DATE>

    IF NOT(SUPPLIER.AC.NUMBER) THEN
        SUPPLIER.AC.NUMBER = R.CAB.MERCHANT<CA.MERCHANT.ACCOUNT>
    END

    RETURN

****************
GET.SUPP.DETAILS:
****************
    EFFECTIVE.DATE = TODAY
    CALL AA.GET.PROPERTY.RECORD('', ARR.ID, 'ACCOUNT', EFFECTIVE.DATE, 'ACCOUNT', '', R.AA.ACCOUNT, R.ERR)

    APP.NAME = 'AA.ARR.ACCOUNT'
    FIELD.NAME= "MERCHANT": @VM :"SUPP.NAME ":@VM: "SUPP.BRANCH" :@VM: "DRAWACCOUNT"
    FIELD.POS = '';

    CALL MULTI.GET.LOC.REF(APP.NAME,FIELD.NAME,FIELD.POS)

    SUPPLIER.NUMBER = R.AA.ACCOUNT<AA.AC.LOCAL.REF,FIELD.POS<1,1>>
    SUPPLIER.AC.NUMBER = R.AA.ACCOUNT<AA.AC.LOCAL.REF,FIELD.POS<1,4>>

**SUPPLIER.BRANCH = R.AA.ACCOUNT<AA.AC.LOCAL.REF,FIELD.POS<1,1>>
    CALL F.READ(FN.CUSTOM,SUPPLIER.NUMBER,R.SUP.CUSTOMER,F.CUSTOM,ERR.CUST)
    SUPPLIER.CO.CODE = R.SUP.CUSTOMER<EB.CUS.COMPANY.BOOK>
    SUPPLIER.NAME = R.SUP.CUSTOMER<EB.CUS.SHORT.NAME,1>


    CALL F.READ(FN.CUST.COMP,SUPPLIER.CO.CODE,R.SUP.COMPANY,F.CUST.COMP,ERR.COMP)
    SUPPLIER.BRANCH = R.SUP.COMPANY<EB.COM.COMPANY.NAME,1>

    RETURN
****************
GET.CUST.DETAILS:
****************

    CALL F.READ(FN.CUSTOM,CUSTOMER.ID,R.CUSTOMER,F.CUSTOM,ERR.CUST)
    CUSTOMER.NAME = R.CUSTOMER<EB.CUS.SHORT.NAME,1>

    RETURN
************
GET.INT.RATE:
************

    CALL F.READ(FN.ACT.HIST,ARR.ID,R.ACT.HIST,F.ACT.HIST,ERR.HIST.ACT)

    DISBURSE = R.ACT.HIST<AA.AH.ACTIVITY>
    FINDSTR 'LENDING-DISBURSE-COMMITMENT' IN DISBURSE  SETTING FLD.POS, DIS.POS , SUB.POS THEN
        SUPP.NET.AMOUNT = R.ACT.HIST<AA.AH.ACTIVITY.AMT, DIS.POS , SUB.POS>
    END ELSE
        SUPP.NET.AMOUNT ='N/A'
    END

    RETURN
