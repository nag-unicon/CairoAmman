    SUBROUTINE CAB.AMEND.LIMIT.INT.RTN
    $INCLUDE T24.BP I_COMMON
    $INCLUDE T24.BP I_EQUATE
    $INCLUDE T24.BP I_F.LIMIT
    $INCLUDE T24.BP I_F.ACCOUNT
    $INCLUDE T24.BP I_F.LIMIT
    $INCLUDE BP I_F.CAB.LIMIT.PROD
    $INCLUDE T24.BP I_F.ACCOUNT.DEBIT.INT
    $INCLUDE T24.BP I_GTS.COMMON

    IF V$FUNCTION EQ 'A' OR V$FUNCTION EQ 'I' THEN
        GOSUB INIT
        GOSUB MAIN
    END
    RETURN
******
INIT:
*****
    FILE.PATH = 'LIMIT.TRXN'
    FILE.NAME = 'Limit_Trxn_' : TODAY : '.csv'
    OPENSEQ FILE.PATH,FILE.NAME TO FILE.LIMIT ELSE
        CREATE FILE.LIMIT ELSE
            STOP
        END
    END

!!    WRITESEQ 'Account Number' : ',' : 'Account Title' : ',' : 'Limit Reference' : ',' : 'Limit Amount' : ',' : 'Branch Code' APPEND TO FILE.LIMIT ELSE
!!    END

    OFS.SOURCE.ID = 'CABPOS'
    S.ID = '' ; LIMIT.ID = '' ; Y.FLAG = ''
    DB.CNT = '' ; DB.INT.ID = '' ; LIMIT.AMT = ''
    OFS.MSG = '' ; R.CNT = '' ; R2.CNT = ''
    OFS2.MSG = ''
    FN.ACCOUNT.DEBIT.INT = 'F.ACCOUNT.DEBIT.INT'
    F.ACCOUNT.DEBIT.INT = ''
    CALL OPF(FN.ACCOUNT.DEBIT.INT,F.ACCOUNT.DEBIT.INT)

    FN.ACCOUNT = 'F.ACCOUNT'
    F.ACCOUNT = ''
    CALL OPF(FN.ACCOUNT,F.ACCOUNT)


    FN.CAB.LIMIT.PROD = 'F.CAB.LIMIT.PROD'
    F.CAB.LIMIT.PROD = ''
    CALL OPF(FN.CAB.LIMIT.PROD,F.CAB.LIMIT.PROD)

    CALL F.READ(FN.CAB.LIMIT.PROD,"SYSTEM",PROD.REC,F.CAB.LIMIT.PROD,PROD.ERR)
    S.ID = FIELD(ID.NEW,'.',2)[4,1]
    IF S.ID EQ '0' THEN
        LIMIT.ID = FIELD(ID.NEW,'.',2)[5,3]
    END ELSE
        LIMIT.ID = FIELD(ID.NEW,'.',2)[4,4]
    END
    LOCATE LIMIT.ID IN PROD.REC<CAB.LMPR.LIMIT.PRODUCT,1> SETTING POS THEN
        Y.FLAG = 'Y'
    END
    RETURN
*****
MAIN:
*****

    ACCT.ID = R.NEW(LI.ACCOUNT)
    IF ACCT.ID NE '' AND Y.FLAG EQ 'Y' THEN
        CALL F.READ(FN.ACCOUNT,ACCT.ID,R.ACCOUNT,F.ACCOUNT,ACCT.ERROR)
        IF R.ACCOUNT THEN
            DB.CNT = DCOUNT(R.ACCOUNT<AC.ACCT.DEBIT.INT>,VM)
            V.DATE = R.ACCOUNT<AC.ACCT.DEBIT.INT,DB.CNT>
            DB.INT.ID = ACCT.ID : '-' : V.DATE
            CALL F.READ(FN.ACCOUNT.DEBIT.INT,DB.INT.ID,DEBIT.INT.REC,F.ACCOUNT.DEBIT.INT,DEBIT.INT.ERROR)
            IF DEBIT.INT.REC THEN
                LIMIT.AMT = R.NEW(LI.MAXIMUM.TOTAL)
                IF LIMIT.AMT EQ 0 THEN
                    LIMIT.AMT = 1
                END

                IF DEBIT.INT.REC<IC.ADI.DR.LIMIT.AMT> NE LIMIT.AMT THEN
                    R2.CNT = DCOUNT(DEBIT.INT.REC<IC.ADI.DR2.INT.RATE>,VM)
                    IF R2.CNT EQ '1' THEN
                        OFS2.MSG :=',DR2.BALANCE.TYPE:1:1=':DEBIT.INT.REC<IC.ADI.DR2.BALANCE.TYPE> :
                        OFS2.MSG :=',DR2.CALCUL.TYPE:1:1=' : DEBIT.INT.REC<IC.ADI.DR2.CALCUL.TYPE> : ',DR2.INT.RATE:1:1=':DEBIT.INT.REC<IC.ADI.DR2.INT.RATE,1> :
                        OFS2.MSG :=',DR2.MARGIN.OPER:1:1=': DEBIT.INT.REC<IC.ADI.DR.MARGIN.OPER,1> : ',DR2.MARGIN.RATE:1:1=' : DEBIT.INT.REC<IC.ADI.DR2.MARGIN.RATE,1> :
                        OFS2.MSG :=',DR2.INT.RATE:1:1=':DEBIT.INT.REC<IC.ADI.DR2.INT.RATE,1> :
                        OFS2.MSG :=',DR2.MARGIN.OPER:1:1=': DEBIT.INT.REC<IC.ADI.DR2.MARGIN.OPER,1> : ',DR2.MARGIN.RATE:1:1=' : DEBIT.INT.REC<IC.ADI.DR2.MARGIN.RATE,1>
                        OFS2.MSG :=',DR2.BASIC.RATE:1:1=' : DEBIT.INT.REC<IC.ADI.DR2.BASIC.RATE,1>
                        OFS2.MSG :=',DR2.MIN.RATE:1:1=': DEBIT.INT.REC<IC.ADI.DR2.MIN.RATE,1>
                    END
                    IF R2.CNT EQ '2' THEN

                        OFS2.MSG :=',DR2.INT.RATE:1:1=':DEBIT.INT.REC<IC.ADI.DR2.INT.RATE,1>
                        OFS2.MSG :=',DR2.MARGIN.OPER:1:1=': DEBIT.INT.REC<IC.ADI.DR.MARGIN.OPER,1> : ',DR2.MARGIN.RATE:1:1=' : DEBIT.INT.REC<IC.ADI.DR2.MARGIN.RATE,1>
                        OFS2.MSG :=',DR2.INT.RATE:1:1=': DEBIT.INT.REC<IC.ADI.DR2.INT.RATE,1>
                        OFS2.MSG :=',DR2.MARGIN.OPER:1:1=': DEBIT.INT.REC<IC.ADI.DR2.MARGIN.OPER,1> : ',DR2.MARGIN.RATE:1:1=' : DEBIT.INT.REC<IC.ADI.DR2.MARGIN.RATE,1>
                        OFS2.MSG :=',DR2.BASIC.RATE:1:1=' : DEBIT.INT.REC<IC.ADI.DR2.BASIC.RATE,1>
                        OFS2.MSG :=',DR2.MIN.RATE:1:1=': DEBIT.INT.REC<IC.ADI.DR2.MIN.RATE,1>
                        OFS2.MSG :=',DR2.BALANCE.TYPE:1:1=':DEBIT.INT.REC<IC.ADI.DR2.BALANCE.TYPE>
                        OFS2.MSG :=',DR2.CALCUL.TYPE:1:1=' : DEBIT.INT.REC<IC.ADI.DR2.CALCUL.TYPE> : ',DR2.INT.RATE:2:1=':DEBIT.INT.REC<IC.ADI.DR.INT.RATE,1> :
                        OFS2.MSG :=',DR2.MARGIN.OPER:2:1=': DEBIT.INT.REC<IC.ADI.DR2.MARGIN.OPER,2> : ',DR2.MARGIN.RATE:2:1=' : DEBIT.INT.REC<IC.ADI.DR2.MARGIN.RATE,2> :
                        OFS2.MSG :=',DR2.LIMIT.AMT:1:1=' : LIMIT.AMT
                        OFS2.MSG :=',DR2.INT.RATE:2:1=':DEBIT.INT.REC<IC.ADI.DR2.INT.RATE,2>
                        OFS2.MSG :=',DR2.MARGIN.OPER:2:1=': DEBIT.INT.REC<IC.ADI.DR2.MARGIN.OPER,2> : ',DR2.MARGIN.RATE:2:1=' : DEBIT.INT.REC<IC.ADI.DR2.MARGIN.RATE,2>
                        OFS2.MSG :=',DR2.BASIC.RATE:2:1=' : DEBIT.INT.REC<IC.ADI.DR2.BASIC.RATE,2>
                        OFS2.MSG :=',DR2.MIN.RATE:2:1=': DEBIT.INT.REC<IC.ADI.DR2.MIN.RATE,2>

                    END

                    R.CNT = DCOUNT(DEBIT.INT.REC<IC.ADI.DR.INT.RATE>,VM)
                    IF R.CNT EQ '2' THEN
                        OFS.MSG = 'ACCOUNT.DEBIT.INT,INP/I/PROCESS,//' : R.ACCOUNT<AC.CO.CODE> : ',' : ACCT.ID : ',CHARGE.KEY:1:1=' : DEBIT.INT.REC<IC.ADI.CHARGE.KEY>
                        OFS.MSG :=',INTEREST.DAY.BASIS:1:1=' : DEBIT.INT.REC<IC.ADI.INTEREST.DAY.BASIS> : ',DR.BALANCE.TYPE:1:1=':DEBIT.INT.REC<IC.ADI.DR.BALANCE.TYPE>
                        OFS.MSG :=',DR.CALCUL.TYPE:1:1=' : DEBIT.INT.REC<IC.ADI.DR.CALCUL.TYPE> : ',DR.INT.RATE:1:1=':DEBIT.INT.REC<IC.ADI.DR.INT.RATE,1> : ',DR.INT.RATE:2:1=':DEBIT.INT.REC<IC.ADI.DR.INT.RATE,2>
                        OFS.MSG :=',DR.MARGIN.OPER:2:1=': DEBIT.INT.REC<IC.ADI.DR.MARGIN.OPER,2> : ',DR.MARGIN.RATE:1:1=' : DEBIT.INT.REC<IC.ADI.DR.MARGIN.RATE,1>
                        OFS.MSG :=',DR.LIMIT.AMT:1:1=' : LIMIT.AMT : ',DR.MIN.VALUE:1:1=' : DEBIT.INT.REC<IC.ADI.DR.MIN.VALUE> :
                        OFS.MSG :=',DR.MIN.WAIVE:1:1=' : DEBIT.INT.REC<IC.ADI.DR.MIN.WAIVE>
                        OFS.MSG :=',DR.INT.RATE:2:1=' :DEBIT.INT.REC<IC.ADI.DR.INT.RATE,2>
                        OFS.MSG :=',DR.MARGIN.OPER:1:1=': DEBIT.INT.REC<IC.ADI.DR.MARGIN.OPER,1> : ',DR.MARGIN.RATE:2:1=' : DEBIT.INT.REC<IC.ADI.DR.MARGIN.RATE,2>
                        OFS.MSG :=',DR.BASIC.RATE:2:1=' : DEBIT.INT.REC<IC.ADI.DR.BASIC.RATE,2>
                        OFS.MSG :=',DR.MIN.RATE:2:1=': DEBIT.INT.REC<IC.ADI.DR.MIN.RATE,2>
                        OFS.MSG :=',DR.BASIC.RATE:1:1=' : DEBIT.INT.REC<IC.ADI.DR.BASIC.RATE,1>
                        OFS.MSG := OFS2.MSG
                    END

                    IF R.CNT EQ '1' THEN
                        OFS.MSG = 'ACCOUNT.DEBIT.INT,INP/I/PROCESS,//' : R.ACCOUNT<AC.CO.CODE> : ',' : ACCT.ID : ',CHARGE.KEY:1:1=' : DEBIT.INT.REC<IC.ADI.CHARGE.KEY,1>
                        OFS.MSG :=',INTEREST.DAY.BASIS:1:1=' : DEBIT.INT.REC<IC.ADI.INTEREST.DAY.BASIS,1> : ',DR.BALANCE.TYPE:1:1=':DEBIT.INT.REC<IC.ADI.DR.BALANCE.TYPE,1>
                        OFS.MSG :=',DR.CALCUL.TYPE:1:1=' : DEBIT.INT.REC<IC.ADI.DR.CALCUL.TYPE,1> : ',DR.INT.RATE:1:1=':DEBIT.INT.REC<IC.ADI.DR.INT.RATE,1>
                        OFS.MSG :=',DR.MARGIN.OPER:1:1=': DEBIT.INT.REC<IC.ADI.DR.MARGIN.OPER,1> : ',DR.MARGIN.RATE:1:1=' : DEBIT.INT.REC<IC.ADI.DR.MARGIN.RATE,1>
                        OFS.MSG :=',DR.LIMIT.AMT:1:1=' : LIMIT.AMT : ',DR.MIN.VALUE:1:1=' : DEBIT.INT.REC<IC.ADI.DR.MIN.VALUE>
                        OFS.MSG :=',DR.MIN.WAIVE:1:1=' : DEBIT.INT.REC<IC.ADI.DR.MIN.WAIVE,1>
                        OFS.MSG :=',DR.BASIC.RATE:1:1=' : DEBIT.INT.REC<IC.ADI.DR.BASIC.RATE,1>
                        OFS.MSG :=',DR.MIN.RATE:1:1=': DEBIT.INT.REC<IC.ADI.DR.MIN.RATE,1>
                        OFS.MSG :=',DR.BASIC.RATE:1:1=' : DEBIT.INT.REC<IC.ADI.DR.BASIC.RATE,1> : ',DR.MAX.RATE:1:1=' : DEBIT.INT.REC<IC.ADI.DR.MAX.RATE,1>
                        OFS.MSG := OFS2.MSG
                    END

                    CALL OFS.POST.MESSAGE(OFS.MSG,MESSAGE.ID,OFS.SOURCE.ID,'')
                END
            END
        END
        IF R.NEW(LI.EXPIRY.DATE) LE TODAY THEN
            SEQ.REC =  ACCT.ID : ',' : R.ACCOUNT<AC.ACCOUNT.TITLE.1> : ',' : R.ACCOUNT<AC.LIMIT.REF> : ',' :  LIMIT.AMT : ',' : R.ACCOUNT<AC.CO.CODE>
            WRITESEQ SEQ.REC APPEND TO FILE.LIMIT ELSE
            END
        END
    END


    IF ACCT.ID EQ '' AND Y.FLAG EQ 'Y' THEN
        SEQ.REC = FIELD(ID.NEW,'.',1) : ',' : ',' : FIELD(ID.NEW,'.',2) : '.': FIELD(ID.NEW,'.',3) : ',' :R.NEW(LI.MAXIMUM.TOTAL) : ',' : R.ACCOUNT<AC.CO.CODE>
        WRITESEQ SEQ.REC APPEND TO FILE.LIMIT ELSE
        END
    END

    RETURN
