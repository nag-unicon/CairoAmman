    SUBROUTINE CAB.AUTH.EXT.BRANCH.TXNS
    $INCLUDE T24.BP I_COMMON
    $INCLUDE T24.BP I_EQUATE
    $INCLUDE T24.BP I_F.TELLER
    $INCLUDE T24.BP I_F.STANDARD.SELECTION
    $INCLUDE CAB.BP I_F.CAB.BATCH.XML.MAPPING
    $INCLUDE CAB.BP I_F.CAB.EXT.MQ.PARAM
    $INCLUDE CAB.BP I_F.CAB.BRANCH.TELLER.DETS
    $INCLUDE T24.BP JBC.h

    GOSUB OPEN.FILES
    GOSUB PROCESS
    GOSUB POST.MQ.MESSAGE
    GOSUB WRITE.TO.LOG
    RETURN

OPEN.FILES:

    FN.CAB.BATCH.XML.MAPPING = 'F.CAB.BATCH.XML.MAPPING'
    F.CAB.BATCH.XML.MAPPING=''
    CALL OPF(FN.CAB.BATCH.XML.MAPPING,F.CAB.BATCH.XML.MAPPING)

    FN.CAB.EXT.MQ.PARAM = 'F.CAB.EXT.MQ.PARAM'
    F.CAB.EXT.MQ.PARAM = ''
    CALL OPF(FN.CAB.EXT.MQ.PARAM,F.CAB.EXT.MQ.PARAM)

    CAB.EXT.MQ.ERR=''
    CALL CACHE.READ(FN.CAB.EXT.MQ.PARAM,'SYSTEM',R.CAB.EXT.MQ.PARAM,CAB.EXT.MQ.ERR)

    FN.CAB.BRANCH.TELLER.DETS = 'F.CAB.BRANCH.TELLER.DETS'
    F.CAB.BRANCH.TELLER.DETS = ''
    CALL OPF(FN.CAB.BRANCH.TELLER.DETS,F.CAB.BRANCH.TELLER.DETS)

    RETURN

PROCESS:

    CAB.XML.MAPPING.ID = PGM.VERSION
    CALL F.READ(FN.CAB.BATCH.XML.MAPPING,CAB.XML.MAPPING.ID,R.CAB.BATCH.XML.MAPPING,F.CAB.BATCH.XML.MAPPING,CAB.XML.ERR)
    YR.BATCH.PROCESS.NAME = R.CAB.BATCH.XML.MAPPING<CAB.BAT.XML.PROCESS.NAME>
    YR.BATCH.TAG.NAME = R.CAB.BATCH.XML.MAPPING<CAB.BAT.XML.BAT.TAG.NAME>
    YR.BATCH.TAG.DCOUNT = DCOUNT(YR.BATCH.TAG.NAME,@FM)
    YR.I='1'
    LOOP
    WHILE YR.I LE YR.BATCH.TAG.DCOUNT DO
        YR.XML.TAG.NAME = R.CAB.BATCH.XML.MAPPING<CAB.BAT.XML.BAT.TAG.NAME,YR.I>
        YR.XML.TAG.POS = R.CAB.BATCH.XML.MAPPING<CAB.BAT.XML.XML.TAG.POS,YR.I>
        YR.XML.T24.FLD.POS = R.CAB.BATCH.XML.MAPPING<CAB.BAT.XML.T24.FLD.POS,YR.I>
        YR.XML.T24.FLD.NAME = R.CAB.BATCH.XML.MAPPING<CAB.BAT.XML.T24.FLD.NAME,YR.I>
        YR.XML.STATIC.VALUE = R.CAB.BATCH.XML.MAPPING<CAB.BAT.XML.STATIC.VALUE,YR.I>

        BEGIN CASE
        CASE YR.XML.TAG.POS EQ 'HEADER'
            YR.XML.HEADER.1.OPEN:= '<':YR.XML.TAG.NAME:'>'
            YR.XML.HEADER.1.CLOSE:= '</':YR.XML.TAG.NAME:'>'

        CASE YR.XML.TAG.NAME MATCHES ('Application':VM:'MessageType')
            IF YR.XML.T24.FLD.NAME NE '' THEN
                YR.XML.SUB.HEADER:= '<':YR.XML.TAG.NAME:'>':YR.XML.T24.FLD.NAME:'</':YR.XML.TAG.NAME:'>'
            END ELSE
                YR.XML.SUB.HEADER:= '<':YR.XML.TAG.NAME:'>':YR.XML.STATIC.VALUE:'</':YR.XML.TAG.NAME:'>'
            END

        CASE YR.XML.STATIC.VALUE NE ''
            YR.XML.STATIC.OPEN:= '<':YR.XML.TAG.NAME:'>':YR.XML.STATIC.VALUE:'</':YR.XML.TAG.NAME:'>'

        CASE YR.XML.T24.FLD.POS EQ 'LRT'
            GOSUB GET.FIELD.NAME
            YR.XML.LOCAL.FIELD = R.NEW(TT.TE.LOCAL.REF)<1,POS>
            YR.XML.LOCAL.FLD:= '<':YR.XML.TAG.NAME:'>':YR.XML.LOCAL.FIELD:'</':YR.XML.TAG.NAME:'>'

        CASE YR.XML.T24.FLD.NAME NE '' AND YR.XML.T24.FLD.POS EQ ''
            GOSUB GET.FIELD.NAME
            SAVE.AF = AF
            AF = SYS.FIELD.VALUE
            YR.XML.T24.FLD.NAME = R.NEW(AF)
            AF = SAVE.AF
            YR.XML.T24.FIELD:= '<':YR.XML.TAG.NAME:'>':YR.XML.T24.FLD.NAME:'</':YR.XML.TAG.NAME:'>'

        CASE (YR.XML.T24.FLD.POS AND YR.XML.T24.FLD.NAME AND YR.XML.STATIC.VALUE) EQ ''
            YR.XML.BLANK.TAG:= '<':YR.XML.TAG.NAME:'>':'</':YR.XML.TAG.NAME:'>'

        END CASE

        YR.I+=1
    REPEAT
    YR.XML.MESSAGE = YR.XML.HEADER.1.OPEN:YR.XML.SUB.HEADER:YR.XML.STATIC.OPEN:YR.XML.LOCAL.FLD:YR.XML.T24.FIELD:YR.XML.BLANK.TAG:YR.XML.HEADER.1.CLOSE
    RETURN


GET.FIELD.NAME:
    APPL = APPLICATION
    FN.STANDARD.SELECTION = 'F.STANDARD.SELECTION'
    F.STANDARD.SELECTION = ''
    CALL OPF(FN.STANDARD.SELECTION, F.STANDARD.SELECTION)
    CALL F.READ(FN.STANDARD.SELECTION, APPL, REC.STORE, FP.STANDARD.SELECTION, RVAL)

    IF YR.XML.T24.FLD.POS EQ 'LRT' THEN
        USR.FIELD.NAME = REC.STORE<SSL.USR.FIELD.NAME>
        CONVERT VM TO FM IN USR.FIELD.NAME

        LOCATE YR.XML.T24.FLD.NAME IN USR.FIELD.NAME<1> SETTING CPOS ELSE CPOS = ''
        USR.FIELD.VALUE = REC.STORE<SSL.USR.FIELD.NO,CPOS,1>
        IF CPOS NE '' THEN
            Y.ID.LOCREF.POSN = FIELD(USR.FIELD.VALUE, ",", 2)
            Y.ID.LOCREF.POSN = TRIM(FIELD(Y.ID.LOCREF.POSN, '>', 1))
            POS=Y.ID.LOCREF.POSN
        END
    END ELSE
        SYS.FIELD.NAME = REC.STORE<SSL.SYS.FIELD.NAME>
        CONVERT VM TO FM IN SYS.FIELD.NAME
        LOCATE YR.XML.T24.FLD.NAME IN SYS.FIELD.NAME<1> SETTING FPOS ELSE FPOS = ''
        SYS.FIELD.VALUE = SYS.FIELD.NAME<FPOS>
    END

    RETURN

POST.MQ.MESSAGE:
    DELIM = '$'
    LOCATE YR.BATCH.PROCESS.NAME IN R.CAB.EXT.MQ.PARAM<CAB.EXT.MQ.TXN.TYPE> SETTING POS THEN
        MQ.HOST.NAME = R.CAB.EXT.MQ.PARAM<CAB.EXT.MQ.MQ.HOST,POS>
        MQ.PORT.NO = R.CAB.EXT.MQ.PARAM<CAB.EXT.MQ.MQ.PORT,POS>
        MQ.MANAGER = R.CAB.EXT.MQ.PARAM<CAB.EXT.MQ.MQ.MANAGER,POS>
        MQ.CHANNEL = R.CAB.EXT.MQ.PARAM<CAB.EXT.MQ.MQ.CHANNEL,POS>
        MQ.USER = R.CAB.EXT.MQ.PARAM<CAB.EXT.MQ.MQ.USER,POS>
        MQ.PASSWORD = R.CAB.EXT.MQ.PARAM<CAB.EXT.MQ.MQ.PASSWORD,POS>
        MQ.INQUEUE = R.CAB.EXT.MQ.PARAM<CAB.EXT.MQ.MQ.INQUEUE,POS>
        MQ.OUTQUEUE = R.CAB.EXT.MQ.PARAM<CAB.EXT.MQ.MQ.OUTQUEUE,POS>
        MQ.ACTIVATION = R.CAB.EXT.MQ.PARAM<CAB.EXT.MQ.MQ.ACTIVATION,POS>
    END
    INPUT.PARAM<1> = "PUT"
    INPUT.PARAM<2> = MQ.HOST.NAME:DELIM:MQ.PORT.NO:DELIM:MQ.CHANNEL:DELIM:MQ.MANAGER:DELIM:MQ.INQUEUE:DELIM:MQ.OUTQUEUE
    INPUT.PARAM<3> = YR.XML.MESSAGE

    ERR.CODE = CALLJEE(MQ.ACTIVATION,INPUT.PARAM)
    IF ERR.CODE THEN
        AF = TT.TE.ACCOUNT.1
        E = 'Please check MQ configuration'
        CALL ERR
    END
    RETURN


WRITE.TO.LOG:

    YR.TXN.REF = ID.NEW
    R.CAB.BRANCH.TELLER.DETS = ''
    CAB.BRANCH.ERR = ''
    CALL F.READ(FN.CAB.BRANCH.TELLER.DETS,YR.TXN.REF,R.CAB.BRANCH.TELLER.DETS,F.CAB.BRANCH.TELLER.DETS,CAB.BRANCH.ERR)

    R.CAB.BRANCH.TELLER.DETS<CAB.BRANCH.LOG.T24.TXN.REF> = YR.TXN.REF
    R.CAB.BRANCH.TELLER.DETS<CAB.BRANCH.LOG.VALUE.DATE> = R.NEW(TT.TE.VALUE.DATE.1)
    R.CAB.BRANCH.TELLER.DETS<CAB.BRANCH.LOG.POSTING.DATE> = R.NEW(TT.TE.VALUE.DATE.1)
    R.CAB.BRANCH.TELLER.DETS<CAB.BRANCH.LOG.DEBIT.ACCT.NO> = R.NEW(TT.TE.ACCOUNT.1)
    R.CAB.BRANCH.TELLER.DETS<CAB.BRANCH.LOG.DEBIT.CURRENCY> = R.NEW(TT.TE.CURRENCY.1)
    R.CAB.BRANCH.TELLER.DETS<CAB.BRANCH.LOG.DEBIT.AMOUNT> = R.NEW(TT.TE.AMOUNT.LOCAL.1)
    R.CAB.BRANCH.TELLER.DETS<CAB.BRANCH.LOG.CUSTOMER.NO> = R.NEW(TT.TE.CUSTOMER.1)
    R.CAB.BRANCH.TELLER.DETS<CAB.BRANCH.LOG.TXN.BRANCH> = ID.COMPANY[6,4]
    R.CAB.BRANCH.TELLER.DETS<CAB.BRANCH.LOG.TXN.TYPE> = YR.BATCH.PROCESS.NAME

    CALL F.WRITE(FN.CAB.BRANCH.TELLER.DETS,YR.TXN.REF,R.CAB.BRANCH.TELLER.DETS)

    RETURN
