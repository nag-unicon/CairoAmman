    SUBROUTINE CAB.AA.DEFAULT.PEN.REPORT(ARR.ID)
*************************************************************************************
*************************************************************************************
*** CAB Jordan Defaulter report
*** For Salary system
***
***
*************************************************************************************
*************************************************************************************

    $INCLUDE T24.BP I_COMMON
    $INCLUDE T24.BP I_EQUATE
    $INCLUDE T24.BP I_F.AA.ARRANGEMENT
    $INCLUDE T24.BP I_F.AA.BILL.DETAILS
    $INCLUDE T24.BP I_F.AA.INTEREST.ACCRUALS
    $INCLUDE T24.BP I_F.AA.ACCOUNT.DETAILS
    $INCLUDE T24.BP I_F.AA.ACCOUNT
    $INCLUDE T24.BP I_F.AC.CASH.POOL
    $INCLUDE T24.BP I_F.ACCOUNT
    $INCLUDE T24.BP I_F.ALTERNATE.ACCOUNT
    $INCLUDE AN.BP I_CAB.SAL.COMMON
    $INCLUDE AN.BP I_F.CAB.SALARY.REPORT.LIST

    GOSUB INIT
    GOSUB PROCESS

    RETURN

******
INIT:
******

    UPDATE.TYPE=''
    RET.ACCT.ERROR=''
    EFFECTIVE.DATE = TODAY
    PROCESS.TYPE = 'INITIALISE'
    WRITE.FLAG = '1'


    CALL AA.PROCESS.ACCOUNT.DETAILS(ARR.ID, PROCESS.TYPE, UPDATE.TYPE,R.AA.ACC.DET, RET.ACCT.ERROR)
    CALL AA.GET.ARRANGEMENT(ARR.ID,R.ARR,ERR.ARR)
    CALL AA.GET.PROPERTY.RECORD('', ARR.ID, 'ACCOUNT', EFFECTIVE.DATE, 'ACCOUNT', '', R.ACCOUNT.RECORD, R.ERR)

*** Get Loan Static data

    LOAN.ACC = R.ARR<AA.ARR.LINKED.APPL.ID,1>
    ARR.ACC.NUMBER = LOAN.ACC
    ARR.FWD.CCY = R.ARR<AA.ARR.CURRENCY>
    ARR.COMPANY.ID= R.ARR<AA.ARR.CO.CODE>

    GOSUB DETERMINE.SETTLE.ACCOUNT

    RETURN

*************************
DETERMINE.SETTLE.ACCOUNT:
*************************

*** 1st position Settlement Account took it from Arrangement Level
    SETT.ACC = ''
    SETT.ACC = R.ACCOUNT.RECORD<AA.AC.LOCAL.REF,SETT.POS,1>
    R.SETTLEMENT.ACCOUNT =''
    CALL F.READ(FN.SETT.ACC,SETT.ACC,R.SETTLEMENT.ACCOUNT,F.SETT.ACC,ERR.SETT.ACC)

*** 2nd Level AC.CASH.POOL

    IF R.SETTLEMENT.ACCOUNT EQ  '' THEN
        CALL F.READ(FN.AC.CASH.POOL,LOAN.ACC,R.AC.CASH.POOL,F.AC.CASH.POOL,REC.ERR)
        SETT.ACC = R.AC.CASH.POOL<AC.CP.LINK.ACCT,1>
        CALL F.READ(FN.SETT.ACC,SETT.ACC,R.SETTLEMENT.ACCOUNT,F.SETT.ACC,ERR.SETT.ACC)
    END

    SETTLEMENT.CCY = R.SETTLEMENT.ACCOUNT<AC.CURRENCY>
    SETTLEMENT.COMPANY = R.SETTLEMENT.ACCOUNT<AC.CO.CODE>

    RETURN

********
PROCESS:
********

    GOSUB PROCESS.PENALTY

    RETURN

****************
PROCESS.PENALTY:
****************
***If record is already process no need for another time process


    PEN.ID = LOAN.ACC :"-PENALTY"
    TOTALPENALTY = ARR.ID:'-PENALTYINT'
    REC.ERR =''
    R.AA.INTEREST.ACCRUAL =''

    CALL F.READ(FN.AA.INTEREST.ACCRUAL,TOTALPENALTY,R.AA.INTEREST.ACCRUAL,F.AA.INTEREST.ACCRUAL,REC.ERR)
    ACC.INT = SUM(R.AA.INTEREST.ACCRUAL<AA.INT.ACC.TOT.ACCR.AMT>) - SUM(R.AA.INTEREST.ACCRUAL<AA.INT.ACC.TOT.RPY.AMT>)

    R.PEN.INT<AAA.SETT.ACC> = SETT.ACC
    R.PEN.INT<AAA.SETT.COM> = SETTLEMENT.COMPANY
    R.PEN.INT<AAA.SETT.CCY> = SETTLEMENT.CCY
    R.PEN.INT<AAA.BILL.AMT> = ACC.INT
    R.PEN.INT<AAA.DUE.AMT> = ACC.INT
    R.PEN.INT<AAA.RPY.AMT> = ACC.INT
    R.PEN.INT<AAA.BILL.DATE> = TODAY
    R.PEN.INT<AAA.PAY.TYPE> = 'PAYMENT'
    R.PEN.INT<AAA.LOAN.ACC> = ARR.ACC.NUMBER
    R.PEN.INT<AAA.LOAN.CCY> = ARR.FWD.CCY
    R.PEN.INT<AAA.LOAN.COM> = ARR.COMPANY.ID
    R.PEN.INT<AAA.FT.TXN.TYPE> = "ACRP"
*** Avoid unnessary write

    IF ACC.INT GT '0' THEN
        CALL F.READ(FN.SETT.ACC,SETT.ACC,R.SETT.ACC,F.SETT.ACC,ERR.ACC)
        R.PEN.INT<AAA.SETT.ACC> = R.SETT.ACC<AC.ALT.ACCT.ID,1>
        IF R.PEN.INT<AAA.SETT.ACC> NE '' THEN
            CALL F.WRITE(FN.CAB.SAL,PEN.ID,R.PEN.INT)
        END
    END
***  Penalty interest processed

    RETURN
