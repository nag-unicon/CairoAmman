    SUBROUTINE BASE.II.PRE.PROCESS
    $INCLUDE T24.BP I_COMMON
    $INCLUDE T24.BP I_EQUATE
    $INCLUDE ATM.BP I_F.INTRF.MESSAGE
    $INCLUDE ATM.BP I_F.ATM.BASE.PARAM
    $INCLUDE ATM.BP I_ATM.BASE.II.FIELDS.COMMON
    $INCLUDE ATM.BP I_F.ATM.BASE.TRANSACTIONS

!! Ammar 2022-08-23
!! Amendment is done to take the same RRN and update the time to avoid the missing transactions

    F.ATM.BASE.TRANSACTIONS = ''
    FN.ATM.BASE.TRANSACTIONS = 'F.ATM.BASE.TRANSACTIONS'
    CALL OPF(FN.ATM.BASE.TRANSACTIONS,F.ATM.BASE.TRANSACTIONS)

    FN.INTRF.MESSAGE = 'F.INTRF.MESSAGE'
    F.INTRF.MESSAGE = ''
    CALL OPF(FN.INTRF.MESSAGE,F.INTRF.MESSAGE)

    FN.ATM.BASE.PARAM = 'F.ATM.BASE.PARAM'
    F.ATM.BASE.PARAM = ''
    CALL OPF(FN.ATM.BASE.PARAM,F.ATM.BASE.PARAM)

    FN.BASE.II.CONCAT = 'F.BASE.II.CONCAT'
    F.BASE.II.CONCAT = ''
    CALL OPF(FN.BASE.II.CONCAT,F.BASE.II.CONCAT)

    DUP.NAME = 'Duplicated_Recs_':C$PORT.NO:TODAY:'txt'

    CALL CACHE.READ(FN.INTRF.MESSAGE,'5003',R.INTRF.MESSAGE,R.INTRF.MESSAGE.ERR)

    BASE.PARAM.ID = 'SYSTEM'
    CALL CACHE.READ(FN.ATM.BASE.PARAM,BASE.PARAM.ID,R.ATM.BASE.PARAM,R.ATM.BASE.PARAM.ERR)
    U.POS.UPLOAD.PATH = R.ATM.BASE.PARAM<AT.BAS.PAR.UPLOAD.PATH>
    FN.LOG.DIR = R.ATM.BASE.PARAM<AT.BAS.PAR.LOG.PATH>
    BACKUP.PATH = R.ATM.BASE.PARAM<AT.BAS.PAR.BACKUP.PATH>
    U.POS.UPLOAD.FILE = R.ATM.BASE.PARAM<AT.BAS.PAR.FILE.NAME>
    FILE.NAME = U.POS.UPLOAD.FILE

    OPENSEQ FN.LOG.DIR,DUP.NAME TO DUP.FILE ELSE
        CREATE DUP.FILE ELSE
            STOP
        END
    END
    OPEN U.POS.UPLOAD.PATH TO EMPTY.OUT  ELSE
        PRINT "Opening Sequential file"
    END

    CALL OPF(BACKUP.PATH,F.BACKUP.PATH)
    R.ERROR.REC=''

    IF FILE.NAME THEN
        READ REC FROM EMPTY.OUT,FILE.NAME ELSE
            PRINT "READ ERROR"
        END
        GOSUB PROCESS
    END ELSE
        REC=''
        SEL.CMD = 'SELECT ':U.POS.UPLOAD.PATH
        CALL EB.READLIST(SEL.CMD,REC.SEL,'',NO.OF.REC,ERR.REC)
        LOOP
            REMOVE FILE.NAME FROM REC.SEL SETTING SEL.POS
        WHILE FILE.NAME:SEL.POS
            READ REC FROM EMPTY.OUT,FILE.NAME ELSE
                PRINT "READ ERROR"
            END
            GOSUB PROCESS
        REPEAT
    END

    RETURN

PROCESS:
    LOOP
        REMOVE REC.DET FROM REC SETTING REC.DET.POS
    WHILE REC.DET:REC.DET.POS
        LOG.DET=''
        TRANSACTION.STATUS = ''
        GOSUB GET.FIELD.VALUES
    REPEAT

    CALL F.WRITE(BACKUP.PATH,FILE.NAME,REC)
    CALL F.DELETE(U.POS.UPLOAD.PATH,FILE.NAME)

    RETURN

GET.FIELD.VALUES:
    START.POSN = 1
    INTRF.FLD.CNT = 1
    INTRF.FLD.VALUES = ''
    INTRF.FLD.NAMES = R.INTRF.MESSAGE<INTRF.MSG.INTRF.FLD.NAME>
    INTRF.FLD.POSNS = R.INTRF.MESSAGE<INTRF.MSG.INTRF.FLD.POS>
    INTRF.FLD.LEN.L = R.INTRF.MESSAGE<INTRF.MSG.INTRF.FLD.LEN>
    INTRF.FLD.TYPES = R.INTRF.MESSAGE<INTRF.MSG.INTRF.FLD.TYPE>

    LOOP
        REMOVE INTRF.FLD.NAME FROM INTRF.FLD.NAMES SETTING INTRF.FLD.NAME.POS
    WHILE INTRF.FLD.NAME:INTRF.FLD.NAME.POS
        INTRF.FLD.LEN = INTRF.FLD.LEN.L<1,INTRF.FLD.CNT>
        INTRF.FLD.POS = INTRF.FLD.POSNS<1,INTRF.FLD.CNT>
        INTRF.FLD.TYPE = INTRF.FLD.TYPES<1,INTRF.FLD.CNT>
        FLD.VALUE = ''
        FLD.VALUE = REC.DET[START.POSN,INTRF.FLD.LEN]
        INTRF.FLD.VALUES<INTRF.FLD.POS> = TRIM(FLD.VALUE," ","B")
        START.POSN += INTRF.FLD.LEN
        INTRF.FLD.CNT += 1
    REPEAT

    STAN.NO = INTRF.FLD.VALUES<BASE.II.SYSTEM.TRACE.AUDIT.NUMBER>
    TXN.DATE = INTRF.FLD.VALUES<BASE.II.TRANSACTION.DATE>
* S - 20140209
*    TXN.DATE = TXN.DATE[3,4]
    TXN.DATE = TXN.DATE[1,6]
* E - 20140209
    TXN.TIME = INTRF.FLD.VALUES<BASE.II.TRANSACTION.TIME>
    BIN.NO = INTRF.FLD.VALUES<BASE.II.ACQUIRING.INSTITUTION.IDENT.CODE>
    RRN.NO = INTRF.FLD.VALUES<BASE.II.RETREIVAL.REFERENCE.NUMER>
    AUTH.CODE = INTRF.FLD.VALUES<BASE.II.AUTHORISATION.CODE>
    EXT.NW.ID = INTRF.FLD.VALUES<BASE.II.EXTERNAL.NETWORK.IDENTIFIER>
    TRANS.TYPE = INTRF.FLD.VALUES<BASE.II.TRANSACTION.TYPE>
    CB.AMOUNT = INTRF.FLD.VALUES<BASE.II.BILLING.CASHBACK.AMOUNT>
    IF CB.AMOUNT[2,LEN(CB.AMOUNT)-1] THEN
        ATM.BASE.ID = STAN.NO:".":TXN.DATE:".":TXN.TIME:".":BIN.NO:".":RRN.NO:".":AUTH.CODE:".":STAN.NO
    END ELSE
        ATM.BASE.ID = STAN.NO:".":TXN.DATE:".":TXN.TIME:".":BIN.NO:".":RRN.NO:".":AUTH.CODE
    END
    GOSUB CHECK.DUP.TRANS

    CALL F.READ(FN.BASE.II.CONCAT,ATM.BASE.ID,BASE.II.REC,F.BASE.II.CONCAT,BASE.II.ERR)
    IF BASE.II.REC THEN
        WRITESEQ ATM.BASE.ID APPEND TO DUP.FILE ELSE
        END
        I +=1
        J = '00000':I
        TXN.TIME +=J
        TXN.TIME = FMT(TXN.TIME,'R%6')
        INTRF.FLD.VALUES<BASE.II.TRANSACTION.TIME> = TXN.TIME
        ATM.BASE.ID = STAN.NO:".":TXN.DATE:".":TXN.TIME:".":BIN.NO:".":RRN.NO:".":AUTH.CODE:".":STAN.NO
    END
    CALL F.WRITE(FN.BASE.II.CONCAT,ATM.BASE.ID,INTRF.FLD.VALUES)
    RETURN
*****************
CHECK.DUP.TRANS:
*****************
    DUP.ID = ''
    DUP.ID = STAN.NO:".":TXN.DATE:".":TXN.TIME:".":BIN.NO:".":RRN.NO:".":AUTH.CODE
    CALL F.READ(FN.ATM.BASE.TRANSACTIONS,DUP.ID,R.ATM.BASE.TRANSACTIONS,F.ATM.BASE.TRANSACTIONS,R.ATM.BASE.TRANSACTIONS.ERR)
    IF R.ATM.BASE.TRANSACTIONS EQ '' THEN
        DUP.ID = STAN.NO:".":TXN.DATE:".":TXN.TIME:".":BIN.NO:".":RRN.NO
        CALL F.READ(FN.ATM.BASE.TRANSACTIONS,DUP.ID,R.ATM.BASE.TRANSACTIONS,F.ATM.BASE.TRANSACTIONS,R.ATM.BASE.TRANSACTIONS.ERR.1)
    END
    IF R.ATM.BASE.TRANSACTIONS THEN
        DUP.ID = DUP.ID : ',' :'N/A'
        WRITESEQ DUP.ID APPEND TO DUP.FILE ELSE
        END
    END
    RETURN
END
