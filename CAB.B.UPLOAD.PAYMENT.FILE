*-----------------------------------------------------------------------------
* <Rating>-184</Rating>
*-----------------------------------------------------------------------------
    SUBROUTINE CAB.B.UPLOAD.PAYMENT.FILE
*---------------------------------------------------------------
*Company   Name    : Cairo Amman Bank
*Developed By      : Temenos Application Management
*Program   Name    : CAB.B.UPLOAD.PAYMENT.FILE
*---------------------------------------------------------------
*Description       : Single Threaded routine to upload into T24 local files from a source input file.
*Linked With       :
*In  Parameter     : N/A
*Out Parameter     : N/A
*ODR number used   : ODR-2011-10-0064
*---------------------------------------------------------------
*Modification Details:
*=====================
*-----------------------------------------------------------------------------

    $INSERT I_COMMON
    $INSERT I_EQUATE
    $INSERT I_GTS.COMMON
    $INSERT I_F.OFS.SOURCE
    $INSERT I_F.FT.COMMISSION.TYPE
    $INCLUDE CAB.BP I_F.PAYMENT.COMPANY
    $INCLUDE CAB.BP I_F.PAYMENT.BATCHES
    $INCLUDE CAB.BP I_F.PAYMENT.DETAILS
    $INCLUDE CAB.BP I_F.PAYMENT.LOG
    $INCLUDE CAB.BP I_F.CAB.FILE.PARAMETER
    $INCLUDE CAB.BP I_F.PAYMENT.L.CONCAT.FILE

    GOSUB INIT.FILES
    GOSUB OPEN.FILES
    GOSUB PROCESS

    RETURN


***********
INIT.FILES:
***********

    FN.COM.TYPE = "F.FT.COMMISSION.TYPE"
    F.COM.TYPE = ""

    FN.OFS.SOURCE = "F.OFS.SOURCE"
    F.OFS.SOURCE = ""

    FN.PAY.CMPY = "F.PAYMENT.COMPANY"
    F.PAY.CMPY = ""

    FN.PAY.BATCH = "F.PAYMENT.BATCHES"
    F.PAY.BATCH = ""

    FN.PAY.BATCH$NAU = "F.PAYMENT.BATCHES$NAU"
    F.PAY.BATCH$NAU = ""

    FN.PAY.DET = "F.PAYMENT.DETAILS"
    F.PAY.DET = ""

    FN.PAY.LOG = "F.PAYMENT.LOG"
    F.PAY.LOG = ""

    FN.CAB.FILE = "F.CAB.FILE.PARAMETER"
    F.CAB.FILE = ""

    FN.PAY.CONCAT = "F.PAYMENT.L.CONCAT.FILE"
    F.PAY.CONCAT = ""

    RETURN

***********
OPEN.FILES:
***********

    CALL OPF(FN.COM.TYPE,F.COM.TYPE)
    CALL OPF(FN.OFS.SOURCE,F.OFS.SOURCE)
    CALL OPF(FN.PAY.CMPY,F.PAY.CMPY)
    CALL OPF(FN.PAY.BATCH,F.PAY.BATCH)
    CALL OPF(FN.PAY.BATCH$NAU,F.PAY.BATCH$NAU)
    CALL OPF(FN.PAY.DET,F.PAY.DET)
    CALL OPF(FN.PAY.LOG,F.PAY.LOG)
    CALL OPF(FN.CAB.FILE,F.CAB.FILE)
    CALL OPF(FN.PAY.CONCAT,F.PAY.CONCAT)

    RETURN

********
PROCESS:
********

    CALL F.READ(FN.CAB.FILE,"PAYMENTS",R.CAB.FILE,F.CAB.FILE,CAB.ERR)
    IF R.CAB.FILE THEN
        FILE.PATH = R.CAB.FILE<CAB.FIL.SOURCE.FILE.PATH>
        FILE.NAME = R.CAB.FILE<CAB.FIL.SOURCE.FILE.NAME>
        Y.OFS.SOURCE.ID = R.CAB.FILE<CAB.FIL.OFS.SOURCE>
        GOSUB FILE.CHECK
        CALL F.READ(FN.FILE.CHECK,FILE.NAME,R.FILE.CHECK.LIST,F.FILE.CHECK,CHECK.ERR)
        IF R.FILE.CHECK.LIST NE "" THEN
            LOOP.CNTR = 1 ; BATCH.CHK.CNTR = 1
            GOSUB SUB.PROCESS
            GOSUB CONCAT.PROCESS
        END ELSE
            GOSUB ERROR.LOCK.LOGS
        END
    END

    RETURN

***************
CONCAT.PROCESS:
***************

    IF Y.OFS.DATA.ARRAY NE "-1" THEN
        IF PAY.RECORDS NE "" THEN
            GOSUB POST.OFS.REQUESTS
        END ELSE
            GOSUB WRITE.CONCAT.FILE
        END
    END ELSE
        IF Y.FAULT.REC EQ "-1" THEN
            GOSUB DELETE.INAU.RECORDS
        END
        IF ERR.CODE NE "" THEN
            GOSUB ERROR.LOG.WRITE
        END ELSE
            R.PAY.CMPY<PAY.COMP.PAYMENT.LOG.ID> = ""
            CALL F.WRITE(FN.PAY.CMPY,COMB.CHECK.ID,R.PAY.CMPY)
        END
    END

    RETURN

***********
FILE.CHECK:
***********

    FN.FILE.CHECK = FILE.PATH
    F.FILE.CHECK = ""
    CALL OPF(FN.FILE.CHECK,F.FILE.CHECK)

    RETURN

************
SUB.PROCESS:
************

    LOOP
        REMOVE PAY.RECORDS FROM R.FILE.CHECK.LIST SETTING ERR.POS
    WHILE PAY.RECORDS NE ""
        IF BATCH.CHK.CNTR EQ "1" THEN
            GOSUB CHECKS.BATCHES.DETAILS
        END
        IF ERR.CODE EQ "" THEN
            IF LOOP.CNTR NE "1" THEN
                IF Y.OFS.DATA.ARRAY NE "-1" THEN
                    GOSUB POST.PAYMENT.DETAILS
                END ELSE
                    BREAK;
                END
            END ELSE
                BAT.STATUS = "BATCH.UPLOADED"
                GOSUB POST.PAYMENT.BATCHES
            END
        END ELSE
            BREAK;
        END
    REPEAT
    RETURN

****************
ERROR.LOCK.LOGS:
****************

    RETURN

***********************
CHECKS.BATCHES.DETAILS:
***********************

    COMP.CODE = FIELD(PAY.RECORDS,",",1)
    BATCH.CURR = FIELD(PAY.RECORDS,",",5)
    BAT.TOT.AMT= FIELD(PAY.RECORDS,",",6)
    BAT.NO.OF.REC = FIELD(PAY.RECORDS,",",4)
    SEND.SMS.TAG = FIELD(PAY.RECORDS,",",7)
    BAT.UPD.DATE = TODAY
    BAT.START.DATE = FIELD(PAY.RECORDS,",",2)
    BAT.END.DATE = FIELD(PAY.RECORDS,",",3)
    ACTON.END.DATE = FIELD(PAY.RECORDS,",",8)
    COMB.CHECK.ID = COMP.CODE:"-":BATCH.CURR
    CALL F.READ(FN.PAY.CMPY,COMB.CHECK.ID,R.PAY.CMPY,F.PAY.CMPY,CMPY.ERR)
    IF R.PAY.CMPY EQ "" THEN
        ERR.CODE = "1" ; Y.OFS.DATA.ARRAY = "-1"
    END
    PAYMENT.LOG.ID  =  R.PAY.CMPY<PAY.COMP.PAYMENT.LOG.ID>
    COMP.CHG.ID = R.PAY.CMPY<PAY.COMP.COMP.CHARGE.ID>
    CALL F.READ(FN.COM.TYPE,COMP.CHG.ID,R.COM.TYPE,F.COM.TYPE,COMTYPE.ERR)
    IF R.COM.TYPE THEN
        COMP.CHG.CURR = R.COM.TYPE<FT4.CURRENCY>
        COMP.CHG.AMT = R.COM.TYPE<FT4.FLAT.AMT>
        CALL EB.ROUND.AMOUNT(COMP.CHG.CURR,COMP.CHG.AMT,'','')
    END
    GOSUB BATCH.DETAILS.CHECKS

    RETURN

*********************
BATCH.DETAILS.CHECKS:
*********************

    Y.BATDET.CNT = DCOUNT(R.FILE.CHECK.LIST,FM)
    Y.BATTAIL.CNT = DCOUNT(R.FILE.CHECK.LIST<Y.BATDET.CNT>,",")
    FOR DET.CNT = 2 TO Y.BATDET.CNT
        TOT.DET.AMT += FIELD(R.FILE.CHECK.LIST<DET.CNT>,",",1)
        DET.CNTR += 1
        IF BATCH.CURR NE FIELD(R.FILE.CHECK.LIST<DET.CNT>,",",2) THEN
            ERR.CODE<-1> = 2 ; Y.OFS.DATA.ARRAY = "-1"
            CURR.ERR.POS<-1> = DET.CNT
        END
    NEXT DET.CNT
    IF BAT.TOT.AMT NE TOT.DET.AMT THEN
        ERR.CODE<-1> = 3 ; Y.OFS.DATA.ARRAY = "-1"
    END
    IF BAT.NO.OF.REC NE DET.CNTR THEN
        ERR.CODE<-1> = 4 ; Y.OFS.DATA.ARRAY = "-1"
    END
    GOSUB DUPLICATE.FILE.CHECKS

    RETURN

**********************
DUPLICATE.FILE.CHECKS:
**********************

    CALL JULDATE(TODAY,JULL.VAL)
    DUP.ID = COMP.CODE:".":JULL.VAL[3,LEN(JULL.VAL)]
    SEL.CMD = "SELECT ":FN.PAY.BATCH:" LIKE ":DUP.ID:"..."
    CALL EB.READLIST(SEL.CMD,DUP.LIST,'',NO.OF.REC,REC.ERR)
    IF DUP.LIST EQ "" THEN
        SEL.CMD = "SELECT ":FN.PAY.BATCH$NAU:" LIKE DUP.ID ..."
        CALL EB.READLIST(SEL.CMD,DUP.LIST,'',NO.OF.REC,REC.ERR)
        IF DUP.LIST THEN
            GOSUB DUP.HEADER.CHECKS
        END
    END ELSE
        GOSUB DUP.HEADER.CHECKS
    END

    RETURN

******************
DUP.HEADER.CHECKS:
******************

    DUP.CNT = DCOUNT(DUP.LIST,FM)
    FOR CNT = 1 TO DUP.CNT
        CALL F.READ(FN.PAY.BATCH,DUP.LIST<CNT>,R.DUP.REC,F.PAY.BATCH,DUP.ERR1)
        IF R.DUP.REC EQ "" THEN
            CALL F.READ(FN.PAY.BATCH$NAU,DUP.LIST<CNT>,R.DUP.REC,F.PAY.BATCH$NAU,DUP.ERR2)
        END
        IF COMB.CHECK.ID EQ R.DUP.REC<PAY.BAT.COMPANY.CODE> AND BAT.START.DATE EQ R.DUP.REC<PAY.BAT.BATCH.START.DATE> AND BAT.END.DATE EQ R.DUP.REC<PAY.BAT.BATCH.END.DATE> AND BAT.NO.OF.REC EQ R.DUP.REC<PAY.BAT.BATCH.NO.OF.REC> AND BATCH.CURR EQ R.DUP.REC<PAY.BAT.BATCH.CURRENCY> AND BAT.TOT.AMT EQ R.DUP.REC<PAY.BAT.BATCH.TOTAL.AMOUNT> AND SEND.SMS.TAG EQ R.DUP.REC<PAY.BAT.SEND.SMS> AND ACTON.END.DATE EQ R.DUP.REC<PAY.BAT.ACTION.ON.END.DATE> THEN
            ERR.CODE = "6" ; Y.OFS.DATA.ARRAY = "-1"
            DUP.CONTRACT = DUP.LIST<CNT>
            RETURN
        END
    NEXT CNT

    RETURN

****************
ERROR.LOG.WRITE:
****************

    GOSUB COLLECT.BASIC.DETAILS
    Y.ERR.COLL = DCOUNT(ERR.CODE,FM)
    CU.ERR = 1
    FOR N.ERR = 1 TO Y.ERR.COLL
        BEGIN CASE
        CASE ERR.CODE<N.ERR> EQ "1"
            R.PAYMENT.LOG<PAY.LOG.RECORD.DETAILS,N.ERR> = R.FILE.CHECK.LIST<1>
            R.PAYMENT.LOG<PAY.LOG.ERROR.DESCRIPTION,N.ERR> = "RECORD NOT IN PAYMENT COMPANY"
        CASE ERR.CODE<N.ERR> EQ "2"
            CURR.POS = CURR.ERR.POS<CU.ERR>
            R.PAYMENT.LOG<PAY.LOG.RECORD.DETAILS,N.ERR> = R.FILE.CHECK.LIST<CURR.POS>
            R.PAYMENT.LOG<PAY.LOG.ERROR.DESCRIPTION,N.ERR> = "HEADER CURRENCY AND RECORD CURRENCY DIFFERS"
            CU.ERR += 1
        CASE ERR.CODE<N.ERR> EQ "3"
            R.PAYMENT.LOG<PAY.LOG.RECORD.DETAILS,N.ERR> = R.FILE.CHECK.LIST<1>
            R.PAYMENT.LOG<PAY.LOG.ERROR.DESCRIPTION,N.ERR> = "BATCH AMT AND RECORD AMT DIFFERS"
        CASE ERR.CODE<N.ERR> EQ "4"
            R.PAYMENT.LOG<PAY.LOG.RECORD.DETAILS,N.ERR> = R.FILE.CHECK.LIST<1>
            R.PAYMENT.LOG<PAY.LOG.ERROR.DESCRIPTION,N.ERR> = "BATCH CNT AND RECORD CNT DIFFERS"
        CASE ERR.CODE<N.ERR> EQ "6"
            R.PAYMENT.LOG<PAY.LOG.RECORD.DETAILS,N.ERR> = DUP.CONTRACT
            R.PAYMENT.LOG<PAY.LOG.ERROR.DESCRIPTION,N.ERR> = "DUPLICATE RECORDS ALREADY PROCESSED"
        CASE ERR.CODE<N.ERR> EQ "5"
            IF Y.PAY.BAT.REC THEN
                Y.DEL1 = DCOUNT(Y.PAY.BAT.REC,',')
                FOR CNT = 2 TO Y.DEL1
                    R.PAYMENT.LOG<PAY.LOG.RECORD.DETAILS,CNT> = Y.PAY.BAT.REC<CNT>
                    R.PAYMENT.LOG<PAY.LOG.ERROR.DESCRIPTION,CNT> = "ERROR IN HEADER POSTINGS"
                NEXT CNT
            END ELSE
                Y.DEL1 = DCOUNT(Y.PAY.DET.REC,FM)
                FOR CNT = 1 TO Y.DEL1
                    R.PAYMENT.LOG<PAY.LOG.RECORD.DETAILS,CNT> = FIELD(Y.PAY.DET.REC<CNT>,',',2)
                    R.PAYMENT.LOG<PAY.LOG.ERROR.DESCRIPTION,CNT> = "ERROR IN DETAILS POSTINGS(LINE-":POST.BATCH.CNTR:")"
                NEXT CNT
            END
        END CASE
    NEXT N.ERR
    IF ERR.CODE NE "" THEN
        CALL F.WRITE(FN.PAY.LOG,PAYMENT.LOG.ID,R.PAYMENT.LOG)
    END
    R.PAY.CMPY<PAY.COMP.PAYMENT.LOG.ID> = PAYMENT.LOG.ID
    CALL F.WRITE(FN.PAY.CMPY,COMB.CHECK.ID,R.PAY.CMPY)

    RETURN

**********************
COLLECT.BASIC.DETAILS:
**********************

    JULL.VAL = ''
    CALL JULDATE(TODAY,JULL.VAL)
*    IF PAYMENT.LOG.ID EQ "" THEN
    SEL.CMD = "SELECT ":FN.PAY.CMPY:" LIKE ":COMP.CODE:"..."
    CALL EB.READLIST(SEL.CMD,SEL.LIST,"",NO.OF.REC,REC.ERR1)
    IF SEL.LIST THEN
        FOR LG.CNT = 1 TO NO.OF.REC
            CALL F.READ(FN.PAY.CMPY,SEL.LIST<LG.CNT>,R.PAY.CMPY1,F.PAY.CMPY,CMPY.ERR)
            IF R.PAY.CMPY1<PAY.COMP.PAYMENT.LOG.ID> THEN
                PAY.ID.ARR<-1> = R.PAY.CMPY<PAY.COMP.PAYMENT.LOG.ID>
            END
        NEXT LG.CNT
        IF PAY.ID.ARR THEN
            PAY.ID.ARR = SORT(PAY.ID.ARR)
            Y.PAYCNT = DCOUNT(PAY.ID.ARR,FM)
            PAYMENT.LOG.ID = PAY.ID.ARR<Y.PAYCNT>
            GOSUB FORM.PAYLOG.ID
        END ELSE
            PAYMENT.LOG.ID = COMP.CODE:".":JULL.VAL[3,LEN(JULL.VAL)]:".01.001"
        END
    END ELSE
        PAYMENT.LOG.ID = COMP.CODE:".":JULL.VAL[3,LEN(JULL.VAL)]:".01.001"
    END
*    END ELSE
*        GOSUB FORM.PAYLOG.ID
*    END
    R.PAYMENT.LOG<PAY.LOG.COMPANY.CODE> = COMP.CODE
    R.PAYMENT.LOG<PAY.LOG.BATCH.CURRENCY> = BATCH.CURR
    R.PAYMENT.LOG<PAY.LOG.BATCH.TOTAL.AMOUNT> = BAT.TOT.AMT
    R.PAYMENT.LOG<PAY.LOG.BATCH.NO.RECORDS> = BAT.NO.OF.REC
    R.PAYMENT.LOG<PAY.LOG.BATCH.UPLOAD.DATE> = TODAY
    Y.TIME = TIME()
    Y.TIME = OCONV(Y.TIME, "MTS")
    R.PAYMENT.LOG<PAY.LOG.BATCH.UPLOAD.TIME> = Y.TIME
    Y.BATREC.CNT = DCOUNT(PAY.RECORDS,",")

    RETURN

***************
FORM.PAYLOG.ID:
***************

    Y.SERIAL.NO = FIELD(PAYMENT.LOG.ID,'.',3)
    Y.SEQ.NO = FIELD(PAYMENT.LOG.ID,'.',4)
    IF Y.SEQ.NO EQ "100" THEN
        Y.SERIAL.NO = FIELD(PAYMENT.LOG.ID,'.',3) + 1
        Y.SEQ.NO = "1"
    END ELSE
        Y.SERIAL.NO = FIELD(PAYMENT.LOG.ID,'.',3)
        Y.SEQ.NO = FIELD(PAYMENT.LOG.ID,'.',4) + 1
    END
    Y.SERIAL.NO = FMT(Y.SERIAL.NO,"R%2")
    Y.SEQ.NO = FMT(Y.SEQ.NO,"R%3")
    PAYMENT.LOG.ID = COMP.CODE:".":JULL.VAL[3,LEN(JULL.VAL)]:".":Y.SERIAL.NO:".":Y.SEQ.NO

    RETURN

*********************
POST.PAYMENT.BATCHES:
*********************

    LOOP.CNTR += 1 ; POST.BATCH.CNTR = "1" ; BATCH.CHK.CNTR = "-1"
    Y.OFS.DATA = 'PAYMENT.BATCHES,/I/PROCESS,,,COMPANY.CODE::=':COMB.CHECK.ID:','
    Y.OFS.DATA:= 'BATCH.CURRENCY::=':BATCH.CURR:',BATCH.TOTAL.AMOUNT::=':BAT.TOT.AMT:','
    Y.OFS.DATA:= 'BATCH.NO.OF.REC::=':BAT.NO.OF.REC:',SEND.SMS::=':SEND.SMS.TAG:',BATCH.UPLOAD.DATE::=':BAT.UPD.DATE:','
    Y.OFS.DATA:= 'BATCH.START.DATE::=':BAT.START.DATE:',BATCH.END.DATE::=':BAT.END.DATE:',ACTION.ON.END.DATE::=':ACTON.END.DATE:',BATCH.STATUS::=':BAT.STATUS:','
    BATCH.NARR = FIELD(R.FILE.CHECK.LIST<2>,',',4)
    IF BATCH.NARR EQ "SALARY" THEN
        BATCH.NARR = "EMPLOYEE SALARIES"
    END ELSE
        BATCH.NARR = "SHARE DIVIDENDS"
    END
    Y.OFS.DATA:= 'BATCH.NARRATIVE::=':BATCH.NARR
    GOSUB POST.OFS.REQUESTS

    RETURN

*********************
POST.PAYMENT.DETAILS:
*********************

    Y.OFS.DATA = 'PAYMENT.DETAILS,/I/PROCESS,,,BATCH.CODE::=':Y.PAY.BAT.ID:','
    Y.OFS.DATA:= 'PAYMENT.AMOUNT::=':FIELD(PAY.RECORDS,',',1):',PAYMENT.CURRENCY::=':FIELD(PAY.RECORDS,',',2):','
    Y.OFS.DATA:= 'PAY.BEN.NAME::=':FIELD(PAY.RECORDS,',',3):',PAY.NARRATIVE::=':FIELD(PAY.RECORDS,',',4):',BEN.NATIONAL.NO::=':FIELD(PAY.RECORDS,',',5):','
    Y.OFS.DATA:= 'SHAREHOLDER.NO::=':FIELD(PAY.RECORDS,',',6):',EMPLOYEE.NO::=':FIELD(PAY.RECORDS,',',7):',LEGAL.ID::=':FIELD(PAY.RECORDS,',',8):','
    Y.OFS.DATA:= 'EMAIL.ID::=':FIELD(PAY.RECORDS,',',9):',MOBILE.NO::=':FIELD(PAY.RECORDS,',',10):','
    Y.OFS.DATA:= 'PHONE.NO::=':FIELD(PAY.RECORDS,',',11):',OTH.DETAILS1::=':FIELD(PAY.RECORDS,',',12):','
    Y.OFS.DATA:= 'OTH.DETAILS2::=':FIELD(PAY.RECORDS,',',13):',OTH.DETAILS3::=':FIELD(PAY.RECORDS,',',14):','
    Y.OFS.DATA:= 'OTH.DETAILS4::=':FIELD(PAY.RECORDS,',',15):',OTH.DETAILS5::=':FIELD(PAY.RECORDS,',',16):','
    Y.OFS.DATA:= 'COMP.CHARGE.ID::=':COMP.CHG.ID:',COMP.CHARGE.AMT::=':COMP.CHG.AMT:',PAYMENT.STATUS::=UNPAID'
    Y.OFS.DATA.ARRAY = Y.OFS.DATA
    GOSUB POST.OFS.REQUESTS

    RETURN

******************
POST.OFS.REQUESTS:
******************

    OFS$SOURCE.ID = Y.OFS.SOURCE.ID
    R.OFS.SOURCE = "" ; R.ERR = ""
    CALL F.READ(FN.OFS.SOURCE,Y.OFS.SOURCE.ID,R.OFS.SOURCE,F.OFS.SOURCE,R.ERR)
    IF R.ERR THEN
        DISPLAY "MISSING OFS.SOURCE RECORD" : R.ERR
    END
    OFS$SOURCE.REC = R.OFS.SOURCE
    IF POST.BATCH.CNTR EQ "1" THEN
        Y.OFS.ARR.TEMP = Y.OFS.DATA
    END ELSE
        Y.OFS.ARR.TEMP = Y.OFS.DATA.ARRAY
    END
    CALL OFS.BULK.MANAGER(Y.OFS.ARR.TEMP,OFS.RESP,"")
    CHANGE '</request><request>' TO FM IN OFS.RESP
    CHANGE '<requests><request>' TO '' IN OFS.RESP
    CHANGE '</request></requests>' TO '' IN OFS.RESP
    IF POST.BATCH.CNTR EQ "1" THEN
        Y.PAY.BAT.STATUS = FIELD(OFS.RESP,'/',3)[1,1]
        IF Y.PAY.BAT.STATUS EQ "1" THEN
            Y.PAY.BAT.ID = FIELD(OFS.RESP,'/',1)
            POST.BATCH.CNTR +=1
        END ELSE
            Y.PAY.BAT.REC = OFS.RESP
            ERR.CODE = 5 ; Y.OFS.DATA.ARRAY = "-1"
        END
    END ELSE
        Y.PAY.DET.STATUS = FIELD(OFS.RESP,'/',3)[1,1]
        IF Y.PAY.DET.STATUS EQ "1" THEN
            POST.BATCH.CNTR +=1
            Y.PAY.DET.ID<-1> = FIELD(OFS.RESP,'/',1)
        END ELSE
            Y.PAY.DET.REC<-1> = OFS.RESP
            Y.FAULT.REC = "-1"
            Y.OFS.DATA.ARRAY = "-1"
        END
    END
    RETURN

********************
DELETE.INAU.RECORDS:
********************

    IF Y.FAULT.REC EQ "-1" THEN
        Y.DEL.DATA = 'PAYMENT.BATCHES,/D/PROCESS,,':Y.PAY.BAT.ID
        Y.INAU.CNT = DCOUNT(Y.PAY.DET.ID,FM)
        FOR DEL.CNT = 1 TO Y.INAU.CNT
            Y.DEL.DATA<-1> = 'PAYMENT.DETAILS,/D/PROCESS,,':Y.PAY.DET.ID<DEL.CNT>
            CALL OFS.BULK.MANAGER(Y.DEL.DATA,DEL.RESP,"")
            Y.DEL.DATA = ''
        NEXT DEL.CNT
        ERR.CODE = "5"
    END

    RETURN

******************
WRITE.CONCAT.FILE:
******************

    CHANGE FM TO VM IN Y.PAY.DET.ID
    Y.PAY.DET.ID1 = Y.PAY.DET.ID
    R.PAY.CONCAT<PLCF.PAY.ID> = Y.PAY.DET.ID1
    CALL F.WRITE(FN.PAY.CONCAT,Y.PAY.BAT.ID,R.PAY.CONCAT)

    RETURN

END
